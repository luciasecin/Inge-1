

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (13 May 2023 18:59:52) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/linux64 (1)/linux64/CuisUniversity-5706.image!


----End fileIn of /home/paula/Documents/COMPUTACION/Inge1-1c2023/MarsRovers.st----!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:04:30' prior: 50603963!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 1@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:05:10' prior: 50604039!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:05:11'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:05:11'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:05:11'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:05:11'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:05:22' prior: 50603975!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:06:34' prior: 50604076!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:09:47' prior: 50604088!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:10:00'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:10:21' prior: 50604017!
recibirComandos: aStringWithCommands
	^-1@0
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:10:22'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:10:22'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:10:22'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:10:22'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:10:34' prior: 50604115!
recibirComandos: aStringWithCommands
	! !

!methodRemoval: MarsRovers #position stamp: 'pau 5/13/2023 19:10:59'!
position
	^position!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:11:14' prior: 50604132!
recibirComandos: aStringWithCommands
	position := -1@0! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:11:15'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:11:15'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:11:16'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:11:16'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:11:35' prior: 50604140!
recibirComandos: aStringWithCommands
	position := -1@0.! !

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:11:53'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:11:58'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:12:36' prior: 50604158!
recibirComandos: aStringWithCommands
	aStringWithCommands  = 'f' ifTrue: [position = -1@0].! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:12:37'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:12:37'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:12:37'!
ERROR!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:12:37'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:12:50' prior: 50604169!
recibirComandos: aStringWithCommands
	aStringWithCommands  = 'f' ifTrue: [position := -1@0].! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:12:51'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:12:51'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:12:51'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:13:46'!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:13:55' prior: 50604203!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:13:57'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:14:49' prior: 50604188!
recibirComandos: aStringWithCommands
	aStringWithCommands  = 'f' ifTrue: [position := -1@0].
	aStringWithCommands = 'b' ifTrue: [position := 1@0]! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:14:50'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:14:51'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:14:51'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:14:51'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:17:31' prior: 50604232!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - 1@0].
			    aStringWithCommands = 'b' ifTrue: [position := position + 1@0]]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:17:33'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:17:33'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:17:33'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:17:33'!
ERROR!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:17:36'!
ERROR!

0@0 - 1@1!

0@0 - (1@1)!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:18:16' prior: 50604253!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)]]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:18:17'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:18:17'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:18:17'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:18:17'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:38:52'!
test04RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'e'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:39:00'!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'e'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!methodRemoval: TestMarsRovers #test04RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:39:00'!
test04RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'e'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:40:06' prior: 50604315!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'e'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:40:07'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:40:56' prior: 50604280!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)].
			   aStringWithCommands = 'e' ifTrue: []
			     ]
	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:42:49' prior: 50604355!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)].
			   aStringWithCommands = 'e' ifTrue: [pointingDirection := #Este].
			     ]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:42:51'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:42:51'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:42:51'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:42:51'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:42:51'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:43:09'!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'o'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:43:31' prior: 50604367!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)].
			   aStringWithCommands = 'e' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = '0' ifTrue: [pointingDirection := #Oeste].
			     ]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:43:32'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:43:32'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:43:32'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:43:32'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:43:32'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:43:32'!
FAILURE!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:43:32'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:43:40' prior: 50604408!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)].
			   aStringWithCommands = 'e' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'o' ifTrue: [pointingDirection := #Oeste].
			     ]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:43:41'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:43:41'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:43:41'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:43:41'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:43:41'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:43:41'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:44:05' prior: 50604396!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 't'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:45:42' prior: 50604481!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 't'.
	
	! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:49:57' prior: 50604100!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:51:05' prior: 50604446!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0)].
			   aStringWithCommands = 'e' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'o' ifTrue: [pointingDirection := #Oeste].
			     ]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:51:06'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:57:14'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:57:27' prior: 50604216!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:57:31'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:57:45' prior: 50604515!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'e' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'o' ifTrue: [pointingDirection := #Oeste].
			     ]
	! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:58:32' prior: 50604494!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'e'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:58:34'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:58:49' prior: 50604584!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'o'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:58:52'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:58:52'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:59:49' prior: 50604339!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 19:59:56' prior: 50604600!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 19:59:58'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:00:07' prior: 50604569!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste].
			     ]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:00:13'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:00:13'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:00:13'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:00:13'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:00:13'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:00:13'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:00:24'!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:02:45' prior: 50604699!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.

	[robot recibirComandos: 'i'] on: Error 
	do: [:error | self assert: 'Comando Invalido' equals: error messageText]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:02:49'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:02:49'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:03:10' prior: 50604711!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.

	[robot recibirComandos: 'i'] on: Error 
	do: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:03:11'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:03:11'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:04:24' prior: 50604748!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:04:25'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:04:31' prior: 50604785!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	^self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:04:32'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:04:37' prior: 50604800!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:04:38'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:05:23' prior: 50604665!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1)].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:05:25'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:05:25'!
ERROR!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:05:25'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:05:25'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:05:25'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:05:25'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:05:25'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:06:13' prior: 50604830!
recibirComandos: aStringWithCommands
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [^position := position - (0@1).].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:06:14'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:06:14'!
ERROR!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:06:14'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:06:14'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:06:14'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:06:14'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:06:14'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:06:17'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:07:01' prior: 50604869!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [^position := position - (0@1).].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:07:06'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:07:06'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:07:06'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:07:06'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:07:06'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:07:06'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:07:06'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:07:27' prior: 50604911!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1).].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:07:29'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:07:29'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:07:29'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:07:29'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:07:29'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:07:29'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:07:29'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:07:40' prior: 50604952!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [^position := position - (0@1).].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:08:05' prior: 50604993!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1).].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:08:11'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:08:11'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:08:11'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:08:11'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:08:11'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:08:11'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:08:11'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:08:34' prior: 50605011!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:08:35'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:08:35'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:08:35'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:08:35'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:08:35'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:08:35'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:08:35'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:08:58' prior: 50605052!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:09:00'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:10:00'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:10:00'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:11:40'!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:11:41'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:12:27' prior: 50605093!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [^0@1]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:12:29'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:12:29'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:12:29'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:12:47' prior: 50605175!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [position := 0@1]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:12:48'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:12:48'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:13:44'!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:13:45'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:14:14' prior: 50605224!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:14:15'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:14:15'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:14:29'!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:19:11' prior: 50605338!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:19:11'!
FAILURE!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:19:45'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:19:45'!
FAILURE!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:19:45'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:20:41' prior: 50605285!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			]
	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:20:51' prior: 50605402!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:20:52'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:20:52'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:21:13'!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:21:14'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:22:05' prior: 50605429!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]. 
			
			]
	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:23:21'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:23:21'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:23:44' prior: 50604815!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:23:47'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:24:46' prior: 50605504!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]
			  						ifFalse: [self error: 'Comando Invalido']].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	
	^self error: 'Comando Invalido'
									

	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:24:51' prior: 50605584!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:24:53'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:25:11'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:26:05'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:26:05'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:33:27'!
test12RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:33:39' prior: 50605569!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:41'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:33:46'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:33:46'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:34:19'!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:34:22'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:35:00' prior: 50605615!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [position := 1@0].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:35:01'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:01'!
ERROR!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:01'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:35:18' prior: 50605871!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [position := 1@0. ^self].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:35:19'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:19'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:35:38' prior: 50605270!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:35:39'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:36:23' prior: 50605946!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1) ].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste ].
			^self].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].].
	
	^self error: 'Comando Invalido'
									

	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:36:54' prior: 50606034!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1) ].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste ].
			^self].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1)].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1)].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este].
			   ^self].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:37:02'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:02'!
FAILURE!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:02'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:37:02'!
FAILURE!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:02'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:35:18' prior: 50606069!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [position := 1@0. ^self].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:50'!
FAILURE!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:50'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:37:50'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:38:28' prior: 50606145!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].].
	
	^self error: 'Comando Invalido'
									

	! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:38:29'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:38:29'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:39:26'!
test14RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:27'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:39:42' prior: 50606019!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:44'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:39:52' prior: 50606356!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:39:53'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:40:49'!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:40:52'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:41:29' prior: 50606221!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  ].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:41:31'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:31'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:41:50'!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:41:51'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:42:06' prior: 50606445!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:07'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:42:26'!
test17RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test17RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:28'!
PASSED!

!methodRemoval: TestMarsRovers #test17RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:42:47'!
test17RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:43:06' prior: 50605856!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:43:20'!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:21'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:43:55' prior: 50606546!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	pointingDirection = #Oeste
		ifTrue: [ position := -1@0. ^self].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:43:56'!
FAILURE!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:12'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:44:36' prior: 50606743!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [ position := -1@0. ^self].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:44:51'!
FAILURE!

robot currentPosition!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:46:17' prior: 50606728!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (-1@0) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:20'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:46:33' prior: 50607000!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (-1)@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:35'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:46:42' prior: 50607072!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:46:56' prior: 50607144!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  -2@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:46:57'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:47:03' prior: 50607156!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:04'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:47:13' prior: 50607171!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (-1@0) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:15'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:47:21' prior: 50607242!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (-2@0) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:22'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:47:48' prior: 50607314!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (0@0 - 1@0) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:47:49'!
ERROR!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:48:07' prior: 50607329!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  (0@0 - (1@0)) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:08'!
FAILURE!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:48:18'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:48:45' prior: 50607344!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  ((0@0) - (1@0)) equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

arg x!

((0@0) - (1@0))!

robot currentPosition!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
FAILURE!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:50:23'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:50:40' prior: 50607475!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:50:55' prior: 50606717!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Este.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:23'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:51:26'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:51:27'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:27'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:51:46'!
test18RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 20:51:48'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:52:11' prior: 50606901!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 20:52:12'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:52:44'!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:52:45'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:53:08' prior: 50607643!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:09'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:09'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:53:28'!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:29'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 20:53:48' prior: 50607761!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 20:53:49'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:00:49'!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:00:52'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:02:23' prior: 50607885!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			aStringWithCommands  = 'ff' ifTrue: [position := position - (0@2). ^self].].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:02:26'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:02:26'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:02:42'!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:02:48' prior: 50608133!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:02:49'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:03:36' prior: 50608014!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			aStringWithCommands  = 'ff' ifTrue: [position := position - (0@2). ^self].
			aStringWithCommands  = 'fb' ifTrue: [position := position- (0@1)+ (0@1)   .^self].].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:03:37'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:03:37'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:04:52' prior: 50608160!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands = 'f' ifTrue: [position := position - (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
			  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			aStringWithCommands  = 'ff' ifTrue: [position := position - (0@2). ^self].
			aStringWithCommands  = 'fb' ifTrue: [position := position- (0@1)+ (0@1)   .^self].].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:05:47' prior: 50608285!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [
				aStringWithCommands = 'f' ifTrue: [position := position - (0@1). ^self].
				    aStringWithCommands = 'b' ifTrue: [position := position + (0@1). ^self].
				   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Este. ^self].
				  aStringWithCommands = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:50'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:05:50'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:50'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:50'!
ERROR!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:05:50'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:50'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:05:51'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:05:51'!
ERROR!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:05:51'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:06:24' prior: 50608341!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = 'f' ifTrue: [position := position - (0@1). ^self].
				instruction = 'b' ifTrue: [position := position + (0@1). ^self].
				instruction = 'l' ifTrue: [pointingDirection := #Este. ^self].
				instruction = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			]].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:26'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:06:26'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:26'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:26'!
ERROR!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:26'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:27'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:06:27'!
ERROR!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:06:27'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:06:44' prior: 50608462!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = 'f' ifTrue: [position := position - (0@1). ^self].
				instruction = 'b' ifTrue: [position := position + (0@1). ^self].
				instruction = 'l' ifTrue: [pointingDirection := #Este. ^self].
				instruction = 'r' ifTrue: [pointingDirection := #Oeste. ^self].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:06:55' prior: 50608582!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = 'f' ifTrue: [position := position - (0@1)].
				instruction = 'b' ifTrue: [position := position + (0@1)].
				instruction = 'l' ifTrue: [pointingDirection := #Este].
				instruction = 'r' ifTrue: [pointingDirection := #Oeste].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:06:57'!
FAILURE!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:06:57'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:01'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:07:56' prior: 50608633!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:07:57'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:07:57'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:07:57'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:09:21' prior: 50608756!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste]
							ifFalse: [self error: 'Comando Invalido'].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:09:23'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:23'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:09:23'!
ERROR!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:09:23'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:09:28' prior: 50608879!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste]
							ifFalse: [^self error: 'Comando Invalido'].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:09:30'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:09:30'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:09:30'!
ERROR!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:09:30'!
ERROR!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:09:32'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:12:30' prior: 50609000!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste].
				 (#($f $b $l $r) includes: instruction) ifTrue: [^self error: 'Comando Invalido'].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
ERROR!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:12:32'!
ERROR!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
ERROR!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
ERROR!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:12:32'!
FAILURE!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:32'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:12:32'!
ERROR!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:12:32'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:12:45' prior: 50609124!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste].
				 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:12:46'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:12:46'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:13:01' prior: 50609246!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	pointingDirection = #Sur 
		ifTrue: [
			aStringWithCommands do: [:instruction|
				instruction = $f ifTrue: [position := position - (0@1)].
				instruction = $b ifTrue: [position := position + (0@1)].
				instruction = $l ifTrue: [pointingDirection := #Este].
				instruction = $r ifTrue: [pointingDirection := #Oeste].
				 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
			]. ^self ].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]].
	
	^self error: 'Comando Invalido'! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:13:02'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:13:02'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:14:01'!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:14:22' prior: 50609490!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Este equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:24'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:27'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:27'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:14:52' prior: 50609502!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: #Oeste equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:14:53'!
ERROR!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:16:39' prior: 50609368!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					^self].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. ].
	
	^self error: 'Comando Invalido'! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:16:46' prior: 50609679!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. ].
	
	^self error: 'Comando Invalido'! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:16:57' prior: 50609729!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. 
	 ^self].
	
	^self error: 'Comando Invalido'! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:18:21' prior: 50609779!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (0@1). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (0@1). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   aStringWithCommands = 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. 
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:18:56' prior: 50609829!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [instruction  = 'f' ifTrue: [position := position + (0@1). ^self].
			    instruction = 'b' ifTrue: [position := position - (0@1). ^self].
			  instruction = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   instruction= 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position + (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position - (1@0). ^self].
			aStringWithCommands = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. 
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:19:09' prior: 50609881!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [instruction  = 'f' ifTrue: [position := position + (0@1). ^self].
			    instruction = 'b' ifTrue: [position := position - (0@1). ^self].
			  instruction = 'l' ifTrue: [pointingDirection := #Oeste. ^self].
			   instruction= 'r' ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [instruction  = 'f' ifTrue: [position := position + (1@0). ^self].
			    instruction = 'b' ifTrue: [position := position - (1@0). ^self].
			instruction = 'l' ifTrue: [pointingDirection := #Norte. ^self].  
			instruction = 'r' ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [aStringWithCommands  = 'f' ifTrue: [position := position - (1@0). ^self].
			    aStringWithCommands = 'b' ifTrue: [position := position + (1@0). ^self].
			   aStringWithCommands = 'l' ifTrue: [pointingDirection := #Sur. ^self].
			aStringWithCommands = 'r' ifTrue: [pointingDirection := #Norte. ^self]]. 
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:20:27' prior: 50609932!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [instruction = $f ifTrue: [position := position + (0@1). ^self].
			    instruction = $b ifTrue: [position := position - (0@1). ^self].
			  instruction = $l ifTrue: [pointingDirection := #Oeste. ^self].
			   instruction = $r ifTrue: [pointingDirection := #Este. ^self]].
	pointingDirection = #Este
		ifTrue: [instruction = $f ifTrue: [position := position + (1@0). ^self].
			    instruction = $b ifTrue: [position := position - (1@0). ^self].
			instruction = $l ifTrue: [pointingDirection := #Norte. ^self].  
			instruction = $r ifTrue: [pointingDirection := #Sur. ^self]].
	
	pointingDirection = #Oeste
		ifTrue: [instruction = $f ifTrue: [position := position - (1@0). ^self].
			    instruction = $b ifTrue: [position := position + (1@0). ^self].
			   instruction = $l ifTrue: [pointingDirection := #Sur. ^self].
			instruction = $r ifTrue: [pointingDirection := #Norte. ^self]]. 
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
FAILURE!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
FAILURE!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:20:57'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:20:57'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:21:51' prior: 50609982!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].
					].
	pointingDirection = #Norte 
		ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
			    instruction = $b ifTrue: [position := position - (0@1)].
			  instruction = $l ifTrue: [pointingDirection := #Oeste].
			   instruction = $r ifTrue: [pointingDirection := #Este]].
	pointingDirection = #Este
		ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
			    instruction = $b ifTrue: [position := position - (1@0)].
			instruction = $l ifTrue: [pointingDirection := #Norte].  
			instruction = $r ifTrue: [pointingDirection := #Sur]].
	
	pointingDirection = #Oeste
		ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
			    instruction = $b ifTrue: [position := position + (1@0)].
			   instruction = $l ifTrue: [pointingDirection := #Sur].
			instruction = $r ifTrue: [pointingDirection := #Norte]]. 
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
FAILURE!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
FAILURE!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
FAILURE!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
FAILURE!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:21:53'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:21:53'!
FAILURE!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:23:16'!
FAILURE!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:23:57'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:27:09' prior: 50610103!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
		ifFalse:[
			pointingDirection = #Norte 
				ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
					    instruction = $b ifTrue: [position := position - (0@1)].
					  instruction = $l ifTrue: [pointingDirection := #Oeste].
					   instruction = $r ifTrue: [pointingDirection := #Este]]
				ifFalse:[
			
			pointingDirection = #Este
				ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
					    instruction = $b ifTrue: [position := position - (1@0)].
					instruction = $l ifTrue: [pointingDirection := #Norte].  
					instruction = $r ifTrue: [pointingDirection := #Sur]]
				ifFalse: [
			
			pointingDirection = #Oeste
				ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
					    instruction = $b ifTrue: [position := position + (1@0)].
					   instruction = $l ifTrue: [pointingDirection := #Sur].
					instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:27:50' prior: 50610228!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #Norte 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #Norte].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:27:52'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:22'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:28:23'!
PASSED!

Object subclass: #DirectionState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #DirectionState category: 'MarsRovers' stamp: 'pau 5/13/2023 21:29:59'!
Object subclass: #DirectionState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

DirectionState subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Norte category: 'MarsRovers' stamp: 'pau 5/13/2023 21:30:12'!
DirectionState subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

DirectionState subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Sur category: 'MarsRovers' stamp: 'pau 5/13/2023 21:30:17'!
DirectionState subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

DirectionState subclass: #Este
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Este category: 'MarsRovers' stamp: 'pau 5/13/2023 21:30:21'!
DirectionState subclass: #Este
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

DirectionState subclass: #Oeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!

!classDefinition: #Oeste category: 'MarsRovers' stamp: 'pau 5/13/2023 21:30:24'!
DirectionState subclass: #Oeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRovers'!
!Este methodsFor: 'nil' stamp: 'pau 5/13/2023 21:31:57' overrides: 16901772!
=algo
	^self class = #Este! !
!Norte methodsFor: 'nil' stamp: 'pau 5/13/2023 21:32:09' overrides: 16901772!
=algo
	^self class = #Norte! !
!Oeste methodsFor: 'nil' stamp: 'pau 5/13/2023 21:32:15' overrides: 16901772!
=algo
	^self class = #Oeste! !
!Sur methodsFor: 'no messages' stamp: 'pau 5/13/2023 21:32:23' overrides: 16901772!
=algo
	^self class = #Sur! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:33:13' prior: 50603952!
test01RobotArrancaEnLaPosInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:34:25' prior: 50604503!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:34:27'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:34:46' prior: 50604051!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: #Sur equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:34:48'!
FAILURE!
!Sur methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:36:58' prior: 50610535 overrides: 16901772!
=algo
	^self class = algo! !
!Sur methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:37:11' prior: 50610581 overrides: 16901772!
=algo
	^#Sur = algo! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:37:18' prior: 50610531 overrides: 16901772!
=algo
	^algo = #Oeste! !
!Norte methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:37:25' prior: 50610527 overrides: 16901772!
=algo
	^algo= #Norte! !
!Este methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:37:31' prior: 50610523 overrides: 16901772!
=algo
	^algo = #Este! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:37:32'!
FAILURE!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:37:32'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
FAILURE!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:37:32'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:37:35'!
FAILURE!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:38:09' prior: 50610539!
test01RobotArrancaEnLaPosInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: Norte new equals: robot currentPointingDirection.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:38:10'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
FAILURE!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:10'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:10'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:38:57' prior: 50610681!
test01RobotArrancaEnLaPosInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:38:58'!
FAILURE!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
FAILURE!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:58'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:38:58'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:39:16' prior: 50610565!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #Sur.! !

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
FAILURE!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'pau 5/13/2023 21:39:18'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'pau 5/13/2023 21:39:18'!
FAILURE!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:41:50' prior: 50610276!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		pointingDirection recibirComandos: instruction.
		"
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #Norte 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #Norte].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].]."
	 ].
	^self.! !
!Este methodsFor: 'nil' stamp: 'pau 5/13/2023 21:42:03'!
recibirComandos: instruction
	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:43:31' prior: 50610946!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		pointingDirection sendCommand: instruction to: self.
		"
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #Norte 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #Norte].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].]."
	 ].
	^self.! !
!Este methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:43:53'!
sendCommand: instruction to: rover! !
!Este methodsFor: 'as yet unclassified' stamp: 'pau 5/13/2023 21:48:03' prior: 50611052!
sendCommand: instruction to: rover
	rover pointingEastReceiveCommand: instruction.! !

----SNAPSHOT----(13 May 2023 21:50:14) CuisUniversity-5706.image priorSource: 8713034!

----QUIT----(13 May 2023 21:50:19) CuisUniversity-5706.image priorSource: 8941141!

----STARTUP---- (13 May 2023 22:06:13) as /home/lucy/Documents/Mars Rover/linux64/CuisUniversity-5706.image!

!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:09:03' prior: 50610550!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:09:26' prior: 50611001!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #Norte 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #Norte].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:09:29'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:09:49' prior: 50604553!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:10:06' prior: 50604636!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Este.! !

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:09'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:10:31' prior: 50604649!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:34'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:10:42' prior: 50605762!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:10:42'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:10:52' prior: 50605160!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: #Norte equals: robot currentPointingDirection.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:11:11' prior: 50611486!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:19'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:11:37' prior: 50606371!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:11:52' prior: 50605351!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:11:53'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:12:07' prior: 50605488!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Este.! !

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:08'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:12:22' prior: 50605750!
test12RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:12:24'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:12:46' prior: 50607560!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Este.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:13:03' prior: 50606297!
test14RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Este.! !

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:03'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:13:32'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:13:57' prior: 50606429!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:00'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:14:17' prior: 50606530!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:19'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:14:56' prior: 50607548!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Oeste new.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:14:57'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:15:36' prior: 50607628!
test18RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Oeste new.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:15:50' prior: 50607745!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:16:13' prior: 50607869!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:16:28' prior: 50607999!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:16:56' prior: 50608145!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:17:09' prior: 50609664!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Norte.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:17:51'!
test01RobotEmpiezaEnLaPosicionInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.! !

!methodRemoval: TestMarsRovers #test01RobotArrancaEnLaPosInicial stamp: 'lucy 5/13/2023 22:17:51'!
test01RobotArrancaEnLaPosInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Norte.!

Norte!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:09' prior: 50612379!
test01RobotEmpiezaEnLaPosicionInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:14' prior: 50611498!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Norte new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:23' prior: 50611586!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:27' prior: 50611598!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:41' prior: 50612438!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:46' prior: 50611687!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Este.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:51' prior: 50612040!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:23:56' prior: 50612331!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:24:09' prior: 50612368!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:24:18' prior: 50612451!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Oeste.! !
!Norte methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:24:27' prior: 50610596 overrides: 16901772!
=algo
	^algo= #North! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:24:31' prior: 50611083!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #Norte].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #Norte]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
FAILURE!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:24:37'!
FAILURE!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:24:37'!
PASSED!
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:25:41' prior: 50612532!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #Sur 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:25:49'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:26:15' prior: 50610855!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:26:22' prior: 50611071!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:26:33' prior: 50611207!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:26:38' prior: 50612129!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:26:49' prior: 50612318!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Oeste.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:08' prior: 50612344!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #Sur.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:16' prior: 50612848!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:23' prior: 50612356!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #Sur.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:28' prior: 50612872!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!Sur methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:34' prior: 50610586 overrides: 16901772!
=algo
	^#South = algo! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:39' prior: 50612660!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #Sur]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:27:49' prior: 50612900!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #Sur].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:28:00' prior: 50612951!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #Este].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:28:07'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:29:39' prior: 50611220!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:29:49' prior: 50612464!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:30:03' prior: 50611864!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:30:15' prior: 50611876!
test14RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Este new.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!Este methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:30:45' prior: 50610601 overrides: 16901772!
=algo
	^algo = #East! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:31:00' prior: 50613002!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #Este]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:31:08' prior: 50613184!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #Este
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:31:19' prior: 50613235!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #Oeste].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:31:22'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:05' prior: 50611309!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:11' prior: 50612515!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:17' prior: 50612218!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Oeste new.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:25' prior: 50612306!
test18RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Oeste new.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:32' prior: 50612835!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:39' prior: 50612490!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:32:46' prior: 50612503!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:33:08' prior: 50610591 overrides: 16901772!
=algo
	^algo = #West! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:33:17' prior: 50613286!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #Oeste].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #Oeste
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:33:29' prior: 50613506!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:33:32'!
PASSED!

!classRenamed: #Este as: #East stamp: 'lucy 5/13/2023 22:34:22'!
Smalltalk renameClassNamed: #Este as: #East!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613156!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613557!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613180 overrides: 16901772!
=algo
	^algo = #East! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613130!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613143!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50613168!
test14RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50612822!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:22' prior: 50612477!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!classRenamed: #Norte as: #NOrth stamp: 'lucy 5/13/2023 22:34:42'!
Smalltalk renameClassNamed: #Norte as: #NOrth!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:42' prior: 50612414!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: NOrth new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:42' prior: 50611776!
test12RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: NOrth new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:42' prior: 50612402!
test01RobotEmpiezaEnLaPosicionInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: NOrth new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!classRenamed: #NOrth as: #North stamp: 'lucy 5/13/2023 22:34:50'!
Smalltalk renameClassNamed: #NOrth as: #North!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613427!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613477!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613490!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613770!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50612426!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613848!
test01RobotEmpiezaEnLaPosicionInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50612528 overrides: 16901772!
=algo
	^algo= #North! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613824!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613808!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613701!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:34:50' prior: 50613836!
test12RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!classRenamed: #Oeste as: #West stamp: 'lucy 5/13/2023 22:35:05'!
Smalltalk renameClassNamed: #Oeste as: #West!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613863!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613876!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613889!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613464!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613414!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: Sur new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613452!
test18RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613502 overrides: 16901772!
=algo
	^algo = #West! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613967!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:05' prior: 50613440!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!classRenamed: #Sur as: #South stamp: 'lucy 5/13/2023 22:35:18'!
Smalltalk renameClassNamed: #Sur as: #South!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612884!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612785!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50614115!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612896 overrides: 16901772!
=algo
	^#South = algo! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50614086!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50614073!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50613757!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612809!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612860!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50612797!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50611398!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:18' prior: 50613795!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!testRun: #TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:35:23'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:35:51'!
test01RobotStartsAtInitialPosition

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test01RobotEmpiezaEnLaPosicionInicial stamp: 'lucy 5/13/2023 22:35:51'!
test01RobotEmpiezaEnLaPosicionInicial

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:36:22'!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test02ElComandoVacioNoMueveAlRobot stamp: 'lucy 5/13/2023 22:36:22'!
test02ElComandoVacioNoMueveAlRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:36:56'!
test03RobotMovesForwardsPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test03RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:36:56'!
test03RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:37:22'!
test04RobotMovesBackwardsPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur stamp: 'lucy 5/13/2023 22:37:22'!
test04RobotSeMueve1vezHaciaAtrasApuntandoAlSur

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:41:02'!
test05RotatesLeftToEastWhenPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: TestMarsRovers #test05RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:41:02'!
test05RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:41:29'!
test03RobotMovesForwardsWhenPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test03RobotMovesForwardsPointingSouth stamp: 'lucy 5/13/2023 22:41:29'!
test03RobotMovesForwardsPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:42:04'!
test03RobotPointingSouthMovesForward

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test03RobotMovesForwardsWhenPointingSouth stamp: 'lucy 5/13/2023 22:42:04'!
test03RobotMovesForwardsWhenPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:42:21'!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test04RobotMovesBackwardsPointingSouth stamp: 'lucy 5/13/2023 22:42:21'!
test04RobotMovesBackwardsPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:42:58'!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: TestMarsRovers #test05RotatesLeftToEastWhenPointingSouth stamp: 'lucy 5/13/2023 22:42:58'!
test05RotatesLeftToEastWhenPointingSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:43:24'!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test06RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:43:24'!
test06RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:44:10'!
test03RobotPointingSouthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test03RobotPointingSouthMovesForward stamp: 'lucy 5/13/2023 22:44:10'!
test03RobotPointingSouthMovesForward

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:44:42'!
test07RobotPointingSouthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!methodRemoval: TestMarsRovers #test07RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:44:42'!
test07RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:45:35'!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test08RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:45:35'!
test08RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	robot recibirComandos: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:45:55'!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test09RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:45:55'!
test09RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:46:23'!
test10RobotPointingNorthRotatesLeftToest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test10RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:46:23'!
test10RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:46:36'!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test10RobotPointingNorthRotatesLeftToest stamp: 'lucy 5/13/2023 22:46:36'!
test10RobotPointingNorthRotatesLeftToest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:46:55'!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: TestMarsRovers #test11RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:46:55'!
test11RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!

!testRun: #TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:47:05'!
PASSED!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:47:23'!
test12RobotPointingNorthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !

!methodRemoval: TestMarsRovers #test12RobotSeMueveInvalido stamp: 'lucy 5/13/2023 22:47:23'!
test12RobotSeMueveInvalido

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self should: [robot recibirComandos: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:50:12'!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: TestMarsRovers #test13RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:50:12'!
test13RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:50:29'!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: TestMarsRovers #test14RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:50:29'!
test14RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:51:47'!
test15RobotPointingEastRotatesNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test15RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:51:47'!
test15RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:52:05'!
test16RobotPointingEastRotatesSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test16RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:52:05'!
test16RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:52:35'!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test16RobotPointingEastRotatesSouth stamp: 'lucy 5/13/2023 22:52:35'!
test16RobotPointingEastRotatesSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:52:45'!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test15RobotPointingEastRotatesNorth stamp: 'lucy 5/13/2023 22:52:45'!
test15RobotPointingEastRotatesNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:53:12'!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test17RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:53:12'!
test17RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:53:33'!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test18RobotSeMueve1vez stamp: 'lucy 5/13/2023 22:53:33'!
test18RobotSeMueve1vez

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot recibirComandos: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:53:55'!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test19RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:53:55'!
test19RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:54:22'!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !

!methodRemoval: TestMarsRovers #test20RobotSeMueve1vezCambiaLaDireccion stamp: 'lucy 5/13/2023 22:54:22'!
test20RobotSeMueve1vezCambiaLaDireccion

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot recibirComandos: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:54:53'!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test21RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:54:53'!
test21RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:55:57'!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !

!methodRemoval: TestMarsRovers #test22RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:55:57'!
test22RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot recibirComandos: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 22:56:55'!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!methodRemoval: TestMarsRovers #test23RobotSeMueve2veces stamp: 'lucy 5/13/2023 22:56:55'!
test23RobotSeMueve2veces

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot recibirComandos: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.!
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:02'!
receiveCommands: instruction
	! !
!MarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03'!
receiveCommands: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614969!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614602!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614651!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615228!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot receiveCommands: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614794!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615111!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot receiveCommands: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614700!
test07RobotPointingSouthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614819!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614724!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	robot receiveCommands: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614922!
test12RobotPointingNorthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: North new.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615158!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615088!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: West new.
	
	robot receiveCommands: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614747!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #North.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614946!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot receiveCommands: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615134!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #West.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615040!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615064!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: East new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614676!
test03RobotPointingSouthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot receiveCommands: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615205!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot receiveCommands: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50615182!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: #South.
	
	robot receiveCommands: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614457!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot receiveCommands: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:04:03' prior: 50614626!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRovers in: initialPos pointing: South new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !

!methodRemoval: East #recibirComandos: stamp: 'lucy 5/13/2023 23:04:03'!
recibirComandos: instruction
	!

!methodRemoval: MarsRovers #recibirComandos: stamp: 'lucy 5/13/2023 23:04:03'!
recibirComandos: aStringWithCommands
	aStringWithCommands  isEmpty ifTrue: [^self].
	aStringWithCommands do: [:instruction|
		 (#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		"pointingDirection sendCommand: instruction to: self."
		pointingDirection = #South 
			ifTrue: [instruction = $f ifTrue: [position := position - (0@1)].
					instruction = $b ifTrue: [position := position + (0@1)].
					instruction = $l ifTrue: [pointingDirection := #East].
					instruction = $r ifTrue: [pointingDirection := #West].]
			ifFalse:[
				pointingDirection = #North 
					ifTrue: [instruction = $f ifTrue: [position := position + (0@1)].
						    instruction = $b ifTrue: [position := position - (0@1)].
						  instruction = $l ifTrue: [pointingDirection := #West].
						   instruction = $r ifTrue: [pointingDirection := #East]]
					ifFalse:[
				
					pointingDirection = #East
						ifTrue: [instruction = $f ifTrue: [position := position + (1@0)].
							    instruction = $b ifTrue: [position := position - (1@0)].
							instruction = $l ifTrue: [pointingDirection := #North].  
							instruction = $r ifTrue: [pointingDirection := #South]]
						ifFalse: [
					
						pointingDirection = #West
							ifTrue: [instruction = $f ifTrue: [position := position - (1@0)].
								    instruction = $b ifTrue: [position := position + (1@0)].
								   instruction = $l ifTrue: [pointingDirection := #South].
								instruction = $r ifTrue: [pointingDirection := #North]]. ].].].
	 ].
	^self.!

!testRun: #TestMarsRovers #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!testRun: #TestMarsRovers #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:04:06'!
PASSED!

!methodRemoval: East #receiveCommands: stamp: 'lucy 5/13/2023 23:05:23'!
receiveCommands: instruction
	!
!North methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:05:50'!
sendCommand: instruction to: rover
	rover pointingNorthReceiveCommand: instruction.! !
!South methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:06:12'!
sendCommand: instruction to: rover
	rover pointingSouthReceiveCommand: instruction.! !
!West methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:06:23'!
sendCommand: instruction to: rover
	rover pointingWestReceiveCommand: instruction.! !

!classRenamed: #MarsRovers as: #MarsRover stamp: 'lucy 5/13/2023 23:06:34'!
Smalltalk renameClassNamed: #MarsRovers as: #MarsRover!
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615521!
test03RobotPointingSouthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615533!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #South.
	
	robot receiveCommands: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615319!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615482!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #West.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615433!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #West.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615572!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615395!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #North.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615357!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #North.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615382!
test07RobotPointingSouthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615446!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615508!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50614435!
test01RobotStartsAtInitialPosition

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615458!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #North.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615495!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615344!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #North.
	
	robot receiveCommands: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615546!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: #South.
	
	robot receiveCommands: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615420!
test12RobotPointingNorthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615470!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615307!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615408!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'f'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615559!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection equals: #South.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615331!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRovers methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:06:34' prior: 50615370!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!classRenamed: #TestMarsRovers as: #TestMarsRover stamp: 'lucy 5/13/2023 23:06:43'!
Smalltalk renameClassNamed: #TestMarsRovers as: #TestMarsRover!
!MarsRover methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:07:41'!
pointingEastReceiveCommand: instruction

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:09:49' prior: 50616035!
pointingEastReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (1@0)].
	instruction = $b ifTrue: [position := position - (1@0)].
	instruction = $l ifTrue: [pointingDirection := #North].  
	instruction = $r ifTrue: [pointingDirection := #South]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:11:01'!
pointingWestReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (1@0)].
	instruction = $b ifTrue: [position := position - (1@0)].
	instruction = $l ifTrue: [pointingDirection := #North].  
	instruction = $r ifTrue: [pointingDirection := #South]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:11:10'!
pointingNorthReceiveCommand: instruction! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:11:26'!
pointingSouthReceiveCommand: instruction! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:11:37' prior: 50616040!
pointingEastReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (1@0)].
	instruction = $b ifTrue: [position := position - (1@0)].
	instruction = $l ifTrue: [pointingDirection := #North].  
	instruction = $r ifTrue: [pointingDirection := #South].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:12:33' prior: 50616073!
pointingEastReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (1@0)].
	instruction = $b ifTrue: [position := position - (1@0)].
	instruction = $l ifTrue: [pointingDirection := #North]. 
	instruction = $r ifTrue: [pointingDirection := #South].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:12:42' prior: 50616052!
pointingWestReceiveCommand: instruction
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:13:32' prior: 50616068!
pointingSouthReceiveCommand: instruction

	instruction = $f ifTrue: [position := position - (0@1)].
	instruction = $b ifTrue: [position := position + (0@1)].
	instruction = $l ifTrue: [pointingDirection := #East].
	instruction = $r ifTrue: [pointingDirection := #West].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:15:22' prior: 50616064!
pointingNorthReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (0@1)].
	instruction = $b ifTrue: [position := position - (0@1)].
	instruction = $l ifTrue: [pointingDirection := #West].
	instruction = $r ifTrue: [pointingDirection := #East]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:16:20' prior: 50616097!
pointingWestReceiveCommand: instruction

	instruction = $f ifTrue: [position := position - (1@0)].
	instruction = $b ifTrue: [position := position + (1@0)].
	instruction = $l ifTrue: [pointingDirection := #South].
	instruction = $r ifTrue: [pointingDirection := #North].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:16:29' prior: 50616114!
pointingNorthReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (0@1)].
	instruction = $b ifTrue: [position := position - (0@1)].
	instruction = $l ifTrue: [pointingDirection := #West].
	instruction = $r ifTrue: [pointingDirection := #East].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:20:50' prior: 50615255!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection sendCommand: instruction to: self.].
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:20:54' prior: 50616150!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		pointingDirection sendCommand: instruction to: self.].
	
	^self.! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:21:06'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:21:06'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:21:12'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:21:20'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:21:20'!
ERROR!
!DirectionState methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:22:18'!
sendCommand: instruction to: rover

	self subclassResponsibility ! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:22:24'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:22:24'!
ERROR!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:23:35'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:23:35'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:23:36'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:24:55'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:25:08'!
ERROR!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:10' prior: 50615893!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:16' prior: 50615830!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:24' prior: 50615817!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:44' prior: 50615778!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:52' prior: 50615791!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:26:58' prior: 50615931!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:27:05' prior: 50615753!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'fb'.
	
	self assert:  0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:27:13' prior: 50615918!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #West.! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:27:15'!
PASSED!

----SNAPSHOT----(13 May 2023 23:32:49) CuisUniversity-5706.image priorSource: 8941229!

!classRenamed: #DirectionState as: #Direction stamp: 'lucy 5/13/2023 23:34:04'!
Smalltalk renameClassNamed: #DirectionState as: #Direction!
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:35:37'!
coordinatesForwards

	
	! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:36:48' prior: 50616626!
coordinatesForwards

	^(1@0)! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:37:15'!
coordinatesBackwards

	^(-1@0)! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:37:40'!
directionLeft

	^#North! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:37:53'!
directionRight

	^#South! !
!North methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:44:41'!
coordinatesForwards

	^(0@1)! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:44:55'!
coordinatesBackwards

	^(0@1)! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:45:04' prior: 50616649!
coordinatesBackwards

	^(0@-1)! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:45:22'!
directionLeft

	^#West! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:45:33'!
directionRight

	^#East! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:46:02'!
directionLeft

	^#East! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:46:11'!
directionRight

	^#East! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:46:18' prior: 50616669!
directionRight

	^#West! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:46:59'!
coorinatesForwards

	^(0@-1)! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:47:13'!
coorinatesBackwards

	^(0@1)! !
!West methodsFor: 'nil' stamp: 'lucy 5/13/2023 23:49:48'!
coorinatesBackwards

	^(1@0)! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:50:03'!
coorinatesForwards

	^(-1@0)! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:50:37'!
directionRight

	^#North! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:50:49'!
directionLeft

	^#South! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:52:20' prior: 50616162!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + (1@0)].
		instruction = $b ifTrue: [position := position - (1@0)].
		instruction = $l ifTrue: [pointingDirection := #North]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionLeft].
	].
	
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:52:46' prior: 50616700!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + (1@0)].
		instruction = $b ifTrue: [position := position - (1@0)].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].
	].
	
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:53:32' prior: 50616719!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + pointingDirection coorinatesForwards].
		instruction = $b ifTrue: [position := position + pointingDirection coorinatesBackwards].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].
	].
	
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:53:41' prior: 50616739!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + pointingDirection coorinatesForwards].
		instruction = $b ifTrue: [position := position + pointingDirection coorinatesBackwards].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].
	].
	
	^self.! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:53:47'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:53:47'!
ERROR!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:53:47'!
ERROR!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:53:47'!
ERROR!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:53:47'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:53:47'!
ERROR!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:55:02'!
ERROR!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:55:02'!
ERROR!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:55:02'!
ERROR!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:55:02'!
ERROR!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:55:02'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:55:02'!
ERROR!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:55:38'!
ERROR!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:55:38'!
ERROR!
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:04'!
coordinatesBackwards

	^(0@1)! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:04'!
coordinatesBackwards

	^(1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:04' prior: 50616761!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + pointingDirection coorinatesForwards].
		instruction = $b ifTrue: [position := position + pointingDirection coordinatesBackwards].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].
	].
	
	^self.! !

!methodRemoval: South #coorinatesBackwards stamp: 'lucy 5/13/2023 23:56:04'!
coorinatesBackwards

	^(0@1)!

!methodRemoval: West #coorinatesBackwards stamp: 'lucy 5/13/2023 23:56:04'!
coorinatesBackwards

	^(1@0)!
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:16'!
coordinatesForwards

	^(0@-1)! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:16'!
coordinatesForwards

	^(-1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:56:16' prior: 50616956!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		instruction = $f ifTrue: [position := position + pointingDirection coordinatesForwards].
		instruction = $b ifTrue: [position := position + pointingDirection coordinatesBackwards].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].
	].
	
	^self.! !

!methodRemoval: South #coorinatesForwards stamp: 'lucy 5/13/2023 23:56:16'!
coorinatesForwards

	^(0@-1)!

!methodRemoval: West #coorinatesForwards stamp: 'lucy 5/13/2023 23:56:16'!
coorinatesForwards

	^(-1@0)!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/13/2023 23:56:33'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:58:38'!
executeCommand: instruction

	instruction = $f ifTrue: [position := position + pointingDirection coordinatesForwards].
		instruction = $b ifTrue: [position := position + pointingDirection coordinatesBackwards].
		instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
		instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:58:38' prior: 50616992!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		
		self executeCommand: instruction.
	].
	
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/13/2023 23:58:59' prior: 50617115!
receiveCommands: aStringWithCommands
	
	aStringWithCommands  isEmpty ifTrue: [^self].
	
	aStringWithCommands do: [:instruction|
		
		(#($f $b $l $r) includes: instruction) ifFalse: [^self error: 'Comando Invalido'].
		self executeCommand: instruction.
	].
	
	^self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:00:21' prior: 50617100!
executeCommand: instruction

	instruction = $f ifTrue: [position := position + pointingDirection coordinatesForwards].
	instruction = $b ifTrue: [position := position + pointingDirection coordinatesBackwards].
	instruction = $l ifTrue: [pointingDirection := pointingDirection directionLeft]. 
	instruction = $r ifTrue: [pointingDirection := pointingDirection directionRight].! !

!methodRemoval: MarsRover #pointingEastReceiveCommand: stamp: 'lucy 5/14/2023 00:00:33'!
pointingEastReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (1@0)].
	instruction = $b ifTrue: [position := position - (1@0)].
	instruction = $l ifTrue: [pointingDirection := #North]. 
	instruction = $r ifTrue: [pointingDirection := #South].!

!methodRemoval: MarsRover #pointingNorthReceiveCommand: stamp: 'lucy 5/14/2023 00:00:36'!
pointingNorthReceiveCommand: instruction

	instruction = $f ifTrue: [position := position + (0@1)].
	instruction = $b ifTrue: [position := position - (0@1)].
	instruction = $l ifTrue: [pointingDirection := #West].
	instruction = $r ifTrue: [pointingDirection := #East].!

!methodRemoval: MarsRover #pointingSouthReceiveCommand: stamp: 'lucy 5/14/2023 00:00:39'!
pointingSouthReceiveCommand: instruction

	instruction = $f ifTrue: [position := position - (0@1)].
	instruction = $b ifTrue: [position := position + (0@1)].
	instruction = $l ifTrue: [pointingDirection := #East].
	instruction = $r ifTrue: [pointingDirection := #West].!

!methodRemoval: MarsRover #pointingWestReceiveCommand: stamp: 'lucy 5/14/2023 00:00:41'!
pointingWestReceiveCommand: instruction

	instruction = $f ifTrue: [position := position - (1@0)].
	instruction = $b ifTrue: [position := position + (1@0)].
	instruction = $l ifTrue: [pointingDirection := #South].
	instruction = $r ifTrue: [pointingDirection := #North].!

!methodRemoval: Direction #sendCommand:to: stamp: 'lucy 5/14/2023 00:01:00'!
sendCommand: instruction to: rover

	self subclassResponsibility !

!methodRemoval: East #sendCommand:to: stamp: 'lucy 5/14/2023 00:01:04'!
sendCommand: instruction to: rover
	rover pointingEastReceiveCommand: instruction.!

!methodRemoval: North #sendCommand:to: stamp: 'lucy 5/14/2023 00:01:09'!
sendCommand: instruction to: rover
	rover pointingNorthReceiveCommand: instruction.!

!methodRemoval: South #sendCommand:to: stamp: 'lucy 5/14/2023 00:01:14'!
sendCommand: instruction to: rover
	rover pointingSouthReceiveCommand: instruction.!

!methodRemoval: West #sendCommand:to: stamp: 'lucy 5/14/2023 00:01:17'!
sendCommand: instruction to: rover
	rover pointingWestReceiveCommand: instruction.!
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:04:25' prior: 50616634!
coordinatesBackwards

	^ (self coordinatesForwards) negated! !
!Direction methodsFor: 'nil' stamp: 'lucy 5/14/2023 00:05:00'!
coordinatesBackwards

	^ (self coordinatesForwards) negated! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:06:12'!
coordinatesForwards

	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:06:36'!
directionLeft

	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:06:41'!
directionRight

	self subclassResponsibility ! !

!methodRemoval: East #coordinatesBackwards stamp: 'lucy 5/14/2023 00:06:47'!
coordinatesBackwards

	^ (self coordinatesForwards) negated!

!methodRemoval: North #coordinatesBackwards stamp: 'lucy 5/14/2023 00:06:51'!
coordinatesBackwards

	^(0@-1)!

!methodRemoval: South #coordinatesBackwards stamp: 'lucy 5/14/2023 00:06:55'!
coordinatesBackwards

	^(0@1)!

!methodRemoval: West #coordinatesBackwards stamp: 'lucy 5/14/2023 00:06:58'!
coordinatesBackwards

	^(1@0)!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:07:09'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:09:57' prior: 50615969!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: East.! !

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:09:58'!
FAILURE!
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:10:40' prior: 50617341!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #East.! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:12:52'!
isNorth! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:12:55'!
isSouth! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:12:59'!
isEast! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:03'!
isWest! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:14' prior: 50617377!
isWest

	^false! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:27' prior: 50617371!
isSouth

	^false! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:33' prior: 50617368!
isNorth

	^false! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:37' prior: 50617374!
isEast

	^false! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:13:52' overrides: 50617393!
isEast

	^true! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:10' overrides: 50617389!
isNorth

	^false! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:18' overrides: 50617385!
isSouth

	^false! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:25' overrides: 50617381!
isWest

	^false! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:41' overrides: 50617389!
isNorth

	^true! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:52' overrides: 50617393!
isEast

	^false! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:14:58' overrides: 50617385!
isSouth

	^false! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:02' overrides: 50617381!
isWest

	^false! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:24' overrides: 50617385!
isSouth

	^true! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:30' overrides: 50617389!
isNorth

	^false! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:33' overrides: 50617381!
isWest

	^false! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:37' overrides: 50617393!
isEast

	^false! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:15:58' overrides: 50617381!
isWest

	^true! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:16:14' overrides: 50617385!
isSouth

	^false! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:16:17' prior: 50617445 overrides: 50617381!
isWest

	^false! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:16:22' prior: 50617454 overrides: 50617381!
isWest

	^true! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:16:50'!
isNOrth

	^false! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:16:57' overrides: 50617393!
isEast

	^false! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:17:07' overrides: 50617389!
isNorth

	^false! !

!methodRemoval: West #isNOrth stamp: 'lucy 5/14/2023 00:17:07'!
isNOrth

	^false!
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:17:57' prior: 50617393!
isEast

	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:18:05' prior: 50617389!
isNorth

	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:18:12' prior: 50617381!
isWest

	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:18:17' prior: 50617385!
isSouth

	self subclassResponsibility ! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:18:20'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:19:32' prior: 50615881!
test01RobotStartsAtInitialPosition

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:19:41'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:07' prior: 50615993!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert:  robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:14' prior: 50615741!
test03RobotPointingSouthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'f'.
	
	self assert:  0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:21' prior: 50615766!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'b'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:28' prior: 50615905!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:33' prior: 50617706!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:37' prior: 50616475!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:42' prior: 50617730!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:20:55' prior: 50616501!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'ff'.
	
	self assert:  0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:01' prior: 50617670!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:05' prior: 50617682!
test03RobotPointingSouthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'f'.
	
	self assert: 0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:09' prior: 50617694!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:24' prior: 50617754!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'ff'.
	
	self assert: 0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:30' prior: 50616514!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'fb'.
	
	self assert: 0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #South.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:21:35' prior: 50617814!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'fb'.
	
	self assert: 0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:26:51' prior: 50615804!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:27:23' prior: 50616462!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:27:32' prior: 50615957!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'f'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:27:47' prior: 50617356!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:31:38' prior: 50616006!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'r'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:31:47' prior: 50616449!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'l'.
	
	self assert:  initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:31:57' prior: 50615856!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'f'.
	
	self assert:  -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:32:03' prior: 50616019!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'b'.
	
	self assert:  1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:32:21' prior: 50616527!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'fl'.
	
	self assert:  0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:32:47' prior: 50617838!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:32:53' prior: 50617886!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: South new.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:02' prior: 50615981!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'f'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:08' prior: 50616437!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:15' prior: 50617898!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:21' prior: 50617850!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:31' prior: 50617862!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'f'.
	
	self assert: 1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:37' prior: 50617874!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'b'.
	
	self assert: -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:42' prior: 50615868!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:51' prior: 50617910!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'f'.
	
	self assert: -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:33:59' prior: 50617922!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'b'.
	
	self assert: 1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:34:10' prior: 50616488!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: #North.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:34:21' prior: 50617934!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'fl'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:35:14' prior: 50617970!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'f'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:35:21' prior: 50618042!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: East new.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:35:28' prior: 50617982!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: North new.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'lucy 5/14/2023 00:35:34' prior: 50618078!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:35:38'!
ERROR!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:36:04'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:36:06'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:36:08'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:36:10'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:36:11'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:36:13'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:36:13'!
ERROR!
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:12' prior: 50616696 overrides: 50617238!
directionLeft

	^South new! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:19' prior: 50616692 overrides: 50617242!
directionRight

	^#North new! !
!West methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:21' prior: 50618255 overrides: 50617242!
directionRight

	^North new! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:29' prior: 50616665 overrides: 50617238!
directionLeft

	^East! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:32' prior: 50618265 overrides: 50617238!
directionLeft

	^East new! !
!South methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:38' prior: 50616673 overrides: 50617242!
directionRight

	^West new! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:45' prior: 50616661 overrides: 50617242!
directionRight

	^East new! !
!North methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:51' prior: 50616657 overrides: 50617238!
directionLeft

	^West new! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:37:58' prior: 50616638 overrides: 50617238!
directionLeft

	^North new! !
!East methodsFor: 'as yet unclassified' stamp: 'lucy 5/14/2023 00:38:04' prior: 50616642 overrides: 50617242!
directionRight

	^South new! !

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:38:19'!
PASSED!

!methodRemoval: South #= stamp: 'lucy 5/14/2023 00:38:29'!
=algo
	^#South = algo!

!methodRemoval: East #= stamp: 'lucy 5/14/2023 00:38:41'!
=algo
	^algo = #East!

!methodRemoval: North #= stamp: 'lucy 5/14/2023 00:38:48'!
=algo
	^algo= #North!

!methodRemoval: West #= stamp: 'lucy 5/14/2023 00:38:57'!
=algo
	^algo = #West!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:40:03'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'lucy 5/14/2023 00:41:53'!
PASSED!

----SNAPSHOT----(14 May 2023 00:42:49) CuisUniversity-5706.image priorSource: 9118969!

----QUIT----(14 May 2023 00:42:55) CuisUniversity-5706.image priorSource: 9180699!

----STARTUP---- (14 May 2023 17:23:54) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/mars_rovers/Rover_comparacion/linux64/CuisUniversity-5706.image!

!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26'!
northDirection

	^ North new! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50615944!
test12RobotPointingNorthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50618006!
test11RobotPointingNorthRotatesRightToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50617994!
test10RobotPointingNorthRotatesLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50617576!
test01RobotStartsAtInitialPosition

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50618102!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'f'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50618126!
test09RobotPointingNorthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@-1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:46:26' prior: 50618090!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'fl'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:55:12'!
assertRobotPointing: anInitialDirection afterMoving: aBlockWithMovements isIn: aFinalPosition pointingTo: aFinalDirection

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: anInitialDirection.
	
	aBlockWithMovements value: robot.
	
	self assert: aFinalPosition equals: robot currentPosition.
	self assert: robot currentPointingDirection equals: aFinalDirection.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 17:56:18' prior: 50617778!
test03RobotPointingSouthMovesForwards

	self assertRobotPointing:  South new 
	afterMoving: [:robot | robot receiveCommands: 'f' ] 
	isIn:  0@-1 
	pointingTo: South new.! !

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 17:56:20'!
FAILURE!

South new = South new!

South new == South new!

South new = South new!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:36:31' prior: 50618646!
assertRobotPointing: anInitialDirection afterMoving: aBlockWithMovements isIn: aFinalPosition pointingTo: aFinalDirection

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: anInitialDirection.
	
	aBlockWithMovements value: robot.
	
	self assert: aFinalPosition equals: robot currentPosition.
	self assert: ( aFinalDirection value: (robot currentPointingDirection)).! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:02' prior: 50618662!
test03RobotPointingSouthMovesForwards

	self assertRobotPointing:  South new 
	afterMoving: [:robot | robot receiveCommands: 'f' ] 
	isIn:  0@-1 
	pointingTo: [:aDirection| aDirection isSouth ].! !

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:37:03'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:37:03'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22'!
southDirection

	^ South new! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50615843!
test07RobotPointingSouthRaisesInvalidCommandError

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	self should: [robot receiveCommands: 'i'] 
		raise: Error 
		withExceptionDo: [:error | self assert: 'Comando Invalido' equals: (error messageText)]! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50618692!
test03RobotPointingSouthMovesForwards

	self assertRobotPointing:  self southDirection 
	afterMoving: [:robot | robot receiveCommands: 'f' ] 
	isIn:  0@-1 
	pointingTo: [:aDirection| aDirection isSouth ].! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617766!
test02EmptyCommandDoesNotMoveRobot

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: ''.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617826!
test22RobotPointingSouthMovesForwardsThenBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: 'fb'.
	
	self assert: 0@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617802!
test21RobotPointingSouthMovesForwardsTwice

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: 'ff'.
	
	self assert: 0@-2 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617790!
test04RobotPointingSouthMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617946!
test05RobotPointingSouthRotatesLeftToEast

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:37:22' prior: 50617958!
test06RobotPointingSouthRotatesRightToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self southDirection.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:37:25'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:37:25'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:38:01' prior: 50618846!
test04RobotPointingSouthMovesBackwards

	|robot |
	robot := MarsRover in: 0@0 pointing: self southDirection.
	
	robot receiveCommands: 'b'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:39:48' prior: 50618964!
test04RobotPointingSouthMovesBackwards

	self assertRobotPointing:  self southDirection 
	afterMoving: [:robot| robot receiveCommands: 'b'] 
	isIn: 0@1
	pointingTo: [:aDirection| aDirection isSouth]! !

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:39:50'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:39:50'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:39:55' prior: 50618975!
test04RobotPointingSouthMovesBackwards

	self assertRobotPointing:  self southDirection 
		afterMoving: [:robot| robot receiveCommands: 'b'] 
		isIn: 0@1
		pointingTo: [:aDirection| aDirection isSouth]! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:41:28' prior: 50618858!
test05RobotPointingSouthRotatesLeftToEast

	self assertRobotPointing: self southDirection 
		afterMoving: [:robot| robot receiveCommands: 'l'.] 
		isIn: 0@0 
		pointingTo: [:aDirection| aDirection isEast]! !

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:41:29'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:41:29'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:42:00' prior: 50618870!
test06RobotPointingSouthRotatesRightToWest

	self assertRobotPointing: self southDirection 
		afterMoving: [:robot| robot receiveCommands: 'r'.] 
		isIn: 0@0 
		pointingTo: [:aDirection| aDirection  isWest.]! !

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:42:01'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:42:01'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:42:11' prior: 50618610!
test08RobotPointingNorthMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'f'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.
	! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:42:41' prior: 50619261!
test08RobotPointingNorthMovesForwards

	self assertRobotPointing: self northDirection
		afterMoving: [:robot| robot receiveCommands: 'f'.] 
		isIn: 0@1 
		pointingTo: [:aDirection| aDirection isNorth.]
	! !

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:42:42'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:42:42'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:43:11' prior: 50618622!
test09RobotPointingNorthMovesBackwards

	self assertRobotPointing: self northDirection
	afterMoving: [:robot| robot receiveCommands: 'b'.] 
	isIn: 0@-1
	pointingTo: [:aDirection| aDirection isNorth.]
	! !

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:43:12'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:43:12'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:43:15' prior: 50619365!
test09RobotPointingNorthMovesBackwards

	self assertRobotPointing: self northDirection
		afterMoving: [:robot| robot receiveCommands: 'b'.] 
		isIn: 0@-1
		pointingTo: [:aDirection| aDirection isNorth.]
		! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:43:40' prior: 50618587!
test10RobotPointingNorthRotatesLeftToWest

	self assertRobotPointing: self northDirection
		afterMoving: [:robot| robot receiveCommands: 'l'.] 
		isIn: 0@0
		pointingTo: [:aDirection| aDirection isWest.]! !

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:43:43'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:43:43'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:44:23' prior: 50618575!
test11RobotPointingNorthRotatesRightToEast

	self assertRobotPointing: self northDirection
		afterMoving: [:robot| robot receiveCommands: 'r'.] 
		isIn: 0@0
		pointingTo: [:aDirection| aDirection isEast.]! !

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:44:24'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:44:24'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:44:59'!
EastDirection

	^ East new! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:00' prior: 50618030!
test14RobotPointingEastMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self EastDirection.
	
	robot receiveCommands: 'b'.
	
	self assert: -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:00' prior: 50617718!
test16RobotPointingEastRotatesRigthToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self EastDirection.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:00' prior: 50618018!
test13RobotPointingEastMovesForwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self EastDirection.
	
	robot receiveCommands: 'f'.
	
	self assert: 1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isEast.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:00' prior: 50618114!
test15RobotPointingEastRotatesLeftToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self EastDirection.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:23' prior: 50619678!
test13RobotPointingEastMovesForwards

	self assertRobotPointing: self EastDirection
		afterMoving: [:robot| robot receiveCommands: 'f'.] 
		isIn:  1@0
		pointingTo: [:aDirection| aDirection isEast.]! !

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:45:24'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:45:24'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:45:46' prior: 50619654!
test14RobotPointingEastMovesBackwards

	self assertRobotPointing: self EastDirection
		afterMoving: [:robot| robot receiveCommands: 'b'.] 
		isIn:  -1@0
		pointingTo: [:aDirection| aDirection isEast.]! !

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:45:47'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:45:47'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:08' prior: 50619690!
test15RobotPointingEastRotatesLeftToNorth

	
	self assertRobotPointing: self EastDirection
		afterMoving: [:robot| robot receiveCommands: 'l'.] 
		isIn:  0@0
		pointingTo: [:aDirection| aDirection isNorth.]! !

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:46:09'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:46:09'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:26' prior: 50619666!
test16RobotPointingEastRotatesRigthToSouth

	self assertRobotPointing: self EastDirection
		afterMoving: [:robot| robot receiveCommands: 'r'.] 
		isIn:  0@0
		pointingTo: [:aDirection| aDirection isSouth .]! !

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:46:27'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:46:27'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:44' prior: 50618054!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: West new.
	
	robot receiveCommands: 'f'.
	
	self assert: -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.
	! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:56'!
westDirection

	^ West new! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:56' prior: 50618066!
test18RobotPointingWestMovesBackwards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self westDirection.
	
	robot receiveCommands: 'b'.
	
	self assert: 1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:56' prior: 50618138!
test20RobotPointingWestRotatesRightToNorth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self westDirection.
	
	robot receiveCommands: 'r'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isNorth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:56' prior: 50620070!
test17RobotPointingWestMovesForards

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self westDirection.
	
	robot receiveCommands: 'f'.
	
	self assert: -1@0 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.
	! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:46:56' prior: 50617742!
test19RobotPointingWestRotatesLeftToSouth

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self westDirection.
	
	robot receiveCommands: 'l'.
	
	self assert: initialPos equals: robot currentPosition.
	self assert: robot currentPointingDirection isSouth.! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:47:25' prior: 50620109!
test17RobotPointingWestMovesForards

	self assertRobotPointing: self westDirection
		afterMoving: [:robot| robot receiveCommands: 'f'.] 
		isIn:  -1@0
		pointingTo: [:aDirection| aDirection isWest .]
	! !

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:47:25'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:47:25'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:48:06' prior: 50620085!
test18RobotPointingWestMovesBackwards

	self assertRobotPointing: self westDirection
	afterMoving: [:robot| robot receiveCommands: 'b'.] 
	isIn:  1@0
	pointingTo: [:aDirection| aDirection isWest .]! !

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:48:07'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:48:07'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:48:31' prior: 50620121!
test19RobotPointingWestRotatesLeftToSouth

	self assertRobotPointing: self westDirection
	afterMoving: [:robot| robot receiveCommands: 'l'.] 
	isIn:  0@0
	pointingTo: [:aDirection| aDirection isSouth.]! !

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:48:32'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:48:32'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:48:45' prior: 50620317!
test19RobotPointingWestRotatesLeftToSouth

	self assertRobotPointing: self westDirection
		afterMoving: [:robot| robot receiveCommands: 'l'.] 
		isIn:  0@0
		pointingTo: [:aDirection| aDirection isSouth.]! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:49:07' prior: 50620097!
test20RobotPointingWestRotatesRightToNorth

	self assertRobotPointing: self westDirection
	afterMoving: [:robot| robot receiveCommands: 'r'.] 
	isIn:  0@0
	pointingTo: [:aDirection| aDirection isNorth.]! !

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:49:08'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:49:08'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:53:33' prior: 50618834!
test21RobotPointingSouthMovesForwardsTwice

	self assertRobotPointing: self self southDirection
	afterMoving: [:robot|robot receiveCommands: 'ff'.] 
	isIn:  0@-2
	pointingTo: [:aDirection| aDirection isSouth.]! !

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:53:35'!
ERROR!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:53:46' prior: 50620511!
test21RobotPointingSouthMovesForwardsTwice

	self assertRobotPointing:  self southDirection
	afterMoving: [:robot|robot receiveCommands: 'ff'.] 
	isIn:  0@-2
	pointingTo: [:aDirection| aDirection isSouth.]! !

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:53:47'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:53:47'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:54:12' prior: 50618822!
test22RobotPointingSouthMovesForwardsThenBackwards

	self assertRobotPointing:  self southDirection
	afterMoving: [:robot|robot receiveCommands: 'fb'] 
	isIn:  0@0
	pointingTo: [:aDirection| aDirection isSouth.]! !

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:54:13'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:54:13'!
PASSED!
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:54:21' prior: 50618634!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	|robot initialPos|
	initialPos := 0@0.
	robot := MarsRover in: initialPos pointing: self northDirection.
	
	robot receiveCommands: 'fl'.
	
	self assert: 0@1 equals: robot currentPosition.
	self assert: robot currentPointingDirection isWest.
	! !
!TestMarsRover methodsFor: 'tests' stamp: 'pau 5/14/2023 18:54:47' prior: 50620708!
test23RobotPointingSouthMovesForwardsThenLeftToWest

	self assertRobotPointing:  self northDirection
	afterMoving: [:robot|robot receiveCommands: 'fl'] 
	isIn:  0@1
	pointingTo: [:aDirection| aDirection isWest.]
	! !

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:54:48'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:54:48'!
PASSED!
!TestMarsRover methodsFor: 'directions' stamp: 'pau 5/14/2023 18:55:21'!
eastDirection

	^ East new! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'pau 5/14/2023 18:55:21' prior: 50619702!
test13RobotPointingEastMovesForwards

	self assertRobotPointing: self eastDirection
		afterMoving: [:robot| robot receiveCommands: 'f'.] 
		isIn:  1@0
		pointingTo: [:aDirection| aDirection isEast.]! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'pau 5/14/2023 18:55:21' prior: 50619978!
test16RobotPointingEastRotatesRigthToSouth

	self assertRobotPointing: self eastDirection
		afterMoving: [:robot| robot receiveCommands: 'r'.] 
		isIn:  0@0
		pointingTo: [:aDirection| aDirection isSouth .]! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'pau 5/14/2023 18:55:21' prior: 50619886!
test15RobotPointingEastRotatesLeftToNorth

	
	self assertRobotPointing: self eastDirection
		afterMoving: [:robot| robot receiveCommands: 'l'.] 
		isIn:  0@0
		pointingTo: [:aDirection| aDirection isNorth.]! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'pau 5/14/2023 18:55:21' prior: 50619794!
test14RobotPointingEastMovesBackwards

	self assertRobotPointing: self eastDirection
		afterMoving: [:robot| robot receiveCommands: 'b'.] 
		isIn:  -1@0
		pointingTo: [:aDirection| aDirection isEast.]! !

!methodRemoval: TestMarsRover #EastDirection stamp: 'pau 5/14/2023 18:55:21'!
EastDirection

	^ East new!

!testRun: #TestMarsRover #test01RobotStartsAtInitialPosition stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test02EmptyCommandDoesNotMoveRobot stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test03RobotPointingSouthMovesForwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test04RobotPointingSouthMovesBackwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test05RobotPointingSouthRotatesLeftToEast stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test06RobotPointingSouthRotatesRightToWest stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test07RobotPointingSouthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test08RobotPointingNorthMovesForwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test09RobotPointingNorthMovesBackwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test10RobotPointingNorthRotatesLeftToWest stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test11RobotPointingNorthRotatesRightToEast stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test12RobotPointingNorthRaisesInvalidCommandError stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test13RobotPointingEastMovesForwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test14RobotPointingEastMovesBackwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test15RobotPointingEastRotatesLeftToNorth stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test16RobotPointingEastRotatesRigthToSouth stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test17RobotPointingWestMovesForards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test18RobotPointingWestMovesBackwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test19RobotPointingWestRotatesLeftToSouth stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test20RobotPointingWestRotatesRightToNorth stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test21RobotPointingSouthMovesForwardsTwice stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test22RobotPointingSouthMovesForwardsThenBackwards stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

!testRun: #TestMarsRover #test23RobotPointingSouthMovesForwardsThenLeftToWest stamp: 'pau 5/14/2023 18:55:25'!
PASSED!

----SNAPSHOT----(14 May 2023 18:55:36) CuisUniversity-5706.image priorSource: 9180787!

----QUIT----(14 May 2023 18:55:40) CuisUniversity-5706.image priorSource: 9257169!

----STARTUP---- (15 May 2023 15:09:33) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/mars_rovers/Rover_comparacion/linux64/CuisUniversity-5706.image!


----SNAPSHOT----(15 May 2023 15:12:44) CuisUniversity-5706.image priorSource: 9257257!

----QUIT----(15 May 2023 15:12:47) CuisUniversity-5706.image priorSource: 9257497!