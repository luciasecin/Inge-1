

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (1 June 2023 20:12:52) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/marRoverV2/linux64/linux64/CuisUniversity-5832.image!


----End fileIn of /home/paula/Documents/COMPUTACION/Inge1-1c2023/2023-1c/08-MarsRover-ElRegreso/MarsRover-WithHeading.st----!

TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LogTest category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:21:18'!
TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #LogTest as: #LogMarsRoverTest stamp: 'pau 6/1/2023 20:21:40'!
Smalltalk renameClassNamed: #LogTest as: #LogMarsRoverTest!

TestCase subclass: #WindowMarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #WindowMarsRoverTest category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:21:47'!
TestCase subclass: #WindowMarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowMarsRoverTest methodsFor: 'no messages' stamp: 'pau 6/1/2023 20:25:47'!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers|
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	"window := WindowMarsRover "! !
!WindowMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:28:45' prior: 50624886!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers|
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	"
	window := WindowMarsRover watchMarsRover: #Position. 
	
	window "! !

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:30:55'!
Object subclass: #MarsRoverLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LogMarsRoverTest methodsFor: 'nil' stamp: 'pau 6/1/2023 20:30:50'!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	log := MarsRoverLog log: #Position. ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:31:42' prior: 50624911!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	log := MarsRoverLog log: #Position. 
	
	self assert: log show equals: ''. ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:33:38' prior: 50624920!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	marsRover process: 'f'. 
	
	
	self assert: marsRover log first equals: 1@2. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:33:44'!
ERROR!
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:34:12' prior: 50624930!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	marsRover process: 'f'. 
	
	self assert: marsRover log first equals: 1@2. ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:35:23' prior: 50624944!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	marsRover process: 'f'. 
	
	self assert: marsRover log first equals: 1@2. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:35:27'!
ERROR!
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 20:36:17' prior: 50624954!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	marsRover process: 'f'. 
	
	log := MarsRoverLog log: #Position. 
	
	self assert: log show equals: 1@2. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:37:20'!
ERROR!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:37:28'!
log: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeLog: aSymbol ! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:38:02' prior: 50624895!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	window := TemporaryVariableDeclarationRemover traceMarsRover: #Position. 
	
	! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:39:00'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:38:56' prior: 50624990!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	window := MarsRoverWindow traceMarsRover: #Position. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:39:40' prior: 50625008!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	window := MarsRoverWindow traceMarsRover: #Position. 
	
	self assert: window show equals: 1@1. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:42:45' prior: 50625018!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast new. 
	
	window := MarsRoverWindow traceMarsRover: #Position. 
	
	self assert: window show equals: 1@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:42:47'!
ERROR!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:42:58' prior: 50625029!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow traceMarsRover: #Position. 
	
	self assert: window show equals: 1@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:43:00'!
ERROR!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:43:04'!
ERROR!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:43:38'!
traceMarsRover: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeTraceMarsRover: aSymbol ! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:44:29' prior: 50625062!
traceMarsRover: aCommand
	^self new initializeWith: aCommand. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:44:40'!
ERROR!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:46:31' prior: 50625044!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window |
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: marsRovers for: #Position. 
	
	self assert: window show equals: 1@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:46:34'!
ERROR!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:46:39'!
trace: aMarsRover for: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeTrace: aMarsRover for: aSymbol ! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:46:55' prior: 50625095!
trace: aMarsRover for: aSymbol 
	^self new initializeWith: aMarsRover for: aSymbol ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:46:58'!
ERROR!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:47:06'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:47:06'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/1/2023 20:47:06'!
initializeWith: aMarsRover for: aSymbol 
	self shouldBeImplemented.
	marsRover := aMarsRover.
	symbol := aSymbol.! !
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/1/2023 20:47:12' prior: 50625129!
initializeWith: aMarsRover for: aSymbol 
	marsRover := aMarsRover.
	symbol := aSymbol.! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:47:19'!
ERROR!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/1/2023 20:47:28'!
show
	self shouldBeImplemented.! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/1/2023 20:47:38' prior: 50625145!
show
	^ marsRover position.! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:47:42'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:54:09' prior: 50624968!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	marsRover process: 'f'. 
	
	log := MarsRoverLog log: #Position for: marsRover. 
	
	self assert: log show equals: #(1@1 1@2). ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:54:10'!
ERROR!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:54:14'!
log: aSymbol for: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeLog: aSymbol for: aMarsRover ! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'pau 6/1/2023 20:54:23' prior: 50625172!
log: aSymbol for: aMarsRover 
	^self new initializeLog: aSymbol for: aMarsRover ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:54:25'!
ERROR!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:54:33'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 20:54:33'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'symbol marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/1/2023 20:54:33'!
initializeLog: aSymbol for: aMarsRover 
	self shouldBeImplemented.
	symbol := aSymbol.
	marsRover := aMarsRover.! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/1/2023 20:54:37' prior: 50625205!
initializeLog: aSymbol for: aMarsRover 
	symbol := aSymbol.
	marsRover := aMarsRover.! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:54:38'!
ERROR!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:54:38'!
ERROR!
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/1/2023 20:54:50'!
show
	self shouldBeImplemented.! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/1/2023 20:54:56' prior: 50625224!
show
	! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/1/2023 20:55:29' prior: 50625228!
show
	^#(1@1 1@2)! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/1/2023 20:55:31'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:56:18' prior: 50625080!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	self assert: window show equals: 1@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:56:19'!
ERROR!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/1/2023 20:56:59' prior: 50625136!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	symbol := aSymbol.! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/1/2023 20:57:07' prior: 50625149!
show
	^ 1@2! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:57:08'!
FAILURE!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:57:08'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/1/2023 20:57:11' prior: 50625259!
show
	^ 1@1! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/1/2023 20:57:12'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/1/2023 20:58:14'!
test02WindowShowsPositionAfterMovingForwardOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	marsRovers process: 'f'. 
	
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	self assert: window show equals: 1@2. 
	
	! !

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/1/2023 20:58:15'!
FAILURE!
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/1/2023 21:28:54' prior: 50625212!
initializeLog: aSymbol for: aMarsRover 
	symbol := aSymbol.
	marsRover := aMarsRover.
	marsRover notifyLogging: self. ! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/1/2023 21:29:52' prior: 50625293!
initializeLog: aSymbol for: aMarsRover 
	symbol := aSymbol.
	marsRover := aMarsRover.
	marsRover notifyNewLogger: self. ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 21:31:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'nil' stamp: 'pau 6/1/2023 21:31:01'!
notifyNewLogger: aLogger
	logger := aLogger.  ! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/1/2023 21:32:49' prior: 50624640!
processCommand: aCommand
	logger isNil ifTrue: [ logger  notifyCommand: aCommand]. 
	
	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/1/2023 21:35:01' prior: 50625319!
processCommand: aCommand
	logger isNil ifTrue: [ logger notifyCommand: aCommand]. 
	
	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/1/2023 21:35:03'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/1/2023 21:35:03'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/1/2023 21:35:03'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/1/2023 21:35:03'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 21:39:04'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'pau 6/1/2023 21:39:02' prior: 50624558!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self. 
	loggers := OrderedCollection new. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/1/2023 21:39:20' prior: 50625314!
notifyNewLogger: aLogger
	loggers add: aLogger. ! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'pau 6/1/2023 21:39:47'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'pau 6/1/2023 21:43:13' prior: 50624622!
moveNorth
	
	position := position + (0@1). 
	loggers do:[:aLogger | aLogger notifyPosition: position ]! !

----QUIT----(2 June 2023 10:39:18) CuisUniversity-5832.image priorSource: 9366758!

----STARTUP---- (3 June 2023 14:24:42) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/marRoverV2/linux64/linux64/CuisUniversity-5832.image!


!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 14:46:48'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 14:48:24' prior: 50625335!
processCommand: aCommand
	
	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 14:51:27'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 14:51:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:52:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:52:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 14:52:00'!
FAILURE!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 14:52:00'!
FAILURE!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:52:26'!
PASSED!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 14:54:24'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 14:54:24' prior: 50625253!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 14:54:57'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 14:54:55' prior: 50625504!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := marsRover position.! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:55:26'!
ERROR!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 14:57:01' prior: 50625519!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := 0@0.! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:57:10'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 14:57:10'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 14:57:10'!
FAILURE!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 14:57:10'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 14:57:31' prior: 50625270!
show
	^ currentPosition! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 14:58:36' prior: 50625553!
show
	^ currentPosition! !
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 14:59:02' prior: 50625530!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := aMarsRover notifyAttachment: self. ! !
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 14:59:24' prior: 50625561!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := aMarsRover acceptAttachment: self. ! !
!MarsRover methodsFor: 'nil' stamp: 'pau 6/3/2023 14:59:54'!
acceptAttachment: anObserver
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:00:18' prior: 50625576!
acceptAttachment: anObserver
	^position! !

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:00:31'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:00:45' prior: 50625277!
test02WindowShowsPositionAfterMovingForwardOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	marsRovers process: 'f'. 
	
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	self assert: window show equals: 2@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:00:46'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:00:46'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:00:46'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:02:20'!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: window show equals: MarsRoverHeadingEast. 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:02:23'!
FAILURE!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 15:05:27'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 15:05:24' prior: 50625569!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := aMarsRover acceptAttachment: self.
	heading :=  aMarsRover acceptAttachment: self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:09:29' prior: 50625580!
acceptAttachment: anObserver

	| initialLocation |
	initialLocation := Dictionary new. 
	^position! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:09:44' prior: 50625647!
acceptAttachment: anObserver

	| initialLocation |
	initialLocation := Dictionary new. 
	^position! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:10:59' prior: 50625654!
acceptAttachment: anObserver

	| initialLocation |
	initialLocation := Dictionary new add: #Position -> position. 
	^position! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:11:04' prior: 50625661!
acceptAttachment: anObserver

	| initialLocation |
	initialLocation := Dictionary new add: #Position -> position. 
	^initialLocation ! !

----End fileIn of /home/paula/Documents/COMPUTACION/Inge1-1c2023/marRoverV2/linux64/linux64/Packages/TerseGuide.pck.st----!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:13:46' prior: 50625668!
acceptAttachment: anObserver

	| initialLocation |
	initialLocation := Dictionary new. 
	initialLocation add: #Position -> position; add: #Heading -> head. 
	^initialLocation ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 15:13:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 15:13:47'!
PASSED!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/3/2023 15:16:41' prior: 50625637!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := (aMarsRover acceptAttachment: self) at: #Position. 
	heading :=  (aMarsRover acceptAttachment: self) at: #Heading.! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:16:49' prior: 50625557!
show
	^currentPosition! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:16:50'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:16:50'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:16:50'!
FAILURE!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:16:50'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:18:12' prior: 50628669!
show
	(windowType isKindOf: #Position) ifTrue: [^currentPosition]
								ifFalse: [^		heading]! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 15:18:22'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:18:22' prior: 50628688!
show
	(windowType isKindOf: #Position) ifTrue: [^currentPosition]
								ifFalse: [^		currentHeading]! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:18:22' prior: 50628659!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	currentPosition := (aMarsRover acceptAttachment: self) at: #Position. 
	currentHeading :=  (aMarsRover acceptAttachment: self) at: #Heading.! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:18:25'!
FAILURE!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:18:25'!
FAILURE!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:18:25'!
FAILURE!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:18:30'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:19:22' prior: 50628704!
show
	(windowType = #Position) ifTrue: [^currentPosition]
								ifFalse: [^		currentHeading]! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:19:24'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:19:24'!
FAILURE!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:19:24'!
FAILURE!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:19:42'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:20:22' prior: 50625613!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: window show equals: MarsRoverHeadingEast new. 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:20:23'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:20:52' prior: 50628820!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: window show = MarsRoverHeadingEast new. 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:20:53'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:21:10' prior: 50628835!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: window show == MarsRoverHeadingEast new. 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:21:11'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:21:21' prior: 50628850!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: window show == MarsRoverHeadingEast. 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:21:22'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:21:40' prior: 50628865!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: (window show isKindOf: MarsRoverHeadingEast). 
	
	! !

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:21:41'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:21:41'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:21:41'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:21:41'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:23:02'!
test04WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: (window show isKindOf: MarsRoverHeadingEast). 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:23:55' prior: 50628906!
test04WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: (window show isKindOf: MarsRoverHeadingNorth). 
	
	! !

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:23:56'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:26:40' prior: 50628596!
acceptAttachment: anObserver

	| initialLocation |
	loggers add: anObserver. 
	initialLocation := Dictionary new. 
	initialLocation add: #Position -> position; add: #Heading -> head. 
	^initialLocation ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 15:26:42'!
PASSED!

!methodRemoval: MarsRover #notifyNewLogger: stamp: 'pau 6/3/2023 15:26:45'!
notifyNewLogger: aLogger
	loggers add: aLogger. !
!MarsRover methodsFor: 'heading' stamp: 'pau 6/3/2023 15:27:56' prior: 50624568!
headNorth
	
	head := MarsRoverHeadingNorth for: self. 
	
	loggers do: [:anObserver| anObserver notifyNewHeading: head]! !

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:28:04'!
ERROR!
!MarsRoverWindow methodsFor: 'beingNotify' stamp: 'pau 6/3/2023 15:28:29'!
notifyNewHeading: aHead 
	self shouldBeImplemented.! !
!MarsRoverWindow methodsFor: 'beingNotify' stamp: 'pau 6/3/2023 15:28:59' prior: 50629014!
notifyNewHeading: aHeading 
	currentHeading := aHeading. ! !
!MarsRoverWindow methodsFor: 'beingNotify' stamp: 'pau 6/3/2023 15:29:27'!
beingNotifiedOfNewHeading: aHeading 
	currentHeading := aHeading. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:29:27' prior: 50629003!
headNorth
	
	head := MarsRoverHeadingNorth for: self. 
	
	loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]! !

!methodRemoval: MarsRoverWindow #notifyNewHeading: stamp: 'pau 6/3/2023 15:29:27'!
notifyNewHeading: aHeading 
	currentHeading := aHeading. !

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:29:54'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:29:54'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:29:54'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:29:54'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:29:54'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:30:51'!
test05WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: (window show isKindOf: MarsRoverHeadingNorth). 
	
	! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 15:32:49' prior: 50624634!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]. 
	
	loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
	loggers do: [:anObserver| anObserver notifyPosition: position].  
! !
!MarsRover methodsFor: 'moving' stamp: 'pau 6/3/2023 15:33:13' prior: 50625438!
moveNorth
	
	position := position + (0@1). ! !
!MarsRover methodsFor: 'heading' stamp: 'pau 6/3/2023 15:33:26' prior: 50629030!
headNorth
	
	head := MarsRoverHeadingNorth for: self. 
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:34:17' prior: 50625589!
test02WindowShowsPositionAfterMovingForwardOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: 2@1. 
	
	! !

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:34:19'!
ERROR!
!MarsRoverWindow methodsFor: 'beingNotified' stamp: 'pau 6/3/2023 15:34:47'!
beingNotifiedOfNewPosition: aPosition 
	currentPosition := aPosition. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:34:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:34:48'!
ERROR!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:34:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:34:48'!
ERROR!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:34:48'!
ERROR!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:35:02'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:05'!
ERROR!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:05'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 15:35:30' prior: 50629074!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]. 
	
	loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
	loggers do: [:anObserver| anObserver beingNotifiedOfNewPosition: position].  
! !

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:35:38'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:36:41'!
test05WindowShowsInitialHeadingAndPosition
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: (window show isKindOf: MarsRoverHeadingNorth). 
	
	! !

!methodRemoval: WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:36:46'!
test05WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: (window show isKindOf: MarsRoverHeadingNorth). 
	
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:37:43' prior: 50629205!
test05WindowShowsInitialHeadingAndPosition
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	self assert: (window show first) equals: 1@1.
	self assert: (window show second isKindOf: MarsRoverHeadingNorth). 
	
	! !

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:37:45'!
ERROR!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:39:04' prior: 50628737!
show
	(windowType = #Position) ifTrue: [^currentPosition]. 
	(windowType = #Heading) ifTrue: [^		currentHeading]
	ifFalse: [^#(currentPosition currentHeading)]. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:39:05'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:39:05'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:39:05'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:39:05'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:39:05'!
FAILURE!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:39:05'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:39:50' prior: 50629248!
show
	(windowType = #Position) ifTrue: [^currentPosition]. 
	(windowType = #Heading) ifTrue: [^		currentHeading]
	ifFalse: [Array with: currentPosition with: currentHeading]. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:39:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:39:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:39:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:39:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:39:51'!
ERROR!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:39:51'!
ERROR!

window show !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:40:15' prior: 50629279!
show
	(windowType = #Position) ifTrue: [^currentPosition]. 
	(windowType = #Heading) ifTrue: [^		currentHeading]
	ifFalse: [^ Array with: currentPosition with: currentHeading]. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:40:17'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:40:17'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:40:17'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:40:17'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:40:17'!
FAILURE!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:40:17'!
FAILURE!

window show second!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:40:45' prior: 50629231!
test05WindowShowsInitialHeadingAndPosition
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	self assert: (window show first) equals: 1@1.
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:40:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:40:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:40:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:40:48'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:40:48'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:41:59'!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	self assert: (window show first) equals: 1@1.
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:42:12' prior: 50629375!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: (window show first) equals: 1@1.
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:42:20' prior: 50629389!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: (window show first) equals: 1@2.
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:42:26' prior: 50629404!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: (window show first) equals: 2@1. 
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	! !

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:42:27'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:42:27'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:43:22' prior: 50629419!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: (window show first) equals: 2@1. 
	self assert: (window show second isKindOf: MarsRoverHeadingNorth). 
	
	! !

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:43:23'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 15:43:28'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:43:28'!
PASSED!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:43:45'!
test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: (window show first) equals: 2@1. 
	self assert: (window show second isKindOf: MarsRoverHeadingNorth). 
	
	! !

!methodRemoval: WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFoward stamp: 'pau 6/3/2023 15:43:47'!
test06WindowShowsHeadingAndPositionAfterMovingFoward
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: (window show first) equals: 2@1. 
	self assert: (window show second isKindOf: MarsRoverHeadingNorth). 
	
	!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/3/2023 15:48:39' prior: 50629311!
show
	(windowType = #Position) ifTrue: [^currentPosition]. 
	(windowType = #Heading) ifTrue: [^	currentHeading]
						     ifFalse: [^Array with: currentPosition with: currentHeading]. ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:51:24'!
test01PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	self assert: log show equals: #(1@1 1@2). ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:51:33'!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	self assert: log show equals: #(1@1 1@2). ! !

!methodRemoval: LogMarsRoverTest #test01PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:51:33'!
test01PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	self assert: log show equals: #(1@1 1@2). !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:52:20' prior: 50625157!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog log: #Position for: marsRover. 
	
	self assert: log show equals: OrderedCollection new. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:52:21'!
ERROR!
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/3/2023 15:52:51' prior: 50625300!
initializeLog: aSymbol for: aMarsRover 
	symbol := aSymbol.
	marsRover := aMarsRover.
	marsRover acceptAttachment: self. ! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/3/2023 15:53:04' prior: 50625231!
show
	^OrderedCollection new! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:53:05'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:53:05'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:53:05'!
ERROR!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:53:17'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:53:17'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:53:17'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:53:17'!
ERROR!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:53:21'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:54:24' prior: 50629580!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 1@1;  add:  1@2. 
	
	self assert: log show equals: #(). ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 15:54:31' prior: 50629657!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 1@1;  add:  1@2. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:54:32'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 15:54:48'!
beingNotifiedOfNewHeading: aHead 
	self shouldBeImplemented.! !

Object subclass: #MarsRoverLog
	instanceVariableNames: 'symbol marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 15:55:17'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'symbol marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/3/2023 15:55:40' prior: 50629617!
initializeLog: aSymbol for: aMarsRover 
	symbol := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.  ! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/3/2023 15:56:25' prior: 50629624!
show
	^log! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:56:26'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:56:26'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:56:26'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 15:57:08' prior: 50629687!
beingNotifiedOfNewHeading: aHeading
	log add: aHeading.  
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 15:57:31' prior: 50629727!
beingNotifiedOfNewHeading: aHeading
	log add: aHeading.  
	! !

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/3/2023 15:57:41'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'logType marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/3/2023 15:57:41' prior: 50629705!
initializeLog: aSymbol for: aMarsRover 
	logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.  ! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 15:58:28' prior: 50629732!
beingNotifiedOfNewHeading: aHeading
	(logType = #Position) negated ifTrue: [log add: aHeading.]
	
	! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:58:29'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:58:29'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:58:29'!
ERROR!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 15:59:20'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:59:20'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 15:59:20'!
ERROR!

(logType = #Position)!

(logType = #Position) negated!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:00:12' prior: 50629754!
beingNotifiedOfNewHeading: aHeading
	(logType = #Heading) ifTrue: [log add: aHeading.]
	
	! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:00:13'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:00:13'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:00:13'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:00:35'!
beingNotifiedOfNewPosition: aPosition 
	self shouldBeImplemented.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:01:06' prior: 50629800!
beingNotifiedOfNewPosition: aPosition 
	(logType = #Position) ifTrue: [log add: aPosition]! !

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:01:09'!
FAILURE!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:01:26'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:02:09' prior: 50629670!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add:  1@2. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:02:12'!
FAILURE!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:03:58'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:04:32' prior: 50629818!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:04:32'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:04:51' prior: 50629839!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1;yourself . 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:04:51'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:04:51'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:04:51'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:04:54' prior: 50629856!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:05:45'!
test03PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'ff'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:05:45'!
FAILURE!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:13:41'!
FAILURE!
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:14:40' prior: 50629147!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ].  
! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:16:15' prior: 50625455!
processCommand: aCommand
	
	(self isForwardCommand: aCommand) ifTrue: [^self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.
	
	loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
	loggers do: [:anObserver| anObserver beingNotifiedOfNewPosition: position]. ! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:16:52' prior: 50629921!
processCommand: aCommand
	
	(self isForwardCommand: aCommand) ifTrue: [^self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.
	
	 ! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:17:09' prior: 50629914!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | 
								self processCommand: aCommand.
								loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
								loggers do: [:anObserver| anObserver beingNotifiedOfNewPosition: position].].  
! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 16:17:10'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:17:14'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:17:17'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:17:22'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:17:22'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:17:22'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 16:17:30'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 16:17:30'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 16:17:30'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 16:17:30'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 16:17:30'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/3/2023 16:17:30'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:17:57'!
test03PositionLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'ff'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: LogMarsRoverTest #test03PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:17:57'!
test03PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'ff'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:18:33'!
test04HeadingLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:18:35'!
FAILURE!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:20:18' prior: 50629805!
beingNotifiedOfNewPosition: aPosition 
	(logType = #Position) ifTrue: [
		log last = aPosition  ifFalse:[ log add: aPosition]]. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:21:36'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:21:36'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:21:36'!
ERROR!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:21:36'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:21:46'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:22:14' prior: 50630107!
beingNotifiedOfNewPosition: aPosition 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]]. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:22:15'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:22:15'!
FAILURE!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:22:15'!
FAILURE!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:22:15'!
FAILURE!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:22:17'!
FAILURE!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:22:57'!
FAILURE!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:23:52' prior: 50630133!
beingNotifiedOfNewPosition: aPosition 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:23:53'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:23:53'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:23:53'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:23:53'!
FAILURE!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:23:53'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:24:14' prior: 50630089!
test04HeadingLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:24:15'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:24:15'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:24:15'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:24:15'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:24:15'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:24:43'!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: LogMarsRoverTest #test04HeadingLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:24:43'!
test04HeadingLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #Position for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:26:09'!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:26:10'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:27:34' prior: 50630251!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog expectedLine |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLine := OrderedCollection new add:  1@2; add: MarsRoverHeadingEast; yourself. 
	"expectedLog:= OrderedCollection new add:; yourself. "
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:29:01' prior: 50630269!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog expectedLine |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLine := OrderedCollection new add:  1@2; add: MarsRoverHeadingEast; yourself. 
	expectedLog:= OrderedCollection new add: expectedLine ; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:29:01'!
FAILURE!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:32:11' prior: 50630163!
beingNotifiedOfNewPosition: aPosition 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. ! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:32:33'!
beingNotified: aDictionaryWithHeadingAndPosition

	
	! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:33:35' prior: 50629954!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | 
								
								self processCommand: aCommand.
								loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
								loggers do: [:anObserver| anObserver beingNotifiedOfNewPosition: position].
								
								loggers do: [:anObserver| anObserver beingNotified: Dictionary new].].  
! !
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:35:04' prior: 50630322!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | 
								
								self processCommand: aCommand.
								loggers do: [:anObserver| anObserver beingNotifiedOfNewHeading: head]. 
								loggers do: [:anObserver| anObserver beingNotifiedOfNewPosition: position].
								
								loggers do: [:anObserver| anObserver beingNotified: 
									(Dictionary new add: #Position -> position; add: #Heading -> head)].].  
! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:35:46' prior: 50630317!
beingNotified: aDictionary
	
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:36:55' prior: 50630354!
beingNotified: aDictionary
	|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:37:16' prior: 50630358!
beingNotified: aDictionary
	|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/3/2023 16:39:56' prior: 50630367!
beingNotified: aDictionary
	|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]
	! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:39:57'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:39:57'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:39:57'!
ERROR!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/3/2023 16:39:57'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:39:57'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:40:02'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:41:10'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:41:10'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'pau 6/3/2023 16:42:31' prior: 50630337!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | 
								
								self processCommand: aCommand.
								loggers do: [:anObserver| anObserver beingNotified: 
									(Dictionary new add: #Position -> position; add: #Heading -> head;yourself)].].  
! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 16:42:33'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:42:39'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:42:39'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:42:39'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:42:39'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/3/2023 16:42:39'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:42:39'!
FAILURE!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:42:39'!
FAILURE!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:43:12'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 16:43:12'!
ERROR!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 16:43:12'!
ERROR!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 16:43:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/3/2023 16:43:12'!
ERROR!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:43:24'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:43:24'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:43:24'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/3/2023 16:43:24'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:43:24'!
FAILURE!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:43:24'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:44:09' prior: 50630286!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog expectedLine |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLine := OrderedCollection new add:  2@1; add: MarsRoverHeadingEast new; yourself. 
	expectedLog:= OrderedCollection new add: expectedLine ; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:44:13'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:45:24' prior: 50630639!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert: log show second first equals: MarsRoverHeadingEast new.
	 ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:45:40' prior: 50630661!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert: log show first second equals: MarsRoverHeadingEast.
	 ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/3/2023 16:45:52' prior: 50630675!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog log: #PositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:45:53'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/3/2023 16:45:53'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:45:53'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/3/2023 16:45:53'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/3/2023 16:45:53'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/3/2023 16:45:54'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 16:46:04'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 16:46:04'!
ERROR!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 16:46:04'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 16:46:04'!
ERROR!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 16:46:04'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/3/2023 16:46:04'!
ERROR!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 16:46:09'!
ERROR!
!MarsRoverWindow methodsFor: 'beingNotified' stamp: 'pau 6/3/2023 16:46:58'!
beingNotified: aDictionary
	currentPosition := aDictionary at: #Position. 
	currentHeading := aDictionary at: #Heading. ! !

!testRun: #WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/3/2023 16:46:59'!
PASSED!

!methodRemoval: MarsRoverWindow #beingNotifiedOfNewPosition: stamp: 'pau 6/3/2023 16:47:03'!
beingNotifiedOfNewPosition: aPosition 
	currentPosition := aPosition. !

!methodRemoval: MarsRoverWindow #beingNotifiedOfNewHeading: stamp: 'pau 6/3/2023 16:47:05'!
beingNotifiedOfNewHeading: aHeading 
	currentHeading := aHeading. !

----QUIT----(3 June 2023 16:47:51) CuisUniversity-5832.image priorSource: 9401385!

----STARTUP---- (4 June 2023 21:22:27) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/marRoverV2/linux64/linux64/CuisUniversity-5832.image!


Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:24:36'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'logType marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:25:02'!
MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'logType marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:25:07'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: WindowMarsRoverTest #test01WindowShowsInitialPostionOfTheMarsRover stamp: 'pau 6/4/2023 21:25:31'!
test01WindowShowsInitialPostionOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	self assert: window show equals: 1@1. 
	
	!

!methodRemoval: WindowMarsRoverTest #test05WindowShowsInitialHeadingAndPosition stamp: 'pau 6/4/2023 21:25:41'!
test05WindowShowsInitialHeadingAndPosition
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	self assert: (window show first) equals: 1@1.
	self assert: (window show second isKindOf: MarsRoverHeadingEast). 
	
	!

!methodRemoval: WindowMarsRoverTest #test03WindowShowsInitialHeadingOfTheMarsRover stamp: 'pau 6/4/2023 21:25:43'!
test03WindowShowsInitialHeadingOfTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	window := MarsRoverWindow trace: #Heading for: marsRovers. 
	
	self assert: (window show isKindOf: MarsRoverHeadingEast). 
	
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 21:27:20'!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMove
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: 2@1. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 21:27:31'!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: 2@1. 
	
	! !

!methodRemoval: WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMove stamp: 'pau 6/4/2023 21:27:31'!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMove
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: 2@1. 
	
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 21:30:22' prior: 50630892!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 

	self 
		should: [ window show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: marsRovers errorMarsRoverInitialPositionIsNotLogged.]
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 21:30:41' prior: 50630918!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 

	self 
		should: [ window show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: marsRovers class errorMarsRoverInitialPositionIsNotLogged.]
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 21:30:54' prior: 50630935!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 

	self 
		should: [ window show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: window class errorMarsRoverInitialPositionIsNotLogged.]
	
	! !
!MarsRoverLog class methodsFor: 'nil' stamp: 'pau 6/4/2023 21:31:27'!
errorMarsRoverInitialPositionIsNotLogged
	^'Initial Position of the marsRover is not logged'! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:32:02' prior: 50629746!
initializeLog: aSymbol for: aMarsRover 
	logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 21:32:43' prior: 50629713!
show
	log isEmpty ifTrue: [self class errorMarsRoverInitialPositionIsNotLogged].
	^log! !
!MarsRoverLog class methodsFor: 'error description' stamp: 'pau 6/4/2023 21:33:05'!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'Initial Position of the marsRover is not logged'! !
!WindowMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:33:05' prior: 50630952!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 

	self 
		should: [ window show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: window class errorMarsRoverInitialPositionAndHeadingIsNotLogged.]
	
	! !
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:33:05' prior: 50630981!
show
	log isEmpty ifTrue: [self class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !

!methodRemoval: MarsRoverLog class #errorMarsRoverInitialPositionIsNotLogged stamp: 'pau 6/4/2023 21:33:05'!
errorMarsRoverInitialPositionIsNotLogged
	^'Initial Position of the marsRover is not logged'!
!MarsRoverLog class methodsFor: 'error description' stamp: 'pau 6/4/2023 21:33:30' prior: 50630987!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'! !
!MarsRoverLog class methodsFor: 'error description' stamp: 'pau 6/4/2023 21:33:56' prior: 50631024!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'! !

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:34:20'!
FAILURE!
!MarsRoverObserver class methodsFor: 'error description' stamp: 'pau 6/4/2023 21:34:50'!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'! !

!methodRemoval: MarsRoverLog class #errorMarsRoverInitialPositionAndHeadingIsNotLogged stamp: 'pau 6/4/2023 21:34:50'!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'!
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 21:35:09' prior: 50631011!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/4/2023 21:36:40' prior: 50629560!
show
	
	(windowType = #Position) ifTrue: [^currentPosition]. 
	(windowType = #Heading) ifTrue: [^	currentHeading]
						     ifFalse: [^Array with: currentPosition with: currentHeading]. ! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/4/2023 21:37:52' prior: 50631058!
show
	
	(windowType = #Position) ifTrue: [
		(currentPosition isNil) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
		^currentPosition]. 
	(windowType = #Heading) ifTrue: [
			(currentHeading isNil) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
			^	currentHeading]
		    	ifFalse: [
				(currentHeading isNil or:[currentPosition isNil] ) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].			
				^Array with: currentPosition with: currentHeading]. ! !

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:37:55'!
FAILURE!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:37:55'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:37:55'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:37:55'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:37:55'!
FAILURE!

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:38:03'!
FAILURE!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:38:34' prior: 50628711!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.! !

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:38:44'!
FAILURE!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:38:44'!
FAILURE!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:38:44'!
FAILURE!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:38:44'!
FAILURE!

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:38:48'!
FAILURE!
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/4/2023 21:39:39' prior: 50631067!
show
	
	(windowType = #Position) ifTrue: [
		(currentPosition isNil) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
		^currentPosition]. 
	(windowType = #Heading) ifTrue: [
			(currentHeading isNil) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
			^	currentHeading]
		    	ifFalse: [
				(currentHeading isNil or:[currentPosition isNil] ) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].			
				^Array with: currentPosition with: currentHeading]. ! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/4/2023 21:40:01' prior: 50631140!
show
	
	(windowType = #Position) ifTrue: [
		(currentPosition isNil) ifTrue: [self error: super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
		^currentPosition]. 
	(windowType = #Heading) ifTrue: [
			(currentHeading isNil) ifTrue: [self  error: super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
			^	currentHeading]
		    	ifFalse: [
				(currentHeading isNil or:[currentPosition isNil] ) ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].			
				^Array with: currentPosition with: currentHeading]. ! !
!MarsRoverWindow methodsFor: 'show' stamp: 'pau 6/4/2023 21:40:17' prior: 50631160!
show
	
	(windowType = #Position) ifTrue: [
		(currentPosition isNil) ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
		^currentPosition]. 
	(windowType = #Heading) ifTrue: [
			(currentHeading isNil) ifTrue: [self  error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
			^	currentHeading]
		    	ifFalse: [
				(currentHeading isNil or:[currentPosition isNil] ) ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].			
				^Array with: currentPosition with: currentHeading]. ! !

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:40:20'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:40:20'!
ERROR!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:40:20'!
ERROR!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:40:20'!
ERROR!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:40:25'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:41:47' prior: 50628935!
acceptAttachment: anObserver
	loggers add: anObserver. 
	! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/4/2023 21:41:49'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:41:53'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:41:53'!
ERROR!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:41:53'!
ERROR!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:41:53'!
ERROR!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:41:56'!
ERROR!
!MarsRoverWindow methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:42:33' prior: 50631113!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	marsRover acceptAttachment: self.! !

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:42:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:42:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:42:35'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:42:35'!
PASSED!
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:43:05' prior: 50630974!
initializeLog: aSymbol for: aMarsRover 
	logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 21:43:07'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:07'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 21:43:07'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 21:43:07'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:07'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:14'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'pau 6/4/2023 21:43:37'!
PASSED!

Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:44:46'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPosition category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:46:22'!
MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:46:29'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPositionAndHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:47:16'!
MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:48:01' prior: 50630381!
beingNotified: aDictionary
	"|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]"
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:48:10' prior: 50629784!
beingNotifiedOfNewHeading: aHeading
	"(logType = #Heading) ifTrue: [log add: aHeading.]"
	
	! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:48:15' prior: 50630308!
beingNotifiedOfNewPosition: aPosition 
	"(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. "! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:48:26' prior: 50631326!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:48:33'!
MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:48:46'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPositionAndHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:48:50'!
MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPositionAndHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:49:14'!
MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPosition category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:49:19'!
MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogHeading methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:49:31' overrides: 50631522!
beingNotified: aDictionary
	"|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]"
	! !
!MarsRoverLogPositionAndHeading methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:49:31' overrides: 50631522!
beingNotified: aDictionary
	"|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]"
	! !
!MarsRoverLogPosition methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:49:31' overrides: 50631522!
beingNotified: aDictionary
	"|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]"
	! !

!methodRemoval: MarsRoverLog #beingNotified: stamp: 'pau 6/4/2023 21:49:31'!
beingNotified: aDictionary
	"|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	(logType = #Heading) ifTrue: [log add: aHeading.]. 
	(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. 
	(logType = #PositionAndHeading) ifTrue: [
		log add: (OrderedCollection with: aPosition with: aHeading).]"
	!
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:49:32'!
beingNotified: aDictionary

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:49:56' prior: 50631632 overrides: 50631701!
beingNotified: aDictionary
	|aHeading |
	aHeading := aDictionary at: #Heading. 
	log add: aHeading.
	! !
!MarsRoverLogPosition methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:50:18' prior: 50631668 overrides: 50631701!
beingNotified: aDictionary
	| aPosition|
	
	aPosition := aDictionary at: #Position. 
	log isEmpty ifFalse:[
	log last = aPosition  ifFalse:[ log add: aPosition]]
	ifTrue: [ log add: aPosition] 
	! !
!MarsRoverLogPositionAndHeading methodsFor: 'being notified' stamp: 'pau 6/4/2023 21:50:43' prior: 50631650 overrides: 50631701!
beingNotified: aDictionary
	|aHeading aPosition|
	aHeading := aDictionary at: #Heading. 
	aPosition := aDictionary at: #Position. 
	
	log add: (OrderedCollection with: aPosition with: aHeading).
	! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 21:50:49'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:50:49'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 21:50:49'!
ERROR!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 21:50:49'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 21:50:49'!
ERROR!
!MarsRoverLogHeading methodsFor: 'show' stamp: 'pau 6/4/2023 21:51:35' overrides: 50631052!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !
!MarsRoverLogPositionAndHeading methodsFor: 'show' stamp: 'pau 6/4/2023 21:51:35' overrides: 50631052!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !
!MarsRoverLogPosition methodsFor: 'show' stamp: 'pau 6/4/2023 21:51:35' overrides: 50631052!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !

!methodRemoval: MarsRoverLog #show stamp: 'pau 6/4/2023 21:51:35'!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log!
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:51:35'!
show

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:51:48' overrides: 50631554!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !
!MarsRoverLogPositionAndHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:51:48' overrides: 50631554!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !
!MarsRoverLogPosition methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:51:48' overrides: 50631554!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !

!methodRemoval: MarsRoverLog #initializeLog:for: stamp: 'pau 6/4/2023 21:51:48'!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	!
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 21:51:48'!
initializeLog: aSymbol for: aMarsRover

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:52:34' prior: 50631783 overrides: 50631817!
initializeLog: aSymbol for: aMarsRover 
	
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:52:37' prior: 50631823 overrides: 50631817!
initializeLog: aSymbol for: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'robot'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 21:53:26'!
MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'robot'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogPosition methodsFor: 'initialize' stamp: 'pau 6/4/2023 21:53:44' prior: 50631801 overrides: 50631817!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	robot := aMarsRover
	! !

!methodRemoval: MarsRoverLog class #log: stamp: 'pau 6/4/2023 22:00:40'!
log: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeLog: aSymbol !
!MarsRoverLogHeading class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:01:12' overrides: 50625181!
log: aSymbol for: aMarsRover 
	^self new initializeLog: aSymbol for: aMarsRover ! !
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:02:29'!
for: aMarsRover

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:02:29' overrides: 50631874!
for: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !
!MarsRoverLogPosition methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:02:29' overrides: 50631874!
for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	robot := aMarsRover
	! !
!MarsRoverLogPositionAndHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:02:29' overrides: 50631874!
for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !
!MarsRoverLogHeading class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:02:29' prior: 50631868 overrides: 50625181!
log: aSymbol for: aMarsRover 
	^self new for: aMarsRover ! !
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:02:29' prior: 50625181!
log: aSymbol for: aMarsRover 
	^self new for: aMarsRover ! !

!methodRemoval: MarsRoverLog #initializeLog:for: stamp: 'pau 6/4/2023 22:02:29'!
initializeLog: aSymbol for: aMarsRover

	self subclassResponsibility!

!methodRemoval: MarsRoverLogHeading #initializeLog:for: stamp: 'pau 6/4/2023 22:02:29'!
initializeLog: aSymbol for: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	!

!methodRemoval: MarsRoverLogPosition #initializeLog:for: stamp: 'pau 6/4/2023 22:02:29'!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	robot := aMarsRover
	!

!methodRemoval: MarsRoverLogPositionAndHeading #initializeLog:for: stamp: 'pau 6/4/2023 22:02:29'!
initializeLog: aSymbol for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'pau 6/4/2023 22:03:11'!
initiazeFor: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11'!
initiazeFor: aMarsRover

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:03:11' overrides: 50631948!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !
!MarsRoverLogPosition methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:03:11' overrides: 50631948!
initiazeFor: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	robot := aMarsRover
	! !
!MarsRoverLogPositionAndHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:03:11' overrides: 50631948!
initiazeFor: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50624576!
headWest
	
	head := MarsRoverHeadingWest initiazeFor: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50624564!
headEast
	
	head := MarsRoverHeadingEast initiazeFor: self! !
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50631910!
log: aSymbol for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50624572!
headSouth
	
	head := MarsRoverHeadingSouth initiazeFor: self! !
!MarsRoverLogHeading class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50631904 overrides: 50631988!
log: aSymbol for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50629089!
headNorth
	
	head := MarsRoverHeadingNorth initiazeFor: self. 
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:03:11' prior: 50625412!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType initiazeFor: self. 
	loggers := OrderedCollection new. ! !

!methodRemoval: MarsRoverHeading class #for: stamp: 'pau 6/4/2023 22:03:11'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: MarsRoverLog #for: stamp: 'pau 6/4/2023 22:03:11'!
for: aMarsRover

	self subclassResponsibility!

!methodRemoval: MarsRoverLogHeading #for: stamp: 'pau 6/4/2023 22:03:11'!
for: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	!

!methodRemoval: MarsRoverLogPosition #for: stamp: 'pau 6/4/2023 22:03:11'!
for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	robot := aMarsRover
	!

!methodRemoval: MarsRoverLogPositionAndHeading #for: stamp: 'pau 6/4/2023 22:03:11'!
for: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	!
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:04:26' prior: 50631953 overrides: 50631948!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	robot := marsRover. 
	! !

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:04:52'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:05:16' prior: 50630061!
test03PositionLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'ff'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:05:18'!
ERROR!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'pau 6/4/2023 22:05:48'!
for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !
!MarsRoverLogHeading class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:05:48' overrides: 50632079!
for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:05:48' prior: 50630689!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:05:48' prior: 50629880!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:05:48' prior: 50629603!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog for: marsRover. 
	
	self assert: log show equals: OrderedCollection new. ! !
!LogMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:05:48' prior: 50630223!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: MarsRoverLog class #log:for: stamp: 'pau 6/4/2023 22:05:48'!
log: aSymbol for: aMarsRover 
	^self new initiazeFor: aMarsRover !

!methodRemoval: MarsRoverLogHeading class #log:for: stamp: 'pau 6/4/2023 22:05:48'!
log: aSymbol for: aMarsRover 
	^self new initiazeFor: aMarsRover !
!MarsRoverLogPosition class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:06:01' overrides: 50632079!
for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !
!MarsRoverLogPositionAndHeading class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:06:07' overrides: 50632079!
for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:06:19'!
ERROR!

MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:07:06'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:07:22'!
MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPosition category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:07:30'!
MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogPositionAndHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:07:34'!
MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:07:38'!
MarsRoverObserver subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:08:02' prior: 50632079!
for: aMarsRover 
	^self new initiazeFor: aMarsRover ! !

!methodRemoval: MarsRoverLogHeading class #for: stamp: 'pau 6/4/2023 22:08:02'!
for: aMarsRover 
	^self new initiazeFor: aMarsRover !

!methodRemoval: MarsRoverLogPosition class #for: stamp: 'pau 6/4/2023 22:08:02'!
for: aMarsRover 
	^self new initiazeFor: aMarsRover !

!methodRemoval: MarsRoverLogPositionAndHeading class #for: stamp: 'pau 6/4/2023 22:08:02'!
for: aMarsRover 
	^self new initiazeFor: aMarsRover !

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:08:16'!
ERROR!
!MarsRoverLogHeading methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:08:51' prior: 50632050 overrides: 50631948!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	! !
!MarsRoverLogPosition methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:09:04' prior: 50631960 overrides: 50631948!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'pau 6/4/2023 22:09:18' prior: 50631948!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.
	
	! !

!methodRemoval: MarsRoverLogPosition #initiazeFor: stamp: 'pau 6/4/2023 22:09:18'!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.
	
	!

!methodRemoval: MarsRoverLogHeading #initiazeFor: stamp: 'pau 6/4/2023 22:09:18'!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. 
	!

!classRemoval: #MarsRoverLogHeading stamp: 'pau 6/4/2023 22:09:27'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogHeading category: 'MarsRover-WithHeading' stamp: 'pau 6/4/2023 22:12:33'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogHeading methodsFor: 'nil' stamp: 'pau 6/4/2023 22:13:22' overrides: 50631701!
beingNotified: aDictionary
	|aHeading|
	aHeading := aDictionary at: #Heading. ! !
!MarsRoverLogHeading methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:13:51' prior: 50632316 overrides: 50631701!
beingNotified: aDictionary
	|aHeading|
	aHeading := aDictionary at: #Heading. 
	log isEmpty ifFalse:[
	log last =aHeading  ifFalse:[ log add:aHeading ]]
	ifTrue: [ log add: aHeading ] ! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:14:13' prior: 50631778!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !

!methodRemoval: MarsRoverLogPositionAndHeading #show stamp: 'pau 6/4/2023 22:14:13'!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log!

!methodRemoval: MarsRoverLogPosition #show stamp: 'pau 6/4/2023 22:14:13'!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log!

!methodRemoval: MarsRoverLogPositionAndHeading #initiazeFor: stamp: 'pau 6/4/2023 22:14:27'!
initiazeFor: aMarsRover 
	"logType := aSymbol.
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self. "
	!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:15:30' prior: 50632104!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:15:36' prior: 50632118!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self assert: log show equals: OrderedCollection new. ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:15:43' prior: 50632129!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:15:54' prior: 50632381!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:15:59' prior: 50632090!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 22:16:02'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:16:02'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:16:02'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:16:02'!
FAILURE!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:16:02'!
ERROR!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:16:07'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:17:08' prior: 50632395!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:17:37' prior: 50632445!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:18:44'!
test04PositionLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: LogMarsRoverTest #test04HeadingLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:18:44'!
test04HeadingLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . !

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:18:50'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 22:18:50'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:18:50'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:18:50'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:18:50'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:18:50'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:18:50'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:19:23' prior: 50632409!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:19:34'!
test05PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !

!methodRemoval: LogMarsRoverTest #test05HeadingAndPositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:19:34'!
test05HeadingAndPositionLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 22:20:16'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:20:16'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:20:16'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:20:16'!
PASSED!

!testRun: #LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:20:16'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:21:47'!
test04HeadingLogAfterMovingFoward
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:21:55'!
test04HeadingLogAfterMovingFowardRaiseError
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:22:49' prior: 50632370!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:23:00'!
test01LogOfMarsRoverWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !

!methodRemoval: LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsIsEmpty stamp: 'pau 6/4/2023 22:23:00'!
test01LogOfMarsRoverWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverInitialPositionAndHeadingIsNotLogged.]!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:23:04'!
FAILURE!
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:23:28' prior: 50632332!
show
	log isEmpty ifTrue: [self class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:24:02' prior: 50632664!
show
	log isEmpty ifTrue: [super class errorMarsRoverInitialPositionAndHeadingIsNotLogged].
	^log! !
!MarsRoverObserver class methodsFor: 'error description' stamp: 'pau 6/4/2023 22:25:07' prior: 50631040!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:26:24' prior: 50632629!
test01LogOfMarsRoverWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:26:25'!
FAILURE!
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:26:59' prior: 50632670!
show
	log isEmpty ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
	^log! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFoward stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardRaiseError stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:27:05'!
PASSED!

!testRun: #LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:27:05'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:28:16' prior: 50632601!
test04HeadingLogAfterMovingFowardRaiseError
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:28:25' prior: 50632738!
test04HeadingLogAfterMovingFowardRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !
!MarsRoverLogHeading class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:30:23'!
errorMarsRoverInitialPositionIsNotLogged
	^'MarsRovers position hasnt changed'! !
!MarsRoverLogPosition class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:30:39'!
errorMarsRoverInitialHeadingIsNotLogged
	^'MarsRovers heading hasnt changed'! !
!MarsRoverLogPositionAndHeading class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:30:58' overrides: 50632677!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers position and heading hasnt changed'! !

!methodRemoval: MarsRoverObserver class #errorMarsRoverInitialPositionAndHeadingIsNotLogged stamp: 'pau 6/4/2023 22:31:23'!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers hasnt moved'!
!MarsRoverLogPosition methodsFor: 'show' stamp: 'pau 6/4/2023 22:31:49' overrides: 50632702!
show
	log isEmpty ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
	^log! !
!MarsRoverLogPositionAndHeading methodsFor: 'show' stamp: 'pau 6/4/2023 22:31:49' overrides: 50632702!
show
	log isEmpty ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
	^log! !
!MarsRoverLogHeading methodsFor: 'show' stamp: 'pau 6/4/2023 22:31:49' overrides: 50632702!
show
	log isEmpty ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
	^log! !

!methodRemoval: MarsRoverLog #show stamp: 'pau 6/4/2023 22:31:49'!
show
	log isEmpty ifTrue: [self error: (super class errorMarsRoverInitialPositionAndHeadingIsNotLogged)].
	^log!
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:31:49'!
show

	self subclassResponsibility! !
!MarsRoverLogHeading methodsFor: 'show' stamp: 'pau 6/4/2023 22:32:05' prior: 50632809 overrides: 50632821!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialPositionIsNotLogged )].
	^log! !
!MarsRoverLogPosition methodsFor: 'show' stamp: 'pau 6/4/2023 22:32:17' prior: 50632795 overrides: 50632821!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialHeadingIsNotLogged )].
	^log! !
!MarsRoverLogPositionAndHeading methodsFor: 'show' stamp: 'pau 6/4/2023 22:32:42' prior: 50632802 overrides: 50632821!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialPositionAndHeadingIsNotLogged )].
	^log! !
!MarsRoverLogHeading class methodsFor: 'error description' stamp: 'pau 6/4/2023 22:33:27'!
errorMarsRoverInitialHeadingIsNotLogged
	^'MarsRovers position hasnt changed'! !
!MarsRoverLogHeading methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:33:27' prior: 50632826 overrides: 50632821!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialHeadingIsNotLogged )].
	^log! !

!methodRemoval: MarsRoverLogHeading class #errorMarsRoverInitialPositionIsNotLogged stamp: 'pau 6/4/2023 22:33:28'!
errorMarsRoverInitialPositionIsNotLogged
	^'MarsRovers position hasnt changed'!
!MarsRoverLogHeading class methodsFor: 'error description' stamp: 'pau 6/4/2023 22:33:41' prior: 50632847!
errorMarsRoverInitialHeadingIsNotLogged
	^'MarsRovers heading hasnt changed'! !
!MarsRoverLogPosition class methodsFor: 'error description' stamp: 'pau 6/4/2023 22:33:59'!
errorMarsRoverInitialPositionIsNotLogged
	^'MarsRovers position hasnt changed'! !

!methodRemoval: MarsRoverLogPosition class #errorMarsRoverInitialHeadingIsNotLogged stamp: 'pau 6/4/2023 22:34:04'!
errorMarsRoverInitialHeadingIsNotLogged
	^'MarsRovers heading hasnt changed'!
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:34:43' prior: 50632821!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialHeadingIsNotLogged)].
	^log! !
!MarsRoverLog class methodsFor: 'nil' stamp: 'pau 6/4/2023 22:35:13'!
errorMarsRoverHasntChanged
	! !
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:35:48' prior: 50632891!
errorMarsRoverHasntChanged
	self subclassResponsibility ! !
!MarsRoverLog methodsFor: 'show' stamp: 'pau 6/4/2023 22:36:38' prior: 50632885!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverHasntChanged )].
	^log! !
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:36:58'!
errorMarsRoverStateHasntChanged
	self subclassResponsibility ! !
!MarsRoverLog methodsFor: 'as yet unclassified' stamp: 'pau 6/4/2023 22:36:58' prior: 50632901!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverStateHasntChanged )].
	^log! !

!methodRemoval: MarsRoverLog class #errorMarsRoverHasntChanged stamp: 'pau 6/4/2023 22:36:58'!
errorMarsRoverHasntChanged
	self subclassResponsibility !

!methodRemoval: MarsRoverLogHeading #show stamp: 'pau 6/4/2023 22:43:08'!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialHeadingIsNotLogged )].
	^log!

!methodRemoval: MarsRoverLogPosition #show stamp: 'pau 6/4/2023 22:43:12'!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialHeadingIsNotLogged )].
	^log!

!methodRemoval: MarsRoverLogPositionAndHeading #show stamp: 'pau 6/4/2023 22:43:16'!
show
	log isEmpty ifTrue: [self error: (self class errorMarsRoverInitialPositionAndHeadingIsNotLogged )].
	^log!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:43:29'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:43:29'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'pau 6/4/2023 22:43:29'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFoward stamp: 'pau 6/4/2023 22:43:29'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardRaiseError stamp: 'pau 6/4/2023 22:43:29'!
FAILURE!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'pau 6/4/2023 22:43:29'!
PASSED!

!testRun: #LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'pau 6/4/2023 22:43:29'!
PASSED!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'pau 6/4/2023 22:43:32'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'pau 6/4/2023 22:44:05' prior: 50632683!
test01LogOfMarsRoverWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverInitialPositionIsNotLogged .]! !

----QUIT----(4 June 2023 23:28:07) CuisUniversity-5832.image priorSource: 9572563!

----STARTUP---- (4 June 2023 23:32:04) as /home/lucy/Documents/aaaa/linux64/CuisUniversity-5832.image!


Object subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'lucy 6/4/2023 23:33:21'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/4/2023 23:33:32'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRoverLog #beingNotifiedOfNewHeading: stamp: 'lucy 6/4/2023 23:33:58'!
beingNotifiedOfNewHeading: aHeading
	"(logType = #Heading) ifTrue: [log add: aHeading.]"
	
	!

!methodRemoval: MarsRoverLog #beingNotifiedOfNewPosition: stamp: 'lucy 6/4/2023 23:33:59'!
beingNotifiedOfNewPosition: aPosition 
	"(logType = #Position) ifTrue: [
		log isEmpty ifFalse:[
		log last = aPosition  ifFalse:[ log add: aPosition]]
		ifTrue: [ log add: aPosition] ]. "!

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:34:45'!
FAILURE!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:34:45'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/4/2023 23:34:45'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFoward stamp: 'lucy 6/4/2023 23:34:45'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardRaiseError stamp: 'lucy 6/4/2023 23:34:45'!
FAILURE!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/4/2023 23:34:45'!
PASSED!

!testRun: #LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:34:45'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:35:31' prior: 50632971!
test01LogOfMarsRoverWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]! !

!testRun: #LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:35:33'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:35:33'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/4/2023 23:35:33'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFoward stamp: 'lucy 6/4/2023 23:35:33'!
PASSED!

!testRun: #LogMarsRoverTest #test04HeadingLogAfterMovingFowardRaiseError stamp: 'lucy 6/4/2023 23:35:33'!
FAILURE!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/4/2023 23:35:33'!
PASSED!

!testRun: #LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:35:33'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:38:04'!
test05HeadingLogAfterMovingFowardAndLeftHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 'Apuntando al Norte'; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: LogMarsRoverTest #test04HeadingLogAfterMovingFoward stamp: 'lucy 6/4/2023 23:38:07'!
test04HeadingLogAfterMovingFoward
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:38:30'!
test01PositionLogWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]! !

!methodRemoval: LogMarsRoverTest #test01LogOfMarsRoverWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:38:30'!
test01LogOfMarsRoverWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogPosition for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:38:49'!
test04HeadingLogWithoutRotationsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !

!methodRemoval: LogMarsRoverTest #test04HeadingLogAfterMovingFowardRaiseError stamp: 'lucy 6/4/2023 23:38:49'!
test04HeadingLogAfterMovingFowardRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:39:11'!
test05HeadingLogWithoutRotationsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]! !

!methodRemoval: LogMarsRoverTest #test04HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/4/2023 23:39:11'!
test04HeadingLogWithoutRotationsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPosition for: marsRover. 
	marsRover process: 'f'. 
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: MarsRoverObserver errorMarsRoverInitialPositionAndHeadingIsNotLogged.]!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:39:17'!
test06HeadingLogAfterMovingFowardAndLeftHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 'Apuntando al Norte'; yourself. 
	
	self assert: log show equals: expectedLog . ! !

!methodRemoval: LogMarsRoverTest #test05HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/4/2023 23:39:17'!
test05HeadingLogAfterMovingFowardAndLeftHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogHeading for: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 'Apuntando al Norte'; yourself. 
	
	self assert: log show equals: expectedLog . !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:39:25'!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 ! !

!methodRemoval: LogMarsRoverTest #test05PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:39:25'!
test05PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second isKindOf: MarsRoverHeadingEast).
	 !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:39:51' prior: 50633189!
test05HeadingLogWithoutRotationsRaiseError

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLogHeading for: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:40:40' prior: 50633249!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second ).
	 ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/4/2023 23:41:17' prior: 50633293!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLogPositionAndHeading for: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second) equals: 'Apuntando al Este'.
	 ! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:41:22'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:41:22'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/4/2023 23:41:22'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/4/2023 23:41:22'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/4/2023 23:41:22'!
ERROR!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/4/2023 23:41:22'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:41:22'!
FAILURE!
!MarsRoverLogHeading class methodsFor: 'error description' stamp: 'lucy 6/4/2023 23:42:35' overrides: 50632907!
errorMarsRoverStateHasntChanged
	^'MarsRovers heading hasnt changed'! !

!methodRemoval: MarsRoverLogHeading class #errorMarsRoverInitialHeadingIsNotLogged stamp: 'lucy 6/4/2023 23:42:35'!
errorMarsRoverInitialHeadingIsNotLogged
	^'MarsRovers heading hasnt changed'!
!MarsRoverLogPosition class methodsFor: 'error description' stamp: 'lucy 6/4/2023 23:42:48' overrides: 50632907!
errorMarsRoverStateHasntChanged
	^'MarsRovers position hasnt changed'! !

!methodRemoval: MarsRoverLogPosition class #errorMarsRoverInitialPositionIsNotLogged stamp: 'lucy 6/4/2023 23:42:48'!
errorMarsRoverInitialPositionIsNotLogged
	^'MarsRovers position hasnt changed'!
!MarsRoverLogPositionAndHeading class methodsFor: 'error description' stamp: 'lucy 6/4/2023 23:42:59' overrides: 50632907!
errorMarsRoverStateHasntChanged
	^'MarsRovers position and heading hasnt changed'! !
!WindowMarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:42:59' prior: 50630994!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow trace: #Position for: marsRovers. 

	self 
		should: [ window show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: window class errorMarsRoverStateHasntChanged.]
	
	! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:42:59' prior: 50631180!
show
	
	(windowType = #Position) ifTrue: [
		(currentPosition isNil) ifTrue: [self error: (super class errorMarsRoverStateHasntChanged)].
		^currentPosition]. 
	(windowType = #Heading) ifTrue: [
			(currentHeading isNil) ifTrue: [self  error: (super class errorMarsRoverStateHasntChanged)].
			^	currentHeading]
		    	ifFalse: [
				(currentHeading isNil or:[currentPosition isNil] ) ifTrue: [self error: (super class errorMarsRoverStateHasntChanged)].			
				^Array with: currentPosition with: currentHeading]. ! !

!methodRemoval: MarsRoverLogPositionAndHeading class #errorMarsRoverInitialPositionAndHeadingIsNotLogged stamp: 'lucy 6/4/2023 23:42:59'!
errorMarsRoverInitialPositionAndHeadingIsNotLogged
	^'MarsRovers position and heading hasnt changed'!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:43:02'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:43:02'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/4/2023 23:43:02'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/4/2023 23:43:02'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/4/2023 23:43:02'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/4/2023 23:43:02'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:43:02'!
FAILURE!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/4/2023 23:43:05'!
FAILURE!
!MarsRoverWindow methodsFor: 'beingNotified' stamp: 'lucy 6/4/2023 23:44:05' prior: 50630753!
beingNotified: aDictionary
	currentPosition := aDictionary at: #Position. 
	currentHeading := 'Apuntando al ', (aDictionary at: #Heading) message . ! !
!MarsRoverWindow methodsFor: 'beingNotified' stamp: 'lucy 6/4/2023 23:45:49' prior: 50633452!
beingNotified: aDictionary
	currentPosition := aDictionary at: #Position. 
	currentHeading := aDictionary at: #Heading . ! !
!MarsRoverLogHeading methodsFor: 'being notified' stamp: 'lucy 6/4/2023 23:48:57' prior: 50632323 overrides: 50631701!
beingNotified: aDictionary
	|aHeading|
	((aDictionary at: #Heading) isKindOf: MarsRoverHeadingNorth) ifTrue: [aHeading := 'Apuntando al Norte'].
	log isEmpty ifFalse:[
	log last =aHeading  ifFalse:[ log add:aHeading ]]
	ifTrue: [ log add: aHeading ] ! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/4/2023 23:49:00'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:49:00'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/4/2023 23:49:00'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/4/2023 23:49:00'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/4/2023 23:49:00'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/4/2023 23:49:00'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/4/2023 23:49:00'!
FAILURE!
!MarsRoverLogHeading methodsFor: 'being notified' stamp: 'lucy 6/4/2023 23:49:52' prior: 50633468 overrides: 50631701!
beingNotified: aDictionary
	|aHeading|
	((aDictionary at: #Heading) isKindOf: MarsRoverHeadingNorth) ifTrue: [aHeading := 'Apuntando al Norte'].
	log isEmpty ifFalse:[
	log last = aHeading ifFalse:[ log add: aHeading ]]
	ifTrue: [ log add: aHeading ] ! !

!classRenamed: #MarsRoverObserver as: #MarsRoverObserverPosition stamp: 'lucy 6/4/2023 23:51:22'!
Smalltalk renameClassNamed: #MarsRoverObserver as: #MarsRoverObserverPosition!

Object subclass: #MarsRoverObserverHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserverHeading category: 'MarsRover-WithHeading' stamp: 'lucy 6/4/2023 23:51:27'!
Object subclass: #MarsRoverObserverHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserverHeading category: 'MarsRover-WithHeading' stamp: 'lucy 6/4/2023 23:56:59'!
Object subclass: #MarsRoverObserverHeading
	instanceVariableNames: 'headingTracers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserverHeading methodsFor: 'nil' stamp: 'lucy 6/4/2023 23:56:53'!
updateHeading: aHeading

	headingTracers do: [:aTracer | aTracer notifyHeadingChange: aHeading].! !

!classDefinition: #MarsRoverObserverPosition category: 'MarsRover-WithHeading' stamp: 'lucy 6/4/2023 23:57:29'!
Object subclass: #MarsRoverObserverPosition
	instanceVariableNames: 'positionTracers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserverPosition methodsFor: 'nil' stamp: 'lucy 6/4/2023 23:57:28'!
updateHeading: aHeading

	positionTracers do: [:aTracer | aTracer notifyPositionChange: aHeading].! !
!MarsRoverObserverHeading methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:58:29'!
initializeNotifyFor: aTracer
	headingTracers add: aTracer.! !
!MarsRoverObserverHeading methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:58:52'!
addNewTracer: aTracer
	headingTracers add: aTracer.! !

!methodRemoval: MarsRoverObserverHeading #initializeNotifyFor: stamp: 'lucy 6/4/2023 23:58:52'!
initializeNotifyFor: aTracer
	headingTracers add: aTracer.!
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:59:06'!
addNewTracer: aTracer
	positionTracers add: aTracer.! !
!MarsRoverObserverHeading methodsFor: 'nil' stamp: 'lucy 6/4/2023 23:59:29' overrides: 16920235!
initialize
	headingTracers := OrderedCollection new.! !
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/4/2023 23:59:38' overrides: 16920235!
initialize
	positionTracers := OrderedCollection new.! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:02:57'!
initiazeFor: aMarsRover Following: aVariableToFollow
	log := OrderedCollection new.
	(aVariableToFollow = #Position) ifTrue: [MarsRoverObserverPosition ]
	"marsRover acceptAttachment: self."
	
	! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:04:28'!
followPositionFor: aMarsRover 
	^self new initiazeFollowingPositionFor: aMarsRover! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:04:44'!
followHeadingFor: aMarsRover 
	^self new initiazeFollowingHeadingFor: aMarsRover! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:04:51'!
followPositionAndHeadingFor: aMarsRover 
	^self new initiazeFollowingHeadingFor: aMarsRover! !

!methodRemoval: MarsRoverLog class #for: stamp: 'lucy 6/5/2023 00:04:56'!
for: aMarsRover 
	^self new initiazeFor: aMarsRover !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:05:10' prior: 50633619!
followPositionAndHeadingFor: aMarsRover 
	^self new initiazeFollowingPositionAndHeadingFor: aMarsRover! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:05:21'!
logHeadingFor: aMarsRover 
	^self new initiazeFollowingHeadingFor: aMarsRover! !

!methodRemoval: MarsRoverLog class #followHeadingFor: stamp: 'lucy 6/5/2023 00:05:21'!
followHeadingFor: aMarsRover 
	^self new initiazeFollowingHeadingFor: aMarsRover!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:05:28'!
logPositionAndHeadingFor: aMarsRover 
	^self new initiazeFollowingPositionAndHeadingFor: aMarsRover! !

!methodRemoval: MarsRoverLog class #followPositionAndHeadingFor: stamp: 'lucy 6/5/2023 00:05:28'!
followPositionAndHeadingFor: aMarsRover 
	^self new initiazeFollowingPositionAndHeadingFor: aMarsRover!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:05:41'!
logPositionFor: aMarsRover 
	^self new initiazeFollowingPositionFor: aMarsRover! !

!methodRemoval: MarsRoverLog class #followPositionFor: stamp: 'lucy 6/5/2023 00:05:41'!
followPositionFor: aMarsRover 
	^self new initiazeFollowingPositionFor: aMarsRover!

!methodRemoval: MarsRoverLog #initiazeFor: stamp: 'lucy 6/5/2023 00:08:39'!
initiazeFor: aMarsRover 
	marsRover := aMarsRover.
	log := OrderedCollection new.
	marsRover acceptAttachment: self.
	
	!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 00:10:35'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'marsRover log observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:10:34' prior: 50633598!
initiazeFor: aMarsRover Following: aVariableToFollow
	log := OrderedCollection new.
	observer := aMarsRover attachPositionObserver.
	"marsRover acceptAttachment: self."
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:10:39' prior: 50633686!
initiazeFor: aMarsRover Following: aVariableToFollow
	log := OrderedCollection new.
	observer := aMarsRover attachPositionObserver.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:11:06'!
initiazeFollowingPositionFor: aMarsRover
	log := OrderedCollection new.
	observer := aMarsRover attachPositionObserver.
	
	! !

!methodRemoval: MarsRoverLog #initiazeFor:Following: stamp: 'lucy 6/5/2023 00:11:09'!
initiazeFor: aMarsRover Following: aVariableToFollow
	log := OrderedCollection new.
	observer := aMarsRover attachPositionObserver.
	
	!
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:11:42'!
initiazeFollowingHeadingFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToHeadingObserver.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:11:52' prior: 50633702!
initiazeFollowingPositionFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToPositionObserver.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:12:49'!
initiazeFollowingPositionAndHeadingFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToPositionObserver: self.
	aMarsRover attachToHeadingObserver: self.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:12:58' prior: 50633716!
initiazeFollowingHeadingFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToHeadingObserver: self.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:13:02' prior: 50633723!
initiazeFollowingPositionFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToPositionObserver: self.
	
	! !
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:16:19'!
updatePosition: aHeading

	positionTracers do: [:aTracer | aTracer notifyPositionChange: aHeading].! !

!methodRemoval: MarsRoverObserverPosition #updateHeading: stamp: 'lucy 6/5/2023 00:16:19'!
updateHeading: aHeading

	positionTracers do: [:aTracer | aTracer notifyPositionChange: aHeading].!
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:16:44' prior: 50633752!
updatePosition: aPosition

	positionTracers do: [:aTracer | aTracer notifyPositionChange: aPosition].! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 00:18:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'attach' stamp: 'lucy 6/5/2023 00:18:38'!
attachToHeadingObserver: aTracer

	(observer isNil) ifTrue: [observer := MarsRoverObserverHeading new.].
	observer addNewTracer: aTracer.
	! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 00:18:55'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers headingObserver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:18:55' prior: 50633779!
attachToHeadingObserver: aTracer

	(headingObserver isNil) ifTrue: [headingObserver := MarsRoverObserverHeading new.].
	headingObserver addNewTracer: aTracer.
	! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 00:19:30'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers headingObserver positionObserver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'attach' stamp: 'lucy 6/5/2023 00:19:28'!
attachToPositionObserver: aTracer

	(positionObserver isNil) ifTrue: [positionObserver := MarsRoverObserverHeading new.].
	positionObserver addNewTracer: aTracer.
	! !

!methodRemoval: MarsRover #acceptAttachment: stamp: 'lucy 6/5/2023 00:19:34'!
acceptAttachment: anObserver
	loggers add: anObserver. 
	!
!MarsRover methodsFor: 'command processing' stamp: 'lucy 6/5/2023 00:20:27' prior: 50630428!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand.].  
! !
!MarsRoverObserverHeading methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:21:47'!
beNotifiedOfHeadingChange: aHeading.! !
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:21:59'!
beNotifiedOfPositionChange: aHeading.! !
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:22:04' prior: 50633837!
beNotifiedOfPositionChange: aPosition.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:23:03' prior: 50624618!
moveForward
	
	head moveForward.
	headingObserver beNotifiedOfPositionChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:24:30' prior: 50633846!
moveForward
	
	head moveForward.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:24:55' prior: 50624614!
moveEast
	
	position := position + (1@0).
	positionObserver beNotifiedOfHeadingChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:25:07' prior: 50629085!
moveNorth
	
	position := position + (0@1).
	positionObserver beNotifiedOfHeadingChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:25:13' prior: 50633862!
moveNorth
	
	position := position + (0@1).
	positionObserver beNotifiedOfPositionChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:25:21' prior: 50633856!
moveEast
	
	position := position + (1@0).
	positionObserver beNotifiedOfPositionChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:25:38' prior: 50624626!
moveSouth
	
	position := position + (0@-1).
	positionObserver beNotifiedOfPositionChange: position.! !
!MarsRover methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:25:45' prior: 50624630!
moveWest
	
	position := position + (-1@0).
	positionObserver beNotifiedOfPositionChange: position.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:26:46' prior: 50631982!
headEast
	
	head := MarsRoverHeadingEast initiazeFor: self.
	positionObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:26:50' prior: 50632007!
headNorth
	
	head := MarsRoverHeadingNorth initiazeFor: self.
	positionObserver beNotifiedOfHeadingChange: head.
	! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:26:55' prior: 50631994!
headSouth
	
	head := MarsRoverHeadingSouth initiazeFor: self.
	positionObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:26:59' prior: 50631977!
headWest
	
	head := MarsRoverHeadingWest initiazeFor: self.
	positionObserver beNotifiedOfHeadingChange: head.! !
!MarsRoverObserverHeading methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:27:30' prior: 50633832!
beNotifiedOfHeadingChange: aHeading.
	headingTracers do: [:aTracer | aTracer notifyHeadingChange: aHeading].! !

!methodRemoval: MarsRoverObserverHeading #updateHeading: stamp: 'lucy 6/5/2023 00:27:35'!
updateHeading: aHeading

	headingTracers do: [:aTracer | aTracer notifyHeadingChange: aHeading].!
!MarsRoverObserverPosition methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:27:45' prior: 50633842!
beNotifiedOfPositionChange: aPosition.
	positionTracers do: [:aTracer | aTracer notifyPositionChange: aPosition].! !

!methodRemoval: MarsRoverObserverPosition #updatePosition: stamp: 'lucy 6/5/2023 00:27:47'!
updatePosition: aPosition

	positionTracers do: [:aTracer | aTracer notifyPositionChange: aPosition].!
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:29:47' prior: 50633745!
initiazeFollowingPositionFor: aMarsRover
	log := OrderedCollection new.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:29:51'!
initiazeFor: aMarsRover
	log := OrderedCollection new.
	
	! !
!MarsRoverLog methodsFor: 'initialize' stamp: 'lucy 6/5/2023 00:29:56'!
initiaze
	log := OrderedCollection new.
	
	! !

!methodRemoval: MarsRoverLog #initiazeFor: stamp: 'lucy 6/5/2023 00:30:00'!
initiazeFor: aMarsRover
	log := OrderedCollection new.
	
	!
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:31:33' prior: 50633636!
logHeadingFor: aMarsRover 

	| log|
	log := self new initiaze.
	aMarsRover attachToHeadingObserver: log.
	^log.
	! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:32:18' prior: 50633647!
logPositionAndHeadingFor: aMarsRover 

	| log|
	log := self new initiaze.
	aMarsRover attachToHeadingObserver: log.
	aMarsRover attachToPositionObserver: log.
	^log.! !
!MarsRoverLog class methodsFor: 'instance creation' stamp: 'lucy 6/5/2023 00:32:27' prior: 50633660!
logPositionFor: aMarsRover 

	| log|
	log := self new initiaze.
	aMarsRover attachToPositionObserver: log.
	^log.! !

!methodRemoval: MarsRoverLog #initiazeFollowingHeadingFor: stamp: 'lucy 6/5/2023 00:32:35'!
initiazeFollowingHeadingFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToHeadingObserver: self.
	
	!

!methodRemoval: MarsRoverLog #initiazeFollowingPositionAndHeadingFor: stamp: 'lucy 6/5/2023 00:32:36'!
initiazeFollowingPositionAndHeadingFor: aMarsRover
	log := OrderedCollection new.
	aMarsRover attachToPositionObserver: self.
	aMarsRover attachToHeadingObserver: self.
	
	!

!methodRemoval: MarsRoverLog #initiazeFollowingPositionFor: stamp: 'lucy 6/5/2023 00:32:37'!
initiazeFollowingPositionFor: aMarsRover
	log := OrderedCollection new.
	
	!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:33:02'!
 notifyPositionChange: aPosition

	log add: aPosition ! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:33:04' prior: 50634008!
notifyPositionChange: aPosition

	log add: aPosition.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:33:18'!
notifyHeadingnChange: aPosition

	log add: aPosition.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:33:20'!
notifyHeadingChange: aPosition

	log add: aPosition.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:33:58' prior: 50634023!
notifyHeadingChange: aHeading

	log add: aHeading.! !

!methodRemoval: MarsRoverLog #notifyHeadingnChange: stamp: 'lucy 6/5/2023 00:34:03'!
notifyHeadingnChange: aPosition

	log add: aPosition.!

!methodRemoval: MarsRoverLog #beingNotified: stamp: 'lucy 6/5/2023 00:36:11'!
beingNotified: aDictionary

	self subclassResponsibility!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:37:18' prior: 50633128!
test01PositionLogWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logPositionFor: marsRover.
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:37:30' prior: 50632357!
test02PositionLogAfterMovingFowardHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionFor: marsRover. 
	
	marsRover process: 'f'. 
	expectedLog:= OrderedCollection new add: 2@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:37:43' prior: 50632061!
test03PositionLogAfterMovingFowardTwiceHasTwoLines
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionFor: marsRover. 
	
	marsRover process: 'ff'. 
	expectedLog:= OrderedCollection new add: 2@1; add: 3@1;yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:37:53' prior: 50632472!
test04PositionLogAfterMovingFowardAndRotationHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionFor: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 2@1; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:38:01' prior: 50633278!
test05HeadingLogWithoutRotationsRaiseError

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverStateHasntChanged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:38:10' prior: 50633221!
test06HeadingLogAfterMovingFowardAndLeftHasOneLine
	
	|marsRover log expectedLog |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	marsRover process: 'fl'. 
	expectedLog:= OrderedCollection new add: 'Apuntando al Norte'; yourself. 
	
	self assert: log show equals: expectedLog . ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:38:18' prior: 50633306!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first first equals: 2@1.
	self assert:( log show first second) equals: 'Apuntando al Este'.
	 ! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:38:21'!
ERROR!
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:39:12'!
errorMarsRoverHeadingHasntChanged
	^'Mars Rover has not changed heading'! !
!MarsRoverLog class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:39:23'!
errorMarsRoverPositionHasntChanged
	^'Mars Rover has not changed position'! !

!methodRemoval: MarsRoverLog class #errorMarsRoverStateHasntChanged stamp: 'lucy 6/5/2023 00:39:26'!
errorMarsRoverStateHasntChanged
	self subclassResponsibility !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:39:36' prior: 50634042!
test01PositionLogWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logPositionFor: marsRover.
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverPositionHasntChanged.]! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:39:47' prior: 50634098!
test05HeadingLogWithoutRotationsRaiseError

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	self 
		should: [ log show]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: log class errorMarsRoverHeadingHasntChanged.]! !
!MarsRoverLog methodsFor: 'show' stamp: 'lucy 6/5/2023 00:40:08' prior: 50632913!
show
	^log! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:40:31' prior: 50634184!
test01PositionLogWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logPositionFor: marsRover.
	
	self assert: log show isEmpty.! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:40:43' prior: 50634199!
test05HeadingLogWithoutRotationsRaiseError

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	self assert: log show isEmpty.! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/5/2023 00:40:45'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:40:45'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:40:45'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:40:45'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/5/2023 00:40:45'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:40:45'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:40:45'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:41:07'!
test01PositionLogWithoutMovementsIsEmpty
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logPositionFor: marsRover.
	
	self assert: log show isEmpty.! !

!methodRemoval: LogMarsRoverTest #test01PositionLogWithoutMovementsRaiseError stamp: 'lucy 6/5/2023 00:41:07'!
test01PositionLogWithoutMovementsRaiseError
	
	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logPositionFor: marsRover.
	
	self assert: log show isEmpty.!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 00:41:15'!
test05HeadingLogWithoutRotationsIsEmpty

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	self assert: log show isEmpty.! !

!methodRemoval: LogMarsRoverTest #test05HeadingLogWithoutRotationsRaiseError stamp: 'lucy 6/5/2023 00:41:15'!
test05HeadingLogWithoutRotationsRaiseError

	|marsRover log|
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	
	log := MarsRoverLog logHeadingFor: marsRover. 
	
	self assert: log show isEmpty.!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 00:41:23'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:41:23'!
ERROR!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:41:23'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:41:23'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 00:41:23'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:41:23'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:41:23'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:41:24'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:41:42'!
ERROR!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:44:07'!
ERROR!
!MarsRover methodsFor: 'attach' stamp: 'lucy 6/5/2023 00:45:18' prior: 50633812!
attachToPositionObserver: aTracer

	(positionObserver isNil) ifTrue: [positionObserver := MarsRoverObserverPosition new.].
	positionObserver addNewTracer: aTracer.
	! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 00:45:22'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:45:22'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:45:22'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:45:22'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 00:45:22'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:45:22'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:45:22'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:45:37'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:45:40'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:45:52'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:46:31' prior: 50633913!
headWest
	
	head := MarsRoverHeadingWest initiazeFor: self.
	headingObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:46:38' prior: 50633906!
headSouth
	
	head := MarsRoverHeadingSouth initiazeFor: self.
	headingObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:46:44' prior: 50633899!
headNorth
	
	head := MarsRoverHeadingNorth initiazeFor: self.
	headingObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:46:49' prior: 50633892!
headEast
	
	head := MarsRoverHeadingEast initiazeFor: self.
	headingObserver beNotifiedOfHeadingChange: head.! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 00:46:52'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:46:52'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:46:52'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:46:52'!
ERROR!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 00:46:52'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:46:52'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:46:52'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:46:55'!
ERROR!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:47:21'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:47:42' prior: 50634400!
headNorth
	
	head := MarsRoverHeadingNorth initiazeFor: self.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:47:46' prior: 50634393!
headSouth
	
	head := MarsRoverHeadingSouth initiazeFor: self.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:48:06' prior: 50634447!
headNorth
	
	head := MarsRoverHeadingNorth initiazeFor: self..
	headingObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'heading' stamp: 'lucy 6/5/2023 00:48:15' prior: 50634452!
headSouth
	
	head := MarsRoverHeadingSouth initiazeFor: self.
	headingObserver beNotifiedOfHeadingChange: head.! !
!MarsRover methodsFor: 'attach' stamp: 'lucy 6/5/2023 00:49:53' prior: 50633795!
attachToHeadingObserver: aTracer

	headingObserver addNewTracer: aTracer.
	! !
!MarsRover methodsFor: 'attach' stamp: 'lucy 6/5/2023 00:49:58' prior: 50634340!
attachToPositionObserver: aTracer

	positionObserver addNewTracer: aTracer.
	! !
!MarsRover methodsFor: 'initialization' stamp: 'lucy 6/5/2023 00:50:26' prior: 50632013!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType initiazeFor: self. 
	loggers := OrderedCollection new. 
	headingObserver := MarsRoverObserverHeading new.
	positionObserver := MarsRoverObserverPosition new.! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 00:50:35'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:50:35'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:50:35'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:50:35'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 00:50:35'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:50:35'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:50:35'!
ERROR!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:50:37'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:50:46'!
ERROR!

!classRemoval: #MarsRoverLogHeading stamp: 'lucy 6/5/2023 00:50:57'!
MarsRoverLog subclass: #MarsRoverLogHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogPosition stamp: 'lucy 6/5/2023 00:51:01'!
MarsRoverLog subclass: #MarsRoverLogPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogPositionAndHeading stamp: 'lucy 6/5/2023 00:51:04'!
MarsRoverLog subclass: #MarsRoverLogPositionAndHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 00:51:12'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:51:12'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 00:51:12'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 00:51:12'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 00:51:12'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 00:51:12'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 00:51:12'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:54:04' prior: 50634028!
notifyHeadingChange: aHeading

	log add: 'Apuntando al ', aHeading.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:54:56'!
visitHeadingEast! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:56:57'!
visitHeadingEast: aHeadingEast

	log add: 'Apuntando al Este.'! !

!methodRemoval: MarsRoverLog #visitHeadingEast stamp: 'lucy 6/5/2023 00:57:00'!
visitHeadingEast!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:57:15'!
visitHeadingNorth: aHeadingNorth

	log add: 'Apuntando al Norte.'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:57:30'!
visitHeadingSouth: aHeadingSouth

	log add: 'Apuntando al Sur.'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:57:49'!
visitHeadingWest: aHeadingWest

	log add: 'Apuntando al Oeste.'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:58:21' prior: 50634575!
notifyHeadingChange: aHeading

	aHeading accept: self.! !
!MarsRoverHeading methodsFor: 'initialization' stamp: 'lucy 6/5/2023 00:58:41'!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'lucy 6/5/2023 00:59:24' overrides: 50634611!
accept: aVisitor

	aVisitor visitHeadingEast: self.! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:59:51'!
visitHeadingEast

	log add: 'Apuntando al Este.'! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 00:59:51' prior: 50634616 overrides: 50634611!
accept: aVisitor

	aVisitor visitHeadingEast.! !

!methodRemoval: MarsRoverLog #visitHeadingEast: stamp: 'lucy 6/5/2023 00:59:51'!
visitHeadingEast: aHeadingEast

	log add: 'Apuntando al Este.'!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:59:54'!
visitHeadingNorth

	log add: 'Apuntando al Norte.'! !

!methodRemoval: MarsRoverLog #visitHeadingNorth: stamp: 'lucy 6/5/2023 00:59:54'!
visitHeadingNorth: aHeadingNorth

	log add: 'Apuntando al Norte.'!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 00:59:58'!
visitHeadingSouth

	log add: 'Apuntando al Sur.'! !

!methodRemoval: MarsRoverLog #visitHeadingSouth: stamp: 'lucy 6/5/2023 00:59:58'!
visitHeadingSouth: aHeadingSouth

	log add: 'Apuntando al Sur.'!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:00:02'!
visitHeadingWest

	log add: 'Apuntando al Oeste.'! !

!methodRemoval: MarsRoverLog #visitHeadingWest: stamp: 'lucy 6/5/2023 01:00:02'!
visitHeadingWest: aHeadingWest

	log add: 'Apuntando al Oeste.'!
!MarsRoverHeadingNorth methodsFor: 'nil' stamp: 'lucy 6/5/2023 01:00:54' overrides: 50634611!
accept: aVisitor

	aVisitor visitHeadingNorth.! !
!MarsRoverHeadingSouth methodsFor: 'nil' stamp: 'lucy 6/5/2023 01:01:07' overrides: 50634611!
accept: aVisitor

	aVisitor visitHeadingSouth.! !
!MarsRoverHeadingWest methodsFor: 'nil' stamp: 'lucy 6/5/2023 01:01:16' overrides: 50634611!
accept: aVisitor

	aVisitor visitHeadingWest.! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:02:20'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:02:20'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:02:20'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:02:20'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:02:20'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:02:20'!
FAILURE!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:02:20'!
ERROR!
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:02:35' prior: 50634621!
visitHeadingEast

	log add: 'Apuntando al Este'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:02:39' prior: 50634636!
visitHeadingNorth

	log add: 'Apuntando al Norte'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:02:46' prior: 50634645!
visitHeadingSouth

	log add: 'Apuntando al Sur'! !
!MarsRoverLog methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:02:49' prior: 50634654!
visitHeadingWest

	log add: 'Apuntando al Oeste'! !

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:03:12'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:12'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:12'!
ERROR!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:03:27' prior: 50634127!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Este'.
	 ! !

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:28'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:35'!
ERROR!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:03:35'!
ERROR!

 log show!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:04:41' prior: 50634755!
test07PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'f'. 
	
	self assert: log show first equals: 2@1.
	 ! !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:04:51'!
test08PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'fl'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Norte'.
	 ! !

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:04:53'!
PASSED!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:05:11'!
test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'fl'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Norte'.
	 ! !

!methodRemoval: LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:05:11'!
test08PositionAndHeadingLogAfterMovingFowardHasOneLine
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'fl'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Norte'.
	 !
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:05:59'!
test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'flr'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Norte'.
	self assert:( log show second) equals: 'Apuntando al Este'.! !

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:06:00'!
FAILURE!
!LogMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:06:09' prior: 50634867!
test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect
	
	|marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	log := MarsRoverLog logPositionAndHeadingFor: marsRover. 
	
	marsRover process: 'flr'. 
	
	self assert: log show first equals: 2@1.
	self assert:( log show second) equals: 'Apuntando al Norte'.
	self assert:( log show third) equals: 'Apuntando al Este'.! !

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:06:11'!
PASSED!

----SNAPSHOT----(5 June 2023 01:07:45) CuisUniversity-5832.image priorSource: 9642718!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:07:58'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'log observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLog category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:07:58'!
Object subclass: #MarsRoverLog
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow class methodsFor: 'nil' stamp: 'lucy 6/5/2023 01:09:30'!
windowHeadingFor: aMarsRover 

	|window|
	window := self new initiaze.
	aMarsRover attachToHeadingObserver: window.
	^window.
	! !

!methodRemoval: MarsRoverLog class #errorMarsRoverHeadingHasntChanged stamp: 'lucy 6/5/2023 01:09:40'!
errorMarsRoverHeadingHasntChanged
	^'Mars Rover has not changed heading'!

!methodRemoval: MarsRoverLog class #errorMarsRoverPositionHasntChanged stamp: 'lucy 6/5/2023 01:09:40'!
errorMarsRoverPositionHasntChanged
	^'Mars Rover has not changed position'!

!methodRemoval: MarsRoverWindow class #trace:for: stamp: 'lucy 6/5/2023 01:09:53'!
trace: aMarsRover for: aSymbol 
	^self new initializeWith: aMarsRover for: aSymbol !

!methodRemoval: MarsRoverWindow class #traceMarsRover: stamp: 'lucy 6/5/2023 01:09:53'!
traceMarsRover: aCommand
	^self new initializeWith: aCommand. !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 01:10:09'!
windowPositionFor: aMarsRover 

	|window|
	window := self new initiaze.
	aMarsRover attachToPositionObserver: window.
	^window.
	! !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 01:10:23'!
windowPositionAndHeadingFor: aMarsRover 

	|window|
	window := self new initiaze.
	aMarsRover attachToPositionObserver: window.
	aMarsRover attachToHeadingObserver: window.
	^window.
	! !

!methodRemoval: MarsRoverWindow #initializeWith:for: stamp: 'lucy 6/5/2023 01:11:24'!
initializeWith: aSymbol  for: aMarsRover
	marsRover := aMarsRover.
	windowType := aSymbol.
	marsRover acceptAttachment: self.!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:13:33'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading text'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:13:32' overrides: 16920235!
initialize

	text := ''.
	! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:17:53'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading text textPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:17:54'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover windowType currentPosition currentHeading text textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:17:50' prior: 50635023 overrides: 16920235!
initialize

	textPosition := ''.
	textHeading := ''.
	! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:19:48' prior: 50633395!
show
	
	^textPosition, textHeading! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:20:07'!
notifyHeadingChange: aHeading

	aHeading accept: self.! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:20:57'!
notifyPositionChange: aPosition

	textPosition := aPosition.! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:21:28'!
visitHeadingEast

	textHeading := ' Apuntando al Este'! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:21:37'!
visitHeadingWest

	textHeading := ' Apuntando al Oeste'! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:21:42'!
visitHeadingNorth

	textHeading := ' Apuntando al Oeste'! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:21:46' prior: 50635074!
visitHeadingNorth

	textHeading := ' Apuntando al Norte'! !
!MarsRoverWindow methodsFor: 'show' stamp: 'lucy 6/5/2023 01:21:54'!
visitHeadingSouth

	textHeading := ' Apuntando al Sur'! !

!methodRemoval: MarsRoverWindow #beingNotified: stamp: 'lucy 6/5/2023 01:22:22'!
beingNotified: aDictionary
	currentPosition := aDictionary at: #Position. 
	currentHeading := aDictionary at: #Heading . !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:24:02' prior: 50633378!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:24:30' prior: 50629094!
test02WindowShowsPositionAfterMovingForwardOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: '2@1'. 
	
	! !
!MarsRoverWindow methodsFor: 'being notified' stamp: 'lucy 6/5/2023 01:24:41' prior: 50635061!
notifyPositionChange: aPosition

	textPosition := aPosition asString.! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:25:16' prior: 50628918!
test04WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:25:43' prior: 50629529!
test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow trace: #PositionAndHeading for: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: '2@1 Apuntando al Norte'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:26:07' prior: 50635138!
test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowPositionAndHeadingFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: '2@1 Apuntando al Norte'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:26:28'!
test03WindowShowsPositionAfterMovingForwardTwice
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'ff'. 
	
	self assert: window show equals: '3@1'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:26:51'!
test05WindowShowsHeadingAfterRotatingLeftTwice
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'll'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:27:17'!
test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowPositionAndHeadingFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: ' Apuntando al Norte'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:27:33'!
test08WindowShowsPositionAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowPositionAndHeadingFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: '2@1'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:27:56'!
test01PositionWIndowIsEmptyIfRoversDodNotMOve
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	! !

!methodRemoval: WindowMarsRoverTest #test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves stamp: 'lucy 6/5/2023 01:27:56'!
test01WindowRaiseErrorIfYouAskForThePositionBeforeTheMarsRoverMoves
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:28:03'!
test01PositionWIndowIsEmptyIfRoversDodNotMove
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	! !

!methodRemoval: WindowMarsRoverTest #test01PositionWIndowIsEmptyIfRoversDodNotMOve stamp: 'lucy 6/5/2023 01:28:04'!
test01PositionWIndowIsEmptyIfRoversDodNotMOve
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:28:10'!
test02WindowShowsPositionAfterMovingForward
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: '2@1'. 
	
	! !

!methodRemoval: WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForwardOfTheMarsRover stamp: 'lucy 6/5/2023 01:28:10'!
test02WindowShowsPositionAfterMovingForwardOfTheMarsRover
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'f'. 
	
	self assert: window show equals: '2@1'. 
	
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:28:19'!
test04WindowShowsHeadingAfterRotating
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	! !

!methodRemoval: WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeftTheMarsRover stamp: 'lucy 6/5/2023 01:28:19'!
test04WindowShowsHeadingAfterRotatingLeftTheMarsRover
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:28:29'!
test04WindowShowsHeadingAfterRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	! !

!methodRemoval: WindowMarsRoverTest #test04WindowShowsHeadingAfterRotating stamp: 'lucy 6/5/2023 01:28:29'!
test04WindowShowsHeadingAfterRotating
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'l'. 
	
	self assert: window show equals: ' Apuntando al Norte' 
	
	!

!testRun: #WindowMarsRoverTest #test01PositionWIndowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:28:33'!
ERROR!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:29:15'!
test01PositionWindowIsEmptyIfRoversDodNotMove
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	! !

!methodRemoval: WindowMarsRoverTest #test01PositionWIndowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:29:15'!
test01PositionWIndowIsEmptyIfRoversDodNotMove
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow windowPositionFor: marsRovers. 

	self assert: window show isEmpty.
	!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:29:25'!
ERROR!

----SNAPSHOT----(5 June 2023 01:29:45) CuisUniversity-5832.image priorSource: 9705361!
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 01:30:00' prior: 50634991!
windowPositionFor: aMarsRover 

	|window|
	window := self new.
	aMarsRover attachToPositionObserver: window.
	^window.
	! !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 01:30:05' prior: 50634962!
windowHeadingFor: aMarsRover 

	|window|
	window := self new.
	aMarsRover attachToHeadingObserver: window.
	^window.
	! !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'lucy 6/5/2023 01:30:10' prior: 50634998!
windowPositionAndHeadingFor: aMarsRover 

	|window|
	window := self new.
	aMarsRover attachToPositionObserver: window.
	aMarsRover attachToHeadingObserver: window.
	^window.
	! !

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:30:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:30:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:30:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:30:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:30:12'!
FAILURE!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:30:12'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:30:12'!
FAILURE!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:30:12'!
FAILURE!

window show!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:30:54' prior: 50635176!
test05WindowShowsHeadingAfterRotatingLeftTwice
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'll'. 
	
	self assert: window show equals: ' Apuntando al Oeste' 
	
	! !

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:30:56'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:00'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:00'!
FAILURE!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:00'!
FAILURE!
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:31:12' prior: 50635188!
test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: ' Apuntando al Norte'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:31:20' prior: 50635201!
test08WindowShowsPositionAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowPositionFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: '2@1'. 
	
	! !
!WindowMarsRoverTest methodsFor: 'tests' stamp: 'lucy 6/5/2023 01:31:26' prior: 50635497!
test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft
	
	|marsRovers window|
	
	marsRovers := MarsRover at: 1@1 heading: MarsRoverHeadingEast. 
	window := MarsRoverWindow windowHeadingFor: marsRovers. 
	
	marsRovers process: 'fl'. 
	
	self assert: window show equals: ' Apuntando al Norte'. 
	
	! !

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:29'!
PASSED!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:31:32'!
PASSED!

----SNAPSHOT----(5 June 2023 01:31:37) CuisUniversity-5832.image priorSource: 9719487!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:32:16'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'windowType currentPosition currentHeading text textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:32:16'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading text textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:32:16'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'currentHeading text textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:32:16'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'text textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'lucy 6/5/2023 01:32:16'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'textPosition textHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:34'!
PASSED!

----SNAPSHOT----(5 June 2023 01:32:40) CuisUniversity-5832.image priorSource: 9729143!

----SNAPSHOT----(5 June 2023 01:32:45) CuisUniversity-5832.image priorSource: 9734560!

!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'lucy 6/5/2023 01:32:50'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:32:51'!
PASSED!

----STARTUP---- (5 June 2023 01:33:41) as /home/lucy/Documents/aaaa/linux64/CuisUniversity-5832.image!


!testRun: #LogMarsRoverTest #test01PositionLogWithoutMovementsIsEmpty stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test02PositionLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test03PositionLogAfterMovingFowardTwiceHasTwoLines stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test04PositionLogAfterMovingFowardAndRotationHasOneLine stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test05HeadingLogWithoutRotationsIsEmpty stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test06HeadingLogAfterMovingFowardAndLeftHasOneLine stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test07PositionAndHeadingLogAfterMovingFowardHasOneLine stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingLeftHasOneLine stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #LogMarsRoverTest #test08PositionAndHeadingLogAfterMovingFowardAndRotatingOnItselfIsCorrect stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test01PositionWindowIsEmptyIfRoversDodNotMove stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test02WindowShowsPositionAfterMovingForward stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test03WindowShowsPositionAfterMovingForwardTwice stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test04WindowShowsHeadingAfterRotatingLeft stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test05WindowShowsHeadingAfterRotatingLeftTwice stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test06WindowShowsHeadingAndPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test07WindowShowsHeadingAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!

!testRun: #WindowMarsRoverTest #test08WindowShowsPositionAfterMovingFowardAndRotatingLeft stamp: 'lucy 6/5/2023 01:33:47'!
PASSED!