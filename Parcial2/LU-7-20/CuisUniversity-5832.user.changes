

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (6 July 2023 15:12:05) as /home/paula/Documents/COMPUTACION/Inge1-1c2023/2doParcialImagen/resolucion/linux64/CuisUniversity-5832.image!


----End fileIn of /home/paula/Documents/COMPUTACION/Inge1-1c2023/customerImporter/customerIm-it1/linux64/PinkTheme.st----!
A very pink theme. Easy on those who are used to using pink operating systems and such.!

TestCase subclass: #AutomaticCarTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #AutomaticCarTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:12:52'!
TestCase subclass: #AutomaticCarTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classRenamed: #AutomaticCarTests as: #DrivingAssistantTests stamp: 'pau 7/6/2023 17:13:36'!
Smalltalk renameClassNamed: #AutomaticCarTests as: #DrivingAssistantTests!

!classDefinition: #DrivingAssistan category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:23:06'!
Object subclass: #DrivingAssistan
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'nil' stamp: 'pau 7/6/2023 17:23:00'!
test01

	| drivingAssistant |
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:23:15' prior: 50624507!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:24:04' prior: 50624514!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:25:58' prior: 50624521!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:27:40' prior: 50624530!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:28:04'!
ERROR!
!DrivingAssistan class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:28:10'!
onMode: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeOnMode: aSymbol ! !
!DrivingAssistan class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:28:21' prior: 50624558!
onMode: aMode 
	
	^self new initializeOnMode: aMode ! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:28:23'!
ERROR!

!classDefinition: #DrivingAssistan category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:28:38'!
Object subclass: #DrivingAssistan
	instanceVariableNames: 'mode'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistan methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:28:38'!
initializeOnMode: aMode 
	self shouldBeImplemented.
	mode := aMode.! !
!DrivingAssistan methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:28:42' prior: 50624582!
initializeOnMode: aMode 
	mode := aMode.! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:28:43'!
ERROR!
!DrivingAssistan methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:28:58'!
actualVelocity
	self shouldBeImplemented.! !
!DrivingAssistan methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:29:12' prior: 50624595!
actualVelocity
	^0* kilometer/hour! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:29:15'!
ERROR!
!DrivingAssistan methodsFor: 'beep' stamp: 'pau 7/6/2023 17:29:22'!
beepIsOn
	self shouldBeImplemented.! !
!DrivingAssistan methodsFor: 'beep' stamp: 'pau 7/6/2023 17:29:27' prior: 50624606!
beepIsOn
	^false! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:29:30'!
ERROR!
!DrivingAssistan methodsFor: 'throttle' stamp: 'pau 7/6/2023 17:29:44'!
throttleIsConnected
	self shouldBeImplemented.! !
!DrivingAssistan methodsFor: 'throttle' stamp: 'pau 7/6/2023 17:29:49' prior: 50624616!
throttleIsConnected
	^true! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:29:50'!
ERROR!
!DrivingAssistan methodsFor: 'brakes' stamp: 'pau 7/6/2023 17:29:58'!
brakesAreApplied
	self shouldBeImplemented.! !
!DrivingAssistan methodsFor: 'brakes' stamp: 'pau 7/6/2023 17:30:02' prior: 50624627!
brakesAreApplied
	^false! !

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:30:03'!
PASSED!

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:30:03'!
PASSED!

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:30:05'!
PASSED!
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:30:58'!
test02DrivingAssistantOnManualModeReceiveBeepOn

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistan onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!classRenamed: #DrivingAssistan as: #DrivingAssistant stamp: 'pau 7/6/2023 17:31:11'!
Smalltalk renameClassNamed: #DrivingAssistan as: #DrivingAssistant!
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:31:11' prior: 50624646!
test02DrivingAssistantOnManualModeReceiveBeepOn

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:31:11' prior: 50624542!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:33:12'!
test01WhenCarIsTurnedOnTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test01 stamp: 'pau 7/6/2023 17:33:12'!
test01

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:34:07'!
test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test01WhenCarIsTurnedOnTheInitialStateIsCorrect stamp: 'pau 7/6/2023 17:34:07'!
test01WhenCarIsTurnedOnTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:34:52'!
test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test02DrivingAssistantOnManualModeReceiveBeepOn stamp: 'pau 7/6/2023 17:34:52'!
test02DrivingAssistantOnManualModeReceiveBeepOn

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:35:02'!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInialStateIsCorrect stamp: 'pau 7/6/2023 17:35:02'!
test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:35:08'!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:35:08'!
test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:35:15' prior: 50624818!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Automatic. 
	
	drivingAssistant tick.
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:36:11' prior: 50624851!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Automatic. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!classDefinition: #Automatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:36:51'!
Object subclass: #Automatic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:36:46' prior: 50624867!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: #Automatic. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:36:57'!
ERROR!
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:37:06'!
withObjetiveVelocityOf: aSimpleMeasure 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithObjetiveVelocityOf: aSimpleMeasure ! !
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:37:24' prior: 50624916!
withObjetiveVelocityOf: aVelocity 
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:37:26'!
ERROR!

!classDefinition: #Automatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:37:33'!
Object subclass: #Automatic
	instanceVariableNames: 'velocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!Automatic methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:37:33'!
initializeWithObjetiveVelocityOf: aVelocity 
	self shouldBeImplemented.
	velocity := aVelocity.! !
!Automatic methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:37:41' prior: 50624943!
initializeWithObjetiveVelocityOf: aVelocity 
	velocity := aVelocity.! !

!classDefinition: #Automatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:37:56'!
Object subclass: #Automatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:37:56' prior: 50624949!
initializeWithObjetiveVelocityOf: aVelocity 
	objectiveVelocity := aVelocity.! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:37:59'!
ERROR!
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:38:11'!
objetiveVelocity
	self shouldBeImplemented.! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:32'!
ERROR!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:34'!
FAILURE!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:36'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:38:36'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:36'!
ERROR!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:36'!
ERROR!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:38:51'!
ERROR!
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:38:58' prior: 50624972!
objetiveVelocity
	! !
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:39:19' prior: 50625006!
objetiveVelocity
	^mode objectiveVelocity! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:39:25'!
ERROR!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:39:25'!
ERROR!
!Automatic methodsFor: 'nil' stamp: 'pau 7/6/2023 17:40:16'!
objectiveVelocity
	^objectiveVelocity ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:40:33' prior: 50624892!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:40:34'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:40:34'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:40:34'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:40:56' prior: 50624786!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:40:57'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:40:57'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:40:57'!
PASSED!

!classDefinition: #SemiAutomatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:41:26'!
Object subclass: #SemiAutomatic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:41:22'!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!classDefinition: #SemiAutomatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:41:45'!
Object subclass: #SemiAutomatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!SemiAutomatic methodsFor: 'nil' stamp: 'pau 7/6/2023 17:41:44'!
objectiveVelocity
	^objectiveVelocity ! !
!SemiAutomatic methodsFor: 'nil' stamp: 'pau 7/6/2023 17:41:54'!
initializeWithObjetiveVelocityOf: aVelocity 
	objectiveVelocity := aVelocity.! !
!SemiAutomatic class methodsFor: 'nil' stamp: 'pau 7/6/2023 17:42:02'!
withObjetiveVelocityOf: aVelocity 
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:42:05'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:42:05'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 17:42:05'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:42:47'!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:42:58' prior: 50625150!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant automaticMode |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:43:07' prior: 50625171!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant automaticMode |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:43:16' prior: 50625189!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual . 
	
	drivingAssistant tick. 
	
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistant class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:44:13'!
onMode: aMode withSensorSystem: aSensorSystem  
	
	^self new initializeOnMode: aMode ! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:44:13' prior: 50625095!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:44:13' prior: 50625060!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:44:13' prior: 50625027!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:44:13' prior: 50625208!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self . 
	
	drivingAssistant tick. 
	
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistant class #onMode: stamp: 'pau 7/6/2023 17:44:13'!
onMode: aMode 
	
	^self new initializeOnMode: aMode !
!DrivingAssistantTests methodsFor: 'nil' stamp: 'pau 7/6/2023 17:44:41'!
readSensor
! !
!DrivingAssistant class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 17:45:24'!
onMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	
	^self new initializeOnMode: aMode ! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:24' prior: 50625255!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:24' prior: 50625271!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:24' prior: 50625293!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:24' prior: 50625233!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistant class #onMode:withSensorSystem: stamp: 'pau 7/6/2023 17:45:24'!
onMode: aMode withSensorSystem: aSensorSystem  
	
	^self new initializeOnMode: aMode !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:45:28' prior: 50625368!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:33' prior: 50625316!
readSensor
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:40'!
readSensorSystem
	! !

!methodRemoval: DrivingAssistantTests #readSensor stamp: 'pau 7/6/2023 17:45:40'!
readSensor
	!
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:45:45'!
readDrivingSystem
	! !

!methodRemoval: DrivingAssistantTests #readDrivingSystem stamp: 'pau 7/6/2023 17:46:40'!
readDrivingSystem
	!

!classDefinition: #DrivingAssistantTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:47:23'!
TestCase subclass: #DrivingAssistantTests
	instanceVariableNames: 'sensor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'sensorSystem' stamp: 'pau 7/6/2023 17:47:19' prior: 50625440!
readSensorSystem
	^ sensor next
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:47:47' prior: 50625416!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	sensor := {}. 
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'sensorSystem' stamp: 'pau 7/6/2023 17:48:00'!
readVelocitySensor
	^ sensor next
	! !

!methodRemoval: DrivingAssistantTests #readSensorSystem stamp: 'pau 7/6/2023 17:48:00'!
readSensorSystem
	^ sensor next
	!
!DrivingAssistantTests methodsFor: 'sensorSystem' stamp: 'pau 7/6/2023 17:48:06'!
readProximitySensor
	^ sensor next
	! !

!methodRemoval: DrivingAssistantTests #readVelocitySensor stamp: 'pau 7/6/2023 17:48:06'!
readVelocitySensor
	^ sensor next
	!

!classDefinition: #DrivingAssistantTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:48:15'!
TestCase subclass: #DrivingAssistantTests
	instanceVariableNames: 'velocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:48:15' prior: 50625495!
readProximitySensor
	^ velocity next
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:48:15' prior: 50625467!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	velocity := {}. 
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'sensorSystem' stamp: 'pau 7/6/2023 17:48:25'!
readVelocitySensor
	^ velocity next
	! !

!classDefinition: #DrivingAssistantTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:48:35'!
TestCase subclass: #DrivingAssistantTests
	instanceVariableNames: 'velocity proximity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'sensorSystem' stamp: 'pau 7/6/2023 17:48:33' prior: 50625512!
readProximitySensor
	^ proximity next
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:49:01' prior: 50625517!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	velocity := {50*kilometer /hour . }. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:49:24' prior: 50625556!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	velocity := {50*kilometer /hour . }. 
	proximity := {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:51:18'!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := {50*kilometer /hour . }. 
	proximity := {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTick stamp: 'pau 7/6/2023 17:51:18'!
test04DrivingAssistantOnManualModeReceiveFirstTick

	| drivingAssistant |
	
	velocity := {50*kilometer /hour . }. 
	proximity := {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:52:05' prior: 50625598!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := {50*kilometer /hour . }. 
	proximity := {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:52:46' prior: 50625643!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . }. 
	proximity :=  ReadStream on: {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:53:00'!
ERROR!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 17:53:09'!
tick
	self shouldBeImplemented.! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 17:53:15' prior: 50625688!
tick
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:53:18'!
FAILURE!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:54:00'!
initializeOnMode: aMode withSensorSystem: aSensorSystem  
	mode := aMode.! !
!DrivingAssistant class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:54:00' prior: 50625320!
onMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	
	^self new initializeOnMode: aMode withSensorSystem: aSensorSystem ! !

!methodRemoval: DrivingAssistant #initializeOnMode: stamp: 'pau 7/6/2023 17:54:00'!
initializeOnMode: aMode 
	mode := aMode.!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:54:22'!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	mode := aMode.! !
!DrivingAssistant class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:54:22' prior: 50625706!
onMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	
	^self new initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem ! !

!methodRemoval: DrivingAssistant #initializeOnMode:withSensorSystem: stamp: 'pau 7/6/2023 17:54:22'!
initializeOnMode: aMode withSensorSystem: aSensorSystem  
	mode := aMode.!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:54:49' prior: 50625718!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	
	| drivingSystem sensorSystem |
	mode := aMode.
	sensorSystem := aSensorSystem . 
	drivingSystem := aDrivingSystem . ! !

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:55:10'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:55:15'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:55:13' prior: 50625740!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:55:17'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 17:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:55:18'!
FAILURE!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:55:18'!
FAILURE!

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:56:05'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 17:56:03' prior: 50625692!
tick
	
	actualVelocity := sensorsystem readVelocitySensor. ! !

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:56:28'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityOfObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 17:56:25' prior: 50625807!
tick
	
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityOfObject := sensorsystem readProximitySensor. ! !

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 17:56:37'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityFromCar'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 17:56:37' prior: 50625822!
tick
	
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. ! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:56:57' prior: 50625767!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . ! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:57:10' prior: 50625846!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	"proximityFromCar := "! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 17:57:23' prior: 50625856!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	! !
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 17:57:29' prior: 50624600!
actualVelocity
	^actualVelocity ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:57:38'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:57:38'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 17:57:38'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:57:38'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 17:57:58' prior: 50625663!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:58:02'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:58:02'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:58:02'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 17:58:02'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:58:02'!
PASSED!
!DrivingAssistantTests methodsFor: 'nil' stamp: 'pau 7/6/2023 17:58:46'!
beepIsOn
	^false! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:58:58'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 17:58:58'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 17:58:58'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 17:58:58'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 17:58:58'!
PASSED!
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 17:59:30' prior: 50624610!
beepIsOn
	^ drivingsystem beepIsOn ! !

!methodRemoval: DrivingAssistantTests #beepIsOn stamp: 'pau 7/6/2023 18:01:47'!
beepIsOn
	^false!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:01:53'!
ERROR!
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:02:03' prior: 50625965!
beepIsOn
	^ false! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:02:04'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:02:04'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:02:04'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:02:04'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:03:41' prior: 50625898!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

(50* (kilometer^2) )/ (180000*kilometer / (hour^2))!

(50* (kilometer^2)/hour )/ (180000*kilometer / (hour^2))!

50* (kilometer^2)/hour !

180000*kilometer / (hour^2)!

(50* (kilometer^2)/hour )/ (180000*kilometer / (hour^2))!

(100*kilometer/hour)^2 / (180000*kilometer / (hour^2))!

(50* (kilometer/hour)^2 )/ (180000*kilometer / (hour^2)). !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:06:23'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:06:23'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:06:23'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:06:23'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:06:23'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:06:51' prior: 50625839!
tick
	
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:07:22' prior: 50626051!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). ! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:07:48' prior: 50626058!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:08:14' prior: 50625998!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:09:09'!
test04DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:09:13'!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:09:13'!
test04DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:09:28' prior: 50626119!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {1000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:09:59' prior: 50626162!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {1000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOn).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:10:02'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:12:01' prior: 50626067!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: []
	ifFalse: [
		(proximityFromCar > dmf) ifTrue: []
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:12:32' prior: 50626208!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: []
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar < (2*dmf)]) ifTrue: []
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:12:48' prior: 50626220!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: []
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: []
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:13:20' prior: 50626234!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: []
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [ drivingsystem warningProximityBeep]
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:13:40' prior: 50626248!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [drivingsystem turnOffProximityBeep]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [ drivingsystem warningProximityBeep]
		] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:13:44'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:13:44'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:13:44'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:13:44'!
ERROR!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:13:44'!
ERROR!
!DrivingAssistantTests methodsFor: 'nil' stamp: 'pau 7/6/2023 18:14:08'!
turnOffProximityBeep! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 18:14:34'!
warningProximityBeep! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:14:39'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:14:40'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:14:40'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:14:40'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:14:40'!
FAILURE!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:14:40'!
FAILURE!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:14:44'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:14:48'!
FAILURE!

125/9 floor!

125/9 toInfinity!

125/9 isLarge !

125/9 floor !

(125/9) floor !

proximityFromCar!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:17:04'!
FAILURE!

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 18:17:41'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityFromCar beep'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:17:39' prior: 50625977!
beepIsOn
	^ beep! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:18:11' prior: 50625867!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:18:50' prior: 50626263!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ beep := #off. drivingsystem turnOffProximityBeep]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		] 
	
	! !
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:19:16'!
beepIsOff
	^ beep! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 18:19:16' prior: 50626183!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {1000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 18:19:16' prior: 50625328!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 18:19:16' prior: 50626077!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self deny: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 18:19:16' prior: 50625388!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 18:19:16' prior: 50625345!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self deny: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistant #beepIsOn stamp: 'pau 7/6/2023 18:19:16'!
beepIsOn
	^ beep!
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:19:27' prior: 50626391!
beepIsOff
	^ (beep = #off)! !
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:19:36'!
beepIsOnWarning
	^ (beep = #warning)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:19:55' prior: 50626395!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {1000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:20:14' prior: 50626416!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: drivingAssistant beepIsOff.   
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:20:20' prior: 50626478!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := Automatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:20:24' prior: 50626455!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:20:28' prior: 50626433!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:20:32'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:21:06' prior: 50626512!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:21:08'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:22:05'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:22:18'!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:22:39' prior: 50626693!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:22:45' prior: 50626714!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:22:47'!
ERROR!
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:22:54'!
beepIsOnDanger
	self shouldBeImplemented.! !
!DrivingAssistant methodsFor: 'beep' stamp: 'pau 7/6/2023 18:23:05' prior: 50626760!
beepIsOnDanger
	^ (beep = #danger)! !

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:23:06'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:23:41' prior: 50626375!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ beep := #off. drivingsystem turnOffProximityBeep]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		ifFalse: [
			beep := #danger.  drivingsystem dangerProximityBeep
			]
		] 
	
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 18:23:53'!
dangerProximityBeep! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:23:59'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:25:23'!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: #Manual withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:25:56'!
automaticMode

	^ Automatic withObjetiveVelocityOf: (20*kilometer/hour)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:25:56' prior: 50626550!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := self automaticMode. 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:26:36' prior: 50626849!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	
	drivingAssistant := DrivingAssistant onMode: self automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:26:50'!
drivingAssistantOnAutomaticMode

	^ DrivingAssistant onMode: self automaticMode withSensorSystem: self withDrivingSystem: self! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:26:50' prior: 50626870!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:26:53'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:27:50' prior: 50626822!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:27:59' prior: 50626948!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:28:00'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:28:10' prior: 50626968!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:28:13'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:28:45' prior: 50626992!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (20*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:28:46'!
FAILURE!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:30:19'!
FAILURE!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:32:05' prior: 50626364!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:33:33'!
calculateDMF
	
	(actualVelocity )^2 / (180000*kilometer / (hour^2)). 

	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:34:17' prior: 50627085!
calculateDMF
	
	(mode isKindOf: Automatic) ifTrue: [(mode objectiveVelocity )^2 / (180000*kilometer / (hour^2))]. 
	
	^(actualVelocity )^2 / (180000*kilometer / (hour^2)). 

	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:34:19'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:34:19'!
FAILURE!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:34:19'!
FAILURE!
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 18:34:48' prior: 50625877!
actualVelocity
	
	
	^actualVelocity ! !
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 18:35:17' prior: 50627134!
actualVelocity
	
	(mode isKindOf: Automatic) ifTrue: [^mode objectiveVelocity]. 
	^actualVelocity ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:35:18'!
FAILURE!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:35:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:35:18'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:36:12' prior: 50626774!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	dmf := (actualVelocity )^2 / (180000*kilometer / (hour^2)). 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ beep := #off. drivingsystem turnOffProximityBeep]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		ifFalse: [
			beep := #danger.  drivingsystem dangerProximityBeep
			]
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:38:52' prior: 50627091!
calculateDMF

	^(actualVelocity )^2 / (180000*kilometer / (hour^2)). 

	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:39:15' prior: 50627179!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ beep := #off. drivingsystem turnOffProximityBeep]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		ifFalse: [
			beep := #danger.  drivingsystem dangerProximityBeep
			]
		] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:39:18'!
FAILURE!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:39:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:39:18'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:39:38' prior: 50626896!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:39:44' prior: 50626572!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant automaticMode |
	
	
	automaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: automaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:40:21' prior: 50627046!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:40:51' prior: 50627297!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:40:52'!
FAILURE!
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 18:41:16' prior: 50627139!
actualVelocity
	
	^actualVelocity ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:41:17'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:41:59'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:42:14'!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:42:27' prior: 50627382!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistant class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 18:43:07' prior: 50625725!
onMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   
	
	
	^self new initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem ! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:44:16' prior: 50627204!
tick
	
	| dmf |
	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
	ifTrue: [ beep := #off. 
		drivingsystem turnOffProximityBeep. ]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		ifFalse: [
			beep := #danger.  drivingsystem dangerProximityBeep
			]
		] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:44:17'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:44:56' prior: 50627404!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:45:52' prior: 50627489!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOnWarning).  
	
	
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:46:29' prior: 50627511!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:46:31'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:47:02'!
readSensorSystem

	actualVelocity := sensorsystem readVelocitySensor. 
	proximityFromCar := sensorsystem readProximitySensor! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:47:02' prior: 50627436!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
	ifTrue: [ beep := #off. 
		drivingsystem turnOffProximityBeep. ]
	ifFalse: [
		(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [beep := #warning.  drivingsystem warningProximityBeep]
		ifFalse: [
			beep := #danger.  drivingsystem dangerProximityBeep
			]
		] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:49:41' prior: 50627567!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					drivingsystem keepSpeedAt: (mode objectiveVelocity - (5*kilometer/hour ) )
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 18:50:11'!
keepSpeedAt: aVelocity! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:50:11'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:50:12'!
FAILURE!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:50:12'!
FAILURE!

dmf!

self floor!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:51:34' prior: 50627534!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:51:35'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:51:39' prior: 50627647!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:51:40'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 18:51:48' prior: 50627674!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:51:49'!
FAILURE!

proximityFromCar > (dmf *2 )!

mode objectiveVelocity!

mode objectiveVelocity - (5*kilometer/hour ) !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:54:19' prior: 50627583!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					mode setObjetiveVelocityAt: (mode objectiveVelocity - (5*kilometer/hour )). 
					drivingsystem keepSpeedAt: (mode objectiveVelocity - (5*kilometer/hour ))
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:54:22'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:54:22'!
ERROR!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:54:22'!
ERROR!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:54:31' prior: 50627731!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					drivingsystem keepSpeedAt: (mode objectiveVelocity - (5*kilometer/hour ))
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 18:55:07'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityFromCar beep objetiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:55:06' prior: 50627075!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	
	
	(aMode isKindOf: Automatic ) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !
!DrivingAssistant methodsFor: 'velocity' stamp: 'pau 7/6/2023 18:55:19' prior: 50625010!
objetiveVelocity
	^ objetiveVelocity ! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:55:24' prior: 50627824!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	
	(aMode isKindOf: Automatic ) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:55:55' prior: 50627793!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					drivingsystem keepSpeedAt: objetiveVelocity 
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:55:56'!
FAILURE!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:55:56'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:55:56'!
FAILURE!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:56:01'!
FAILURE!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:56:13'!
FAILURE!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:57:28' prior: 50627843!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	
	(aMode isKindOf: Automatic ) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:57:29'!
FAILURE!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:57:29'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:57:29'!
FAILURE!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:57:33'!
FAILURE!

aMode!

aMode!

aMode isKindOf: Automatic!
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 18:58:31' prior: 50627921!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	beep := #off. 
	
	(aMode ~= #Manual) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:58:33'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 18:58:34'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:58:34'!
FAILURE!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 18:58:34'!
FAILURE!

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 18:59:47'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityFromCar beep objetiveVelocity throttleIsConnected'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 18:59:45' prior: 50627856!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 18:59:59'!
disconnectThrottle! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:00:03'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:00:03'!
FAILURE!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:00:03'!
FAILURE!
!DrivingAssistant methodsFor: 'throttle' stamp: 'pau 7/6/2023 19:00:13' prior: 50624621!
throttleIsConnected
	^throttleIsConnected ! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 19:00:22' prior: 50627975!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	throttleIsConnected := true. 
	beep := #off. 
	
	(aMode ~= #Manual) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:00:24'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:00:39'!
test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:00:49' prior: 50628162!
test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:00:55' prior: 50628184!
test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:01:43' prior: 50628042!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:01:54'!
releaseBrakes! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:01:57'!
PASSED!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:01:57'!
FAILURE!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:01:57'!
FAILURE!

!classDefinition: #DrivingAssistant category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:02:15'!
Object subclass: #DrivingAssistant
	instanceVariableNames: 'mode sensorsystem drivingsystem actualVelocity proximityFromCar beep objetiveVelocity throttleIsConnected brakesOn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'brakes' stamp: 'pau 7/6/2023 19:02:13' prior: 50624632!
brakesAreApplied
	^brakesOn! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 19:02:29' prior: 50628114!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	throttleIsConnected := true. 
	beep := #off. 
	brakesOn := false. 
	
	(aMode ~= #Manual) ifTrue: [objetiveVelocity := aMode objectiveVelocity ]! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:02:30'!
PASSED!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:02:30'!
FAILURE!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:02:30'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:02:51' prior: 50628228!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  drivingsystem dangerProximityBeep
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:03:21' prior: 50628373!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:03:21'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:03:22'!
PASSED!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:03:22'!
FAILURE!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:03:22'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:03:44' prior: 50628399!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:04:14' prior: 50628206!
test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:04:15'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:04:27' prior: 50628468!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:04:42' prior: 50628531!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				drivingsystem warningProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:04:55'!
applyBrakes
! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!

!testRun: #DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:04:56'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:06:26'!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:06:33'!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:06:33'!
test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:06:37'!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:06:37'!
test9DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:11:23' prior: 50628666!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (15*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).    
	
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:11:27' prior: 50628711!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:11:58' prior: 50628567!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [beep := #warning.  
				(mode = #Manual) ifTrue: [drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:12:16' prior: 50628801!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [ beep := #off. 
			drivingsystem turnOffProximityBeep.
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:12:46' prior: 50628837!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			(mode = #Manual) ifTrue: [
			 beep := #off. 
			drivingsystem turnOffProximityBeep.]. 
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:12:59' prior: 50628874!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			(mode = #Manual) ifTrue: [
			 beep := #off. 
			drivingsystem turnOffProximityBeep.]. 
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:13:16'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:13:16'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:13:16'!
FAILURE!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:14:04'!
PASSED!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:04'!
ERROR!

!testRun: #DrivingAssistantTests #test8DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:04'!
ERROR!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:07'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:14:16'!
_test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:16'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:16'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:16'!
FAILURE!

!methodRemoval: DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:22'!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:27'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:14:29'!
PASSED!

Object subclass: #DrivingSystemMode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #DrivingSystemMode category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:14:56'!
Object subclass: #DrivingSystemMode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

DrivingSystemMode subclass: #Automatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #Automatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:15:11'!
DrivingSystemMode subclass: #Automatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

DrivingSystemMode subclass: #SemiAutomatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #SemiAutomatic category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:15:16'!
DrivingSystemMode subclass: #SemiAutomatic
	instanceVariableNames: 'objectiveVelocity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:15:38' prior: 50628913!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			
			
			(mode = #Manual) ifTrue: [
			 beep := #off. 
			drivingsystem turnOffProximityBeep.]. 
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !

DrivingSystemMode subclass: #Manual
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #Manual category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:15:52'!
DrivingSystemMode subclass: #Manual
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:16:20' prior: 50626533!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: drivingAssistant beepIsOff.   
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:16:54' prior: 50626735!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:17:01' prior: 50626621!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistant methodsFor: 'initialization' stamp: 'pau 7/6/2023 19:17:23' prior: 50628315!
initializeOnMode: aMode withSensorSystem: aSensorSystem withDrivingSystem: aDrivingSystem   

	mode := aMode.
	sensorsystem := aSensorSystem . 
	drivingsystem := aDrivingSystem . 
	actualVelocity := 0*kilometer /hour . 
	throttleIsConnected := true. 
	beep := #off. 
	brakesOn := false. 
	
	(aMode isKindOf: Manual)  ifFalse: [objetiveVelocity := aMode objectiveVelocity ]! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:18:45' prior: 50629220!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			
			mode onSafeZoneReactOn: self. 
			(mode = #Manual) ifTrue: [
			 beep := #off. 
			drivingsystem turnOffProximityBeep.]. 
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!Automatic methodsFor: 'nil' stamp: 'pau 7/6/2023 19:19:08'!
onSafeZoneReactOn: aDrivingAssistant! !
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:19:52' prior: 50629386!
onSafeZoneReactOn: aDrivingAssistant
	
	! !
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:20:28' prior: 50629391!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnAutomaticMode: self.! !
!Manual methodsFor: 'nil' stamp: 'pau 7/6/2023 19:20:39'!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnManualMode: self.! !
!SemiAutomatic methodsFor: 'nil' stamp: 'pau 7/6/2023 19:20:50'!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnSemiAutomaticMode: self.! !
!DrivingAssistant methodsFor: 'nil' stamp: 'pau 7/6/2023 19:21:26'!
onSafeZoneReactOnAutomaticMode
	! !
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:21:34' prior: 50629396!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnAutomaticMode. ! !
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:21:39' prior: 50629401!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnManualMode. ! !
!SemiAutomatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:21:44' prior: 50629407!
onSafeZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnSemiAutomaticMode. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:21:56'!
onSafeZoneReactOnManualMode
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:22:06' prior: 50629346!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			
			mode onSafeZoneReactOn: self. 
			(mode = #Manual) ifTrue: [
			 ]. 
			
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:22:15' prior: 50629436!
onSafeZoneReactOnManualMode
	beep := #off. 
	drivingsystem turnOffProximityBeep.! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:22:26' prior: 50629440!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode = #Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:22:27'!
ERROR!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:22:27'!
FAILURE!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:22:27'!
FAILURE!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:22:27'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:22:35'!
ERROR!

aMode!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:22:59' prior: 50626595!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert:  (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:23:01'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:23:03'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:23:03'!
FAILURE!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:23:03'!
FAILURE!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:23:05'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:23:23' prior: 50629486!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode isKindOf: Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode = #Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:23:30' prior: 50629636!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				(mode isKindOf: Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:23:31'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:23:54' prior: 50629674!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				
				mode onWarningZoneReactOn: self. 
				
				(mode isKindOf: Manual) ifTrue: [beep := #warning.
									drivingsystem warningProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:24:15'!
onWarningZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onWarningZoneReactOnAutomaticMode. ! !
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:24:24'!
onWarningZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onSafeZoneReactOnManualMode. ! !
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:24:29' prior: 50629796!
onWarningZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onWarningZoneReactOnOnManualMode. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:24:51'!
onWarningZoneReactOnManualMode
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:24:58'!
onWarningZoneReactOnAutomaticMode
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:25:14' prior: 50629751!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				
				mode onWarningZoneReactOn: self. 
				
				(mode isKindOf: Manual) ifTrue: [ ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= false. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem releaseBrakes. 
					]
				]
			ifFalse: [
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:25:22' prior: 50629808!
onWarningZoneReactOnManualMode
	beep := #warning.
	drivingsystem warningProximityBeep.! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:25:31' prior: 50629816!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  
				
				mode onWarningZoneReactOn: self. 
				
				(mode isKindOf: Manual) ifTrue: [ ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					
					]
				]
			ifFalse: [
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:25:43' prior: 50629812!
onWarningZoneReactOnAutomaticMode
	objetiveVelocity := objetiveVelocity - (5*kilometer/hour ). 
	throttleIsConnected := false. 
	brakesOn:= false. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem releaseBrakes. ! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:26:17' prior: 50629860!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  mode onWarningZoneReactOn: self. ]
			ifFalse: [
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:26:18'!
ERROR!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:26:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:26:18'!
ERROR!
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:26:41' prior: 50629802!
onWarningZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onWarningZoneReactOnManualMode. ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:26:42'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:27:20' prior: 50629901!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  mode onWarningZoneReactOn: self. ]
			ifFalse: [
				mode onDangerModeReactOn: self. 
				(mode isKindOf: Manual) ifTrue: [
				beep := #warning.
				beep := #danger.  
				drivingsystem dangerProximityBeep. ]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:27:41'!
onDangerModeReactOn: aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnAutomaticMode. ! !
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:27:59'!
onDangerZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnManualMode. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:28:14'!
onDangerZoneReactOnAutomaticMode
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:28:20'!
onDangerZoneReactOnManualMode
	beep := #off. 
	drivingsystem turnOffProximityBeep.! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:28:23' prior: 50630059!
onDangerZoneReactOnManualMode
! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:28:37' prior: 50630016!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  mode onWarningZoneReactOn: self. ]
			ifFalse: [
				mode onDangerModeReactOn: self. 
				(mode isKindOf: Manual) ifTrue: [
				]. 
				(mode isKindOf: Automatic ) ifTrue: [
					objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
					throttleIsConnected := false. 
					brakesOn:= true. 
					drivingsystem keepSpeedAt: objetiveVelocity. 
					drivingsystem disconnectThrottle. 
					drivingsystem applyBrakes. 
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:28:53' prior: 50630065!
onDangerZoneReactOnManualMode
	beep := #danger.  
	drivingsystem dangerProximityBeep. ! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:29:06' prior: 50630069!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) 
		ifTrue: [
			mode onSafeZoneReactOn: self. 
			]
		ifFalse: [
			(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) 
			ifTrue: [  mode onWarningZoneReactOn: self. ]
			ifFalse: [
				mode onDangerModeReactOn: self. 
				(mode isKindOf: Manual) ifTrue: [
				]. 
				(mode isKindOf: Automatic ) ifTrue: [
					
					]
				]
			] 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:29:18' prior: 50630055!
onDangerZoneReactOnAutomaticMode
	objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:29:20'!
ERROR!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:29:20'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:29:20'!
ERROR!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:30:04' prior: 50630100!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ mode onSafeZoneReactOn: self. ]
	ifFalse: [
	(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [  mode onWarningZoneReactOn: self. ]
														ifFalse: [mode onDangerModeReactOn: self. ]] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:05'!
ERROR!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:05'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:05'!
ERROR!

mode!
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:30:26'!
onDangerModeReactOn:  aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnManualMode. ! !

!methodRemoval: Manual #onDangerModeReactOn: stamp: 'pau 7/6/2023 19:30:34'!
onDangerModeReactOn:  aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnManualMode. !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 19:30:42' prior: 50630172!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(proximityFromCar > (dmf *2 )) ifTrue: [ mode onSafeZoneReactOn: self. ]
	ifFalse: [
	(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [  mode onWarningZoneReactOn: self. ]
														ifFalse: [mode onDangerZoneReactOn: self. ]] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:30:43'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:43'!
ERROR!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:30:43'!
ERROR!
!Automatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:31:15'!
onDangerZoneReactOn: aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnAutomaticMode. ! !

!methodRemoval: Automatic #onDangerModeReactOn: stamp: 'pau 7/6/2023 19:31:15'!
onDangerModeReactOn: aDrivingAssistant
	
	aDrivingAssistant onDangerZoneReactOnAutomaticMode. !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:31:17'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:31:36'!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #_test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:31:36'!
_test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:31:57' prior: 50630346!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self deny: (drivingAssistant throttleIsConnected). 
	
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:32:18' prior: 50630392!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:32:19'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:33:07' prior: 50630414!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := DrivingAssistant onMode: 1 withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:33:19' prior: 50627274!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant semiautomaticMode |
	
	
	semiautomaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: semiautomaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:33:55' prior: 50630441!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:33:55'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:34:03' prior: 50630488!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (10*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:04'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:34:14' prior: 50630518!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:15'!
ERROR!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:34:24'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:24'!
ERROR!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:24'!
ERROR!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:34:31'!
onSafeZoneReactOnSemiAutomaticMode
	self shouldBeImplemented.! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 19:34:55' prior: 50630625!
onSafeZoneReactOnSemiAutomaticMode
	self onSafeZoneReactOnManualMode . 
	self onSafeZoneReactOnAutomaticMode . ! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:34:56'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:35:02'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:37:37'!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:39:05' prior: 50627317!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:39:24' prior: 50630685!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (25*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:39:29'!
ERROR!

TestCase subclass: #DrivingAssistantTests
	instanceVariableNames: 'velocity proximity beep brakes throttle speedToKeep'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #DrivingAssistantTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 19:44:21'!
TestCase subclass: #DrivingAssistantTests
	instanceVariableNames: 'velocity proximity beep brakes throttle speedToKeep'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:44:37' prior: 50628602!
applyBrakes
	brakes := 	#on! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:44:53' prior: 50626793!
dangerProximityBeep
	
	beep := #danger! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:45:06' prior: 50628066!
disconnectThrottle
	throttle := #off! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:45:22' prior: 50627603!
keepSpeedAt: aVelocity
	speedToKeep := aVelocity .! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:45:31' prior: 50628253!
releaseBrakes
	brakes := #off! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:45:41' prior: 50626300!
turnOffProximityBeep
	beep := #off! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:45:53' prior: 50626304!
warningProximityBeep
	beep := #warning! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:47:09' prior: 50629567!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert:  (beep = #off).  
	
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:47:45' prior: 50630814!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self deny: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:48:11' prior: 50630835!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self deny: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:48:11'!
FAILURE!

throttle!
!DrivingAssistantTests methodsFor: 'nil' stamp: 'pau 7/6/2023 19:48:53' overrides: 16961394!
setUp
	! !
!DrivingAssistantTests methodsFor: 'drivingSystem' stamp: 'pau 7/6/2023 19:49:07'!
connectThrottle
	throttle := #on! !
!DrivingAssistantTests methodsFor: 'setUp' stamp: 'pau 7/6/2023 19:50:30' prior: 50630884 overrides: 16961394!
setUp
	self connectThrottle. 
	self releaseBrakes. 
	! !
!DrivingAssistantTests methodsFor: 'setUp' stamp: 'pau 7/6/2023 19:50:38' prior: 50630892 overrides: 16961394!
setUp
	self connectThrottle. 
	self releaseBrakes. 
	self turnOffProximityBeep. 
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:50:39'!
FAILURE!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:50:39'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:50:39'!
ERROR!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:50:46'!
FAILURE!

brakes!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:08'!
FAILURE!

brakes!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:52:28' prior: 50630855!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:29'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:29'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:29'!
ERROR!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:35'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:35'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:35'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:52:58' prior: 50629310!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:52:59'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:59'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:52:59'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:53:19' prior: 50629289!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	! !

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:53:20'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:53:20'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:53:20'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:53:20'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:53:20'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:53:21'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:53:21'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:53:21'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:54:15' prior: 50630710!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:54:49' prior: 50628757!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:55:10' prior: 50631288!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:55:17' prior: 50631310!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:18'!
FAILURE!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:18'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:18'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:55:24' prior: 50631335!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:25'!
FAILURE!

throttle!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:55:36' prior: 50631412!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:38'!
FAILURE!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:38'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:38'!
ERROR!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:41'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:55:41'!
ERROR!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:41'!
FAILURE!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:55:43'!
FAILURE!

speedToKeep!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:56:09'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:57:23'!
test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:57:33' prior: 50631261!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:34'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:34'!
ERROR!

!testRun: #DrivingAssistantTests #test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad stamp: 'pau 7/6/2023 19:57:34'!
FAILURE!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:57:41'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:57:41'!
ERROR!

!testRun: #DrivingAssistantTests #test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad stamp: 'pau 7/6/2023 19:57:41'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:58:17' prior: 50628779!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (10*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:58:18'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:58:37' prior: 50631739!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (10*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 19:58:37'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 19:58:37'!
ERROR!

!testRun: #DrivingAssistantTests #test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad stamp: 'pau 7/6/2023 19:58:37'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:58:46'!
_test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad stamp: 'pau 7/6/2023 19:58:46'!
test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:59:17' prior: 50630548!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 19:59:32' prior: 50631848!
_test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad


"Para todo los modes creo"
	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:00:00' prior: 50630732!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (25*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:00:14' prior: 50631959!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (25*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:00:15'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:00:38'!
ERROR!
!SemiAutomatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:00:48'!
onWarningZoneReactOn: aDrivingAssistant 
	self shouldBeImplemented.! !
!SemiAutomatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:01:13' prior: 50632024!
onWarningZoneReactOn: aDrivingAssistant 
	aDrivingAssistant onWarningZoneReactOnWarningZone! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:01:15'!
ERROR!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:01:21'!
onWarningZoneReactOnWarningZone
	self shouldBeImplemented.! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:01:40' prior: 50632041!
onWarningZoneReactOnWarningZone
	self onWarningZoneReactOnManualMode . 
	self onWarningZoneReactOnAutomaticMode. ! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:01:42'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:01:59'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:02:35' prior: 50631987!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (25*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:02:36'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:02:46' prior: 50632063!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:02:51'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:02:51'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:02:51'!
FAILURE!

throttle!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:03:18' prior: 50630118!
onDangerZoneReactOnAutomaticMode
	
	objetiveVelocity := objetiveVelocity - (10*kilometer/hour ). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:03:46' prior: 50632182!
onDangerZoneReactOnAutomaticMode
	
	objetiveVelocity := objetiveVelocity - (10*kilometer/hour). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:05:07' prior: 50632194!
onDangerZoneReactOnAutomaticMode
	
	objetiveVelocity := objetiveVelocity - (10*kilometer/hour). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:05:42' prior: 50632206!
onDangerZoneReactOnAutomaticMode
	
	| newVelocity |
	newVelocity := objetiveVelocity - (10*kilometer/hour). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:06:03' prior: 50632218!
onDangerZoneReactOnAutomaticMode
	
	| newVelocity |
	newVelocity := actualVelocity - (10*kilometer/hour). 
	throttleIsConnected := false. 
	brakesOn:= true. 
	drivingsystem keepSpeedAt: newVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem applyBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:06:18' prior: 50629890!
onWarningZoneReactOnAutomaticMode
	
	| newVelocity |
	newVelocity := actualVelocity - (5*kilometer/hour ). 
	throttleIsConnected := false. 
	brakesOn:= false. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem disconnectThrottle. 
	drivingsystem releaseBrakes. ! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:06:25' prior: 50632242!
onWarningZoneReactOnAutomaticMode
	
	| newVelocity |
	newVelocity := actualVelocity - (5*kilometer/hour ). 
	throttleIsConnected := false. 
	brakesOn:= false. 
	drivingsystem keepSpeedAt:newVelocity . 
	drivingsystem disconnectThrottle. 
	drivingsystem releaseBrakes. ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:26'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:26'!
FAILURE!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:06:26'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:26'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:26'!
FAILURE!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:45'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:45'!
FAILURE!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:06:45'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:06:45'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:45'!
FAILURE!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:06:47'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:08:50' prior: 50631601!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = 20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:08:56'!
ERROR!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:09:01'!
ERROR!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:09:10' prior: 50632366!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:09:11'!
FAILURE!

speedToKeep!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:09:47' prior: 50629413!
onSafeZoneReactOnAutomaticMode
	
	drivingsystem keepSpeedAt: objetiveVelocity. ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:09:48'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:09:48'!
FAILURE!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:09:48'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:09:48'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:09:48'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:10:13' prior: 50631441!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (15*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:11:34' prior: 50632488!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:35'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:11:35'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:35'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:35'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:11:43' prior: 50631768!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:11:44'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:11:44'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:11:44'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:12:30' prior: 50631902!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:12:30'!
FAILURE!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:13:28'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:13:28'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:13:28'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:13:32'!
FAILURE!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:14:59' prior: 50632434!
onSafeZoneReactOnAutomaticMode
	
	throttleIsConnected := #on. 
	brakesOn := #off. 
	beep := #off. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:15:30' prior: 50632755!
onSafeZoneReactOnAutomaticMode
	
	throttleIsConnected := #on. 
	brakesOn := #off. 
	beep := #off. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem releaseBrakes. 
	drivingsystem throttleIsConnected. 
	drivingsystem turnOffProximityBeep. 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:15:31'!
ERROR!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:15:31'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:15:31'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:15:31'!
FAILURE!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:15:33'!
ERROR!

drivingsystem!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:15:59' prior: 50632763!
onSafeZoneReactOnAutomaticMode
	
	throttleIsConnected := #on. 
	brakesOn := #off. 
	beep := #off. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem releaseBrakes. 
	drivingsystem connectThrottle. 
	drivingsystem turnOffProximityBeep. 
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:16:01'!
ERROR!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:16:44' prior: 50632827!
onSafeZoneReactOnAutomaticMode
	
	throttleIsConnected := true. 
	brakesOn := #off. 
	beep := #off. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem releaseBrakes. 
	drivingsystem connectThrottle. 
	drivingsystem turnOffProximityBeep. 
	
	! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:16:53' prior: 50632843!
onSafeZoneReactOnAutomaticMode
	
	throttleIsConnected := true. 
	brakesOn := false. 
	beep := #off. 
	drivingsystem keepSpeedAt: objetiveVelocity. 
	drivingsystem releaseBrakes. 
	drivingsystem connectThrottle. 
	drivingsystem turnOffProximityBeep. 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:16:54'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:16:54'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:16:54'!
FAILURE!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:16:56'!
FAILURE!

throttle!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:17:22' prior: 50632667!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:22'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:22'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:22'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:17:37' prior: 50632096!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:38'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:17:40'!
PASSED!
!DrivingSystemMode methodsFor: 'nil' stamp: 'pau 7/6/2023 20:19:56'!
objectiveVelocity
	^self subclassResponsibility. ! !
!Manual methodsFor: 'nil' stamp: 'pau 7/6/2023 20:20:20' overrides: 50633090!
objectiveVelocity
	! !
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:20:48' prior: 50633095 overrides: 50633090!
objectiveVelocity
	self error: (self errorManualModeDontHaveObjetiveVelocity)! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:20:51'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:22:01'!
test21ObjetiveVelocityOfAManualModeRaiseError



"Para todo los modes creo"
	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:23:06' prior: 50633153!
test21ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objetiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual ]


	
	
	
	
	! !
!Manual class methodsFor: 'nil' stamp: 'pau 7/6/2023 20:23:39'!
errorManualModeDontHaveObjetiveVelocity! !
!Manual class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:23:57' prior: 50633190!
errorManualModeDontHaveObjetiveVelocity
	^'manual mode dont have objective velocity'! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:23:59'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:23:59'!
FAILURE!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:23:59'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:24:09' prior: 50633181!
test21ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objetiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:24:10'!
FAILURE!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:16'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:24:16'!
FAILURE!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:24:16'!
FAILURE!
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:24:51' prior: 50633100 overrides: 50633090!
objectiveVelocity
	self error: (self class errorManualModeDontHaveObjetiveVelocity)! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:24:52'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:24:52'!
FAILURE!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:24:52'!
FAILURE!

anError!
!Manual methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:25:10' prior: 50633327 overrides: 50633090!
objectiveVelocity
	self error: (self class errorManualModeDontHaveObjetiveVelocity). ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:14'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:25:14'!
FAILURE!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:25:14'!
FAILURE!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:25:29'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:25:54' prior: 50633256!
test21ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:25:54'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:25:54'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:28:28'!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:28:45' prior: 50633520!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:29:09' prior: 50633548!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:29:09'!
ERROR!
!SemiAutomatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:29:15'!
onDangerZoneReactOn: aDrivingAssistant 
	self shouldBeImplemented.! !
!SemiAutomatic methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:29:40' prior: 50633608!
onDangerZoneReactOn: aDrivingAssistant 
	aDrivingAssistant onDangerZoneReactOnSemiAutomaticMode! !

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:29:45'!
ERROR!
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:29:51'!
onDangerZoneReactOnSemiAutomaticMode
	self shouldBeImplemented.! !
!DrivingAssistant methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:30:09' prior: 50633625!
onDangerZoneReactOnSemiAutomaticMode
	self onDangerZoneReactOnManualMode. 
	self onDangerZoneReactOnAutomaticMode. ! !

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:11'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:30:20' prior: 50633576!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:22'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:30:38' prior: 50633643!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:30:39'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:30:39'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:31:12' prior: 50633675!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:32:36'!
test13DrivingAssistantOnManualMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

TestCase subclass: #DrivingSystemModeTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!

!classDefinition: #DrivingSystemModeTests category: 'ISW1-2023-1C-2doParcial' stamp: 'pau 7/6/2023 20:33:18'!
TestCase subclass: #DrivingSystemModeTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2023-1C-2doParcial'!
!DrivingSystemModeTests methodsFor: 'nil' stamp: 'pau 7/6/2023 20:33:42'!
test04ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	! !
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:34:07'!
test01
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	! !
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:34:12'!
test01ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	! !

!methodRemoval: DrivingSystemModeTests #test04ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:34:12'!
test04ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	!

!methodRemoval: DrivingSystemModeTests #test01 stamp: 'pau 7/6/2023 20:34:16'!
test01
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:34:37'!
test02CannotCreateAutomaticModeWithNegativeVelocity
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	! !
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:35:07' prior: 50633882!
test02CannotCreateAutomaticModeWithNegativeVelocity
	
	self should: [Automatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	! !

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:35:20'!
FAILURE!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:35:55' prior: 50633894!
test02CannotCreateAutomaticModeWithNegativeVelocity
	
	self should: [Automatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Automatic cannotCreateWithNegativeVelocity ]


	
	! !

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:35:58'!
FAILURE!
!Automatic class methodsFor: 'nil' stamp: 'pau 7/6/2023 20:36:25'!
errorCannotCreateWithNegativeVelocity
	! !
!Automatic class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:36:41' prior: 50633925!
errorCannotCreateWithNegativeVelocity
	^'Cannot create mode with negative velocity'! !
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:37:11' prior: 50624926!
withObjetiveVelocityOf: aVelocity 

	(aVelocity < 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]. 
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:37:13'!
ERROR!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:37:13'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:37:13'!
ERROR!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:37:39' prior: 50633910!
test02CannotCreateAutomaticModeWithNegativeVelocity
	
	self should: [Automatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Automatic errorCannotCreateWithNegativeVelocity ]


	
	! !

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:37:40'!
PASSED!

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:37:40'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:37:40'!
PASSED!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:37:58'!
test02CannotCreateSemiAutomaticModeWithNegativeVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	! !
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:38:03'!
test03CannotCreateSemiAutomaticModeWithNegativeVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	! !

!methodRemoval: DrivingSystemModeTests #test02CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:38:03'!
test02CannotCreateSemiAutomaticModeWithNegativeVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	!
!SemiAutomatic class methodsFor: 'nil' stamp: 'pau 7/6/2023 20:38:31'!
errorCannotCreateWithNegativeVelocity
	^'cannot create mode with negative velocity'! !
!SemiAutomatic class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:38:56' prior: 50625132!
withObjetiveVelocityOf: aVelocity 

	(aVelocity < 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]. 
	
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:38:56'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:38:56'!
PASSED!
!SemiAutomatic class methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:39:00' prior: 50634084!
withObjetiveVelocityOf: aVelocity 

	(aVelocity <= 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]. 
	
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:39:09' prior: 50633936!
withObjetiveVelocityOf: aVelocity 

	(aVelocity <= 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]. 
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:39:28'!
assertVelocityIsOverZero: aVelocity

	^ (aVelocity <= 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]! !
!Automatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:39:28' prior: 50634174!
withObjetiveVelocityOf: aVelocity 

	self assertVelocityIsOverZero: aVelocity. 
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !
!SemiAutomatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:40:19'!
assertVelocityIsOverZero: aVelocity

	^ (aVelocity <= 0) ifTrue: [self error: self errorCannotCreateWithNegativeVelocity ]! !
!SemiAutomatic class methodsFor: 'instance creation' stamp: 'pau 7/6/2023 20:40:19' prior: 50634165!
withObjetiveVelocityOf: aVelocity 

	self assertVelocityIsOverZero: aVelocity. 
	
	^self new initializeWithObjetiveVelocityOf: aVelocity ! !
!DrivingSystemMode methodsFor: 'nil' stamp: 'pau 7/6/2023 20:41:11'!
onDangerZoneReactOn: aDrivingAssistant
	self subclassResponsibility ! !
!DrivingSystemMode methodsFor: 'nil' stamp: 'pau 7/6/2023 20:41:18'!
onSafeZoneReactOn: aDrivingAssistant
	self subclassResponsibility ! !
!DrivingSystemMode methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:41:23'!
onWarningZoneReactOn: aDrivingAssistant
	self subclassResponsibility ! !
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:42:02'!
test03CannotCreateAutomaticModeWithZeroVelocity
	
	self should: [Automatic withObjetiveVelocityOf: (0*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Automatic errorCannotCreateWithNegativeVelocity ]


	
	! !

!testRun: #DrivingSystemModeTests #test03CannotCreateAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 20:42:03'!
PASSED!

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:42:03'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:42:03'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 20:42:03'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:42:03'!
PASSED!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:42:09'!
test04CannotCreateSemiAutomaticModeWithNegativeVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	! !

!methodRemoval: DrivingSystemModeTests #test03CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:42:09'!
test03CannotCreateSemiAutomaticModeWithNegativeVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (-200*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	!
!DrivingSystemModeTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 20:42:20'!
test05CannotCreateSemiAutomaticModeWithZeroVelocity
	
	self should: [SemiAutomatic withObjetiveVelocityOf: (0*kilometer /hour)] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: SemiAutomatic errorCannotCreateWithNegativeVelocity ]


	
	! !

!testRun: #DrivingSystemModeTests #test05CannotCreateSemiAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!testRun: #DrivingSystemModeTests #test04CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!testRun: #DrivingSystemModeTests #test05CannotCreateSemiAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 20:42:21'!
PASSED!

!methodRemoval: DrivingAssistantTests #test21ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 20:42:35'!
test21ObjetiveVelocityOfAManualModeRaiseError
	
	self should: [(Manual new) objectiveVelocity ] 
	raise:  Error 
	withExceptionDo: [:anError| self assert: (anError messageText ) equals: Manual errorManualModeDontHaveObjetiveVelocity ]


	
	
	
	
	!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:44:42'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:46:31'!
isInSafeZone: dmf
	(proximityFromCar > (dmf *2))
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:46:45' prior: 50630240!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]
	ifFalse: [
	(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)]) ifTrue: [  mode onWarningZoneReactOn: self. ]
														ifFalse: [mode onDangerZoneReactOn: self. ]] 
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:47:19'!
isInWarningZone: dmf
	^(proximityFromCar > dmf and: [proximityFromCar <= (2*dmf)])
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:47:47' prior: 50634391!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]
	ifFalse: [(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ]
														ifFalse: [mode onDangerZoneReactOn: self. ]] 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:47:48'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:47:48'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:47:48'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:47:48'!
ERROR!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:47:50'!
ERROR!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:47:59' prior: 50634386!
isInSafeZone: dmf
	^(proximityFromCar > (dmf *2))
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:48:00'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:48:32' prior: 50634410!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]. 
	(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ]
	ifFalse: [mode onDangerZoneReactOn: self. ]
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:33'!
FAILURE!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:33'!
FAILURE!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:33'!
FAILURE!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:48:33'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:48:43'!
FAILURE!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:49:51' prior: 50634543!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]. 
	(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ].
	(proximityFromCar < dmf) ifTrue: [mode onDangerZoneReactOn: self. ]
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:49:52'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:50:12'!
isInDangerZone: dmf

	^ proximityFromCar < dmf! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:50:12' prior: 50634615!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]. 
	(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ].
	((self isInDangerZone: dmf)) ifTrue: [mode onDangerZoneReactOn: self. ]
	
	! !
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:50:16' prior: 50634688!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]. 
	(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ].
	((self isInDangerZone: dmf)) ifTrue: [mode onDangerZoneReactOn: self. ]. 
	
	! !

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:50:18'!
PASSED!
!DrivingAssistant methodsFor: 'tick' stamp: 'pau 7/6/2023 20:50:25' prior: 50634701!
tick
	
	| dmf |
	self readSensorSystem. 
	
	dmf := self calculateDMF . 
	(self isInSafeZone: dmf) ifTrue: [ mode onSafeZoneReactOn: self. ]. 
	(self isInWarningZone: dmf) ifTrue: [  mode onWarningZoneReactOn: self. ].
	((self isInDangerZone: dmf)) ifTrue: [mode onDangerZoneReactOn: self. ]. 
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:51:32'!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:51:32'!
test04DrivingAssistantOnManualModeReceiveFirstTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:53:25'!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:53:26'!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:53:41'!
test051DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWith2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

(20*kilometer/hour)^2 / (180000*kilometer / (hour^2))!

(50*kilometer/hour)^2 / (180000*kilometer / (hour^2))!

((50*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor!

((60*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor!

((60*kilometer/hour)^2 / (180000*kilometer / (hour^2))) !

((120*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((90*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((85*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((86*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((80*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((80*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor!

((81*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor!

((84*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor!

((85*kilometer/hour)^2 / (180000*kilometer / (hour^2))) floor !

((85*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((85.2*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

((85.1*kilometer/hour)^2 / (180000*kilometer / (hour^2)))!

!methodRemoval: DrivingAssistantTests #test051DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWith2DMF stamp: 'pau 7/6/2023 20:56:43'!
test051DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWith2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {20*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:56:48'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:57:54'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 20:58:41'!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test13DrivingAssistantOnManualMode stamp: 'pau 7/6/2023 20:58:45'!
test13DrivingAssistantOnManualMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:01:00' prior: 50635083!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:01:14' prior: 50635134!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:01:23' prior: 50635160!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:01:24'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone stamp: 'pau 7/6/2023 21:01:24'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:08:28' prior: 50627256!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:08:54'!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:08:54'!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:09:14'!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerModeWithLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	! !

!methodRemoval: DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:09:14'!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:10:59'!
test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: drivingAssistant beepIsOff.   
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode stamp: 'pau 7/6/2023 21:10:59'!
test01CarIsTurnedOnWithTheDrivingAssistantOnManualMode

	| drivingAssistant |
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: drivingAssistant beepIsOff.   
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:11:14'!
test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode stamp: 'pau 7/6/2023 21:11:14'!
test02CarIsTurnedOnWhitTheDrivingAssistantOnAutomaticMode

	| drivingAssistant |
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:11:30'!
test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect

	| drivingAssistant semiautomaticMode |
	
	
	semiautomaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: semiautomaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode stamp: 'pau 7/6/2023 21:11:30'!
test03CarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticMode

	| drivingAssistant semiautomaticMode |
	
	
	semiautomaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: semiautomaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:11:56' prior: 50635292!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {100000000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:12:54'!
setSensorSystemWith: velocityStream andWith: proximityStream
	velocity := velocityStream. 
	proximity :=  proximityStream. 
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:13:29' prior: 50635510!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:14:11' prior: 50634830!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

----SNAPSHOT----(6 July 2023 21:16:27) CuisUniversity-5832.image priorSource: 9366758!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:17:14'!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #_test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad stamp: 'pau 7/6/2023 21:17:20'!
_test20EstabaEnDangerYPasoASafeMeCambiaLaVelocidad


"Para todo los modes creo"
	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (20*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:17:46' prior: 50635595!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone stamp: 'pau 7/6/2023 21:17:51'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:18:48' prior: 50635649!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (20*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:19:04'!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (20*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone stamp: 'pau 7/6/2023 21:19:04'!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (20*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:19:10'!
FAILURE!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:19:17'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:20:00' prior: 50635702!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (20*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:20:02'!
FAILURE!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:20:07'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:20:37' prior: 50635764!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (speedToKeep ) equals: (20* kilometer /hour )
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:20:42' prior: 50635800!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:20:42'!
FAILURE!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:20:46'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:21:09' prior: 50635827!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:21:10'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:21:19' prior: 50635865!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerModeWithLessThanDMF stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone stamp: 'pau 7/6/2023 21:21:20'!
PASSED!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:21:20'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:24:15'!
test14DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:26:32'!
test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF stamp: 'pau 7/6/2023 21:26:32'!
test04DrivingAssistantOnManualReceiveTickAndIsOnSafeModeWithProximityMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:27:13'!
test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF stamp: 'pau 7/6/2023 21:27:13'!
test05DrivingAssistantOnManualModeReceiveTickAndIsOnWarningModeWithLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:27:46'!
test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	! !

!methodRemoval: DrivingAssistantTests #test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerModeWithLessThanDMF stamp: 'pau 7/6/2023 21:27:46'!
test06DrivingAssistantOnManualModeReceiveTickAndIsOnDangerModeWithLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:28:59'!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!testRun: #DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:29:16'!
PASSED!

!methodRemoval: DrivingAssistantTests #test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:29:21'!
test07DrivingAssistantOnAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:30:08'!
test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:31:50'!
test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtMoreThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:31:50'!
test08DrivingAssistantOnAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:33:14'!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtLessThanDMF stamp: 'pau 7/6/2023 21:33:14'!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	!

!methodRemoval: DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtMoreThanDMF stamp: 'pau 7/6/2023 21:33:22'!
test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtMoreThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	!

!testRun: #DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:33:24'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:34:03'!
test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:34:03'!
test09DrivingAssistantOnAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #off).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:34:44'!
test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode stamp: 'pau 7/6/2023 21:34:44'!
test10DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnSafeMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:35:24'!
test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode stamp: 'pau 7/6/2023 21:35:24'!
test11DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnWarningMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:36:03'!
test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

!methodRemoval: DrivingAssistantTests #test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode stamp: 'pau 7/6/2023 21:36:03'!
test12DrivingAssistantOnSemiAutomaticModeReceiveTickAndIsOnDangerMode

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:37:00'!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndLower

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone stamp: 'pau 7/6/2023 21:37:00'!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZone

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:37:15'!
test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test14DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:37:15'!
test14DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:38:03'!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndLower stamp: 'pau 7/6/2023 21:38:03'!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndLower

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:38:54'!
test16CannotCreateDrivingS

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!methodRemoval: DrivingAssistantTests #test16CannotCreateDrivingS stamp: 'pau 7/6/2023 21:38:57'!
test16CannotCreateDrivingS

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). !

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 21:40:07'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 21:40:07'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 21:40:07'!
PASSED!

!testRun: #DrivingSystemModeTests #test04CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 21:40:07'!
PASSED!

!testRun: #DrivingSystemModeTests #test05CannotCreateSemiAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 21:40:07'!
PASSED!

!testRun: #DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:09'!
PASSED!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:09'!
FAILURE!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:09'!
FAILURE!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:34'!
FAILURE!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:40:44' prior: 50636674!
test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (100* kilometer /hour ). 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:45'!
PASSED!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:40:45'!
PASSED!
!DrivingAssistantTests methodsFor: 'driving assistants' stamp: 'pau 7/6/2023 21:41:22'!
automaticModeWithObjectiveSpeedOf20kmxHour

	^ Automatic withObjetiveVelocityOf: (20*kilometer/hour)! !
!DrivingAssistantTests methodsFor: 'as yet unclassified' stamp: 'pau 7/6/2023 21:41:22' prior: 50626889!
drivingAssistantOnAutomaticMode

	^ DrivingAssistant onMode: self automaticModeWithObjectiveSpeedOf20kmxHour withSensorSystem: self withDrivingSystem: self! !

!methodRemoval: DrivingAssistantTests #automaticMode stamp: 'pau 7/6/2023 21:41:22'!
automaticMode

	^ Automatic withObjetiveVelocityOf: (20*kilometer/hour)!

!testRun: #DrivingAssistantTests #test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:42:25'!
PASSED!

!testRun: #DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:42:28'!
PASSED!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:42:28'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:42:48' prior: 50635425!
test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := self drivingAssistantOnAutomaticMode . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18'!
manualDrivingAssistant

	^ DrivingAssistant onMode: (Manual new) withSensorSystem: self withDrivingSystem: self! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18' prior: 50635390!
test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect

	| drivingAssistant |
	
	drivingAssistant := self manualDrivingAssistant. 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: drivingAssistant beepIsOff.   
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18' prior: 50636076!
test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18' prior: 50636736!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18' prior: 50636127!
test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:18' prior: 50636025!
test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:43:42' prior: 50635462!
test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect

	| drivingAssistant semiautomaticMode |
	
	
	semiautomaticMode := SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour). 
	
	drivingAssistant := DrivingAssistant onMode: semiautomaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:44:27'!
semiAutomaticModeWithObjectiveVelocityOf20kmxHour

	^ SemiAutomatic withObjetiveVelocityOf: (20*kilometer/hour)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:44:27' prior: 50636565!
test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assert:  (beep = #danger).  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:44:27' prior: 50636446!
test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assert:  (beep = #off).  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:44:27' prior: 50636508!
test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:44:27' prior: 50637291!
test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect

	| drivingAssistant semiautomaticMode |
	
	
	semiautomaticMode := self semiAutomaticModeWithObjectiveVelocityOf20kmxHour. 
	
	drivingAssistant := DrivingAssistant onMode: semiautomaticMode withSensorSystem: self withDrivingSystem: self . 
	
	self assert: (drivingAssistant actualVelocity) equals: (0*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity) equals: (20*kilometer/hour). 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26'!
assertDrivingSystemBeepIsOff

	^ self assert:  (beep = #off)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50635897!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50637349!
test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50637268!
test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50636396!
test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50636949!
test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (100* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50636310!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #on). 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:26' prior: 50636236!
test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #off). 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48'!
assertDrivingSystemThrottleIsOn

	^ self assert: (throttle = #on)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637436!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637463!
test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637573!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637220!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637542!
test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (100* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637197!
test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637245!
test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). 
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:45:48' prior: 50637494!
test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assert: (brakes = #off). 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08'!
assertDrivingSystemBrakesAreOff

	^ self assert: (brakes = #off)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637742!
test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (SemiAutomatic withObjetiveVelocityOf: (100*kilometer /hour )) 
									withSensorSystem:  self withDrivingSystem: self. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (100* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637717!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637380!
test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assert:  (beep = #warning).  
	self assert: (throttle = #off). 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637601!
test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant beepIsOff).    
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assertDrivingSystemBeepIsOff.  
	self assert: (throttle = #off). 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637631!
test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {10*meter. 10000*meter}. 
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep ) equals: (20* kilometer /hour ). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637658!
test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10000*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour). 
	
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	 
	self assert: speedToKeep equals:  (20*kilometer/hour) . 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637820!
test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: ( ReadStream on: {50*kilometer /hour.}) andWith: (ReadStream on: {100000000*meter}). 
	
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637773!
test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #warning).  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637797!
test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert:  (beep = #danger).  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:08' prior: 50637689!
test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {100000*meter}. 
	
	
	drivingAssistant := self drivingAssistantOnAutomaticMode. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant objetiveVelocity ) equals: (20*kilometer/hour).
	 
	self assert: (drivingAssistant beepIsOff).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assert: (speedToKeep = (20*kilometer/hour)). 
	self assertDrivingSystemBeepIsOff.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !

!testRun: #DrivingSystemModeTests #test01ObjetiveVelocityOfAManualModeRaiseError stamp: 'pau 7/6/2023 21:46:11'!
PASSED!

!testRun: #DrivingSystemModeTests #test02CannotCreateAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 21:46:11'!
PASSED!

!testRun: #DrivingSystemModeTests #test03CannotCreateAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 21:46:11'!
PASSED!

!testRun: #DrivingSystemModeTests #test04CannotCreateSemiAutomaticModeWithNegativeVelocity stamp: 'pau 7/6/2023 21:46:11'!
PASSED!

!testRun: #DrivingSystemModeTests #test05CannotCreateSemiAutomaticModeWithZeroVelocity stamp: 'pau 7/6/2023 21:46:11'!
PASSED!

!testRun: #DrivingAssistantTests #test01WhenCarIsTurnedOnWithTheDrivingAssistantOnManualModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test02WhenCarIsTurnedOnWhitTheDrivingAssistantOnAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test03WhenCarIsTurnedOnWhitTheDrivingAssistantOnSemiAutomaticModeTheInitialStateIsCorrect stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test04OnManualModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test07OnAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThan2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test08OnAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test09OnAutomaticModeDrivingAssistantOnAutomaticIsOnDangerModeWithObjectAtLessThatDMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test10OnSemiAutomaticModeDrivingAssistantIsOnSafeModeWithObjectAtMoreThat2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test14DrivingAssistantOnAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:46:13'!
PASSED!

!testRun: #DrivingAssistantTests #test15DrivingAssistantOnSemiAutomaticModeIsOnDangerZoneAndMovesToSafeZoneWithObjectiveVelocity stamp: 'pau 7/6/2023 21:46:13'!
PASSED!
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:48'!
assertDrinvingSystemIsOnWarning

	^ self assert:  (beep = #warning)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:48' prior: 50638040!
test05OnManualModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	self setSensorSystemWith: (ReadStream on: {50*kilometer /hour .})  andWith: (ReadStream on: {20*meter}). 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrinvingSystemIsOnWarning.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:46:48' prior: 50637904!
test11OnSemiAutomaticModeDrivingAssistantIsOnWarningModeWithObjectAtLessThan2DMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {15*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnWarning).  
	self deny: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (45*kilometer/hour). 
	self assertDrinvingSystemIsOnWarning.  
	self assert: (throttle = #off). 
	self assertDrivingSystemBrakesAreOff. 
	
	
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:47:08'!
assertDrivingSystemBeepIsOnDanger

	^ self assert:  (beep = #danger)! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:47:08' prior: 50637879!
test13DrivingAssistantOnManualModeIsOnSafeZoneAndMovesToDangerZoneWhenObjectClose

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour . 70*kilometer/hour}. 
	proximity :=  ReadStream on: {100000000*meter. 10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (70*kilometer /hour). 
	
	self assert:  (drivingAssistant beepIsOnDanger ).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrivingSystemBeepIsOnDanger.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. ! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:47:08' prior: 50638064!
test06OnManualModeDrivingAssistantIsOnDangerModeWithObjectAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour .}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := self manualDrivingAssistant . 
	
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self assert: (drivingAssistant throttleIsConnected). 
	self deny: (drivingAssistant brakesAreApplied). 
	
	self assertDrivingSystemBeepIsOnDanger.  
	self assertDrivingSystemThrottleIsOn. 
	self assertDrivingSystemBrakesAreOff. 
	
	
	! !
!DrivingAssistantTests methodsFor: 'tests' stamp: 'pau 7/6/2023 21:47:08' prior: 50637321!
test12OnSemiAutomaticModeDrivingAssistantIsOnDangerModeWhenObjectIsAtLessThanDMF

	| drivingAssistant |
	
	velocity := ReadStream on: {50*kilometer /hour.}. 
	proximity :=  ReadStream on: {10*meter}. 
	
	drivingAssistant := DrivingAssistant onMode: (self semiAutomaticModeWithObjectiveVelocityOf20kmxHour) withSensorSystem: self withDrivingSystem: self. 
	 
	drivingAssistant tick. 
	
	self assert: (drivingAssistant actualVelocity) equals: (50*kilometer /hour). 
	
	self assert: (drivingAssistant beepIsOnDanger).  
	self deny: (drivingAssistant throttleIsConnected). 
	self assert: (drivingAssistant brakesAreApplied). 
	
	
	self assert: speedToKeep equals: (40*kilometer/hour). 
	self assertDrivingSystemBeepIsOnDanger.  
	self assert: (throttle = #off). 
	self assert: (brakes = #on). 
	
	
	
	
	! !

----SNAPSHOT----(6 July 2023 21:47:44) CuisUniversity-5832.image priorSource: 9726111!